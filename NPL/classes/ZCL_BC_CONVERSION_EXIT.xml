<?xml version="1.0"?><CLASS_ROOT><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Classe di conversione campi</DESCRIPT><UUID>AA06IXQoHuaB2aN5oEl7MA==</UUID><CATEGORY>00</CATEGORY><EXPOSURE>2</EXPOSURE><STATE>1</STATE><RELEASE>0</RELEASE><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><CHGDANYON>0000-00-00</CHGDANYON><CLSFINAL>X</CLSFINAL><CLSCCINCL>X</CLSCCINCL><FIXPT>X</FIXPT><UNICODE>X</UNICODE><R3RELEASE>751</R3RELEASE><CLSBCCAT>00</CLSBCCAT><DURATION_TYPE>0</DURATION_TYPE><RISK_LEVEL>0</RISK_LEVEL><ATTRIBUTES><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>C_INPUT</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Converti in formato interno SAP</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><ATTDECLTYP>2</ATTDECLTYP><ATTVALUE>&apos;INPUT&apos;</ATTVALUE><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>751</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>C_OUTPUT</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Converti in formato esterno SAP</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><ATTDECLTYP>2</ATTDECLTYP><ATTVALUE>&apos;OUTPUT&apos;</ATTVALUE><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>751</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item></ATTRIBUTES><METHODS><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_OUTPUT</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Metodo conversione in formato esterno SAP</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>1</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_INPUT</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Metodo conversione in formato interno SAP</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>1</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Metodo conversione generico</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>1</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_FIELD</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Metodo conversione campo</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>1</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_STRUCT</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Metodo conversione struttura</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>1</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_TABLE</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Metodo conversione tabella</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>1</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item></METHODS><EVENTS/><TYPES/><PARAMETERS><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION</CMPNAME><SCONAME>IV_TYPE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Tipo conversione input/output</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION</CMPNAME><SCONAME>IV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico da convertire</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION</CMPNAME><SCONAME>CV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico convertito</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_FIELD</CMPNAME><SCONAME>IV_TYPE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Tipo conversione input/output</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_FIELD</CMPNAME><SCONAME>IV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico da convertire</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_FIELD</CMPNAME><SCONAME>CV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico convertito</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_INPUT</CMPNAME><SCONAME>IV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico da convertire</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_INPUT</CMPNAME><SCONAME>CV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico convertito</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_OUTPUT</CMPNAME><SCONAME>IV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico da convertire</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_OUTPUT</CMPNAME><SCONAME>CV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Oggetto generico convertito</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_STRUCT</CMPNAME><SCONAME>IV_TYPE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Tipo conversione input/output</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_STRUCT</CMPNAME><SCONAME>IS_STRUCT</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_STRUCT</CMPNAME><SCONAME>CS_STRUCT</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_TABLE</CMPNAME><SCONAME>IV_TYPE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Tipo conversione input/output</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_TABLE</CMPNAME><SCONAME>IT_TABLE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_BC_CONVERSION_EXIT</CLSNAME><CMPNAME>CONVERSION_TABLE</CMPNAME><SCONAME>CT_TABLE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-20</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-21</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item></PARAMETERS><EXCEPTIONS/><IMPLEMENTINGS/><IMPL_DETAILS/><FRIENDSHIPS/><TYPEPUSAGES/><CLSDEFERRDS/><INTDEFERRDS/><ALIASES/><INHERITANCE><VERSION>0</VERSION><STATE>0</STATE><CREATEDON>0000-00-00</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON></INHERITANCE><INTERFACES/><REDEFINITIONS/><TYPE_SOURCE/><LOCALS_SRC/><LOCALS_DEF><item>*&quot;* use this source file for any type of declarations (class</item><item>*&quot;* definitions, interfaces or type declarations) you need for</item><item>*&quot;* components in the private section</item><item/></LOCALS_DEF><LOCALS_IMP><item>*&quot;* use this source file for the definition and implementation of</item><item>*&quot;* local helper classes, interface definitions and type</item><item>*&quot;* declarations</item><item/></LOCALS_IMP><LOCALS_MAC><item>*&quot;* use this source file for any macro definitions you need</item><item>*&quot;* in the implementation part of the class</item><item/></LOCALS_MAC><TEXT_POOL/><METHOD_SOURCE><CONVERSION><item>  METHOD conversion.</item><item>    DATA: lo_data_descr   TYPE REF TO cl_abap_datadescr.</item><item/><item>    CLEAR: cv_field.</item><item>    IF ( NOT iv_field IS INITIAL ).</item><item>      TRY.</item><item>          lo_data_descr   ?= cl_abap_datadescr=&gt;describe_by_data( iv_field ).</item><item>        CATCH cx_sy_move_cast_error.</item><item>      ENDTRY.</item><item/><item>      IF ( lo_data_descr IS BOUND ).</item><item>*        DATA: lv_data_type_kind TYPE string.</item><item>*        lv_data_type_kind = lo_data_descr-&gt;get_data_type_kind( iv_field ).</item><item>*</item><item>*        IF ( lo_data_descr-&gt;get_data_type_kind( iv_field ) = lo_data_descr-&gt;typekind_struct1 OR</item><item>*             lo_data_descr-&gt;get_data_type_kind( iv_field ) = lo_data_descr-&gt;typekind_struct2 ).</item><item>*          conversion_struct( EXPORTING iv_type  = iv_type</item><item>*                                       is_struct = iv_field</item><item>*                             CHANGING  cs_struct = cv_field ).</item><item>*        ELSEIF ( lo_data_descr-&gt;get_data_type_kind( iv_field ) = lo_data_descr-&gt;typekind_table ).</item><item>*          conversion_table( EXPORTING iv_type  = iv_type</item><item>*                                      it_table = iv_field</item><item>*                            CHANGING  ct_table = cv_field ).</item><item>*        ELSEIF ( lo_data_descr-&gt;get_data_type_kind( iv_field ) &lt;&gt; lo_data_descr-&gt;undefined ).</item><item>*          conversion_field( EXPORTING iv_type  = iv_type</item><item>*                                      iv_field = iv_field</item><item>*                            CHANGING  cv_field = cv_field ).</item><item>*        ENDIF.</item><item/><item>        IF ( lo_data_descr IS INSTANCE OF cl_abap_tabledescr ).</item><item>          conversion_table( EXPORTING iv_type  = iv_type</item><item>                                      it_table = iv_field</item><item>                            CHANGING  ct_table = cv_field ).</item><item>        ELSEIF ( lo_data_descr IS INSTANCE OF cl_abap_structdescr ).</item><item>          conversion_struct( EXPORTING iv_type  = iv_type</item><item>                                       is_struct = iv_field</item><item>                             CHANGING  cs_struct = cv_field ).</item><item>        ELSEIF ( lo_data_descr IS INSTANCE OF cl_abap_datadescr ).</item><item>          conversion_field( EXPORTING iv_type  = iv_type</item><item>                                      iv_field = iv_field</item><item>                            CHANGING  cv_field = cv_field ).</item><item>        ENDIF.</item><item>      ENDIF.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CONVERSION><CONVERSION_FIELD><item>  METHOD conversion_field.</item><item>    DATA: lo_elem_descr TYPE REF TO cl_abap_elemdescr.</item><item/><item>    TRY.</item><item>        IF ( iv_type = c_input ).</item><item>          lo_elem_descr   ?= cl_abap_elemdescr=&gt;describe_by_data( cv_field ).</item><item>        ELSEIF ( iv_type = c_output ).</item><item>          lo_elem_descr   ?= cl_abap_elemdescr=&gt;describe_by_data( iv_field ).</item><item>        ENDIF.</item><item>      CATCH cx_sy_move_cast_error.</item><item>    ENDTRY.</item><item/><item>    DATA: lv_func     TYPE rs38l_fnam.</item><item>    CLEAR: lv_func.</item><item/><item>    IF ( lo_elem_descr IS BOUND ).</item><item>      IF ( NOT lo_elem_descr-&gt;edit_mask IS INITIAL ).</item><item>        lv_func = &apos;CONVERSION_EXIT_&apos; &amp;&amp; lo_elem_descr-&gt;edit_mask+2 &amp;&amp; &apos;_&apos; &amp;&amp; iv_type.</item><item>        CONDENSE lv_func.</item><item>        CALL FUNCTION &apos;FUNCTION_EXISTS&apos;</item><item>          EXPORTING</item><item>            funcname           = lv_func</item><item>          EXCEPTIONS</item><item>            function_not_exist = 1</item><item>            OTHERS             = 2.</item><item>        IF ( sy-subrc = 0 ).</item><item>          CALL FUNCTION lv_func</item><item>            EXPORTING</item><item>              input  = iv_field</item><item>            IMPORTING</item><item>              output = cv_field</item><item>            EXCEPTIONS</item><item>              OTHERS = 1.</item><item>        ENDIF.</item><item>      ELSE.</item><item>        CASE lo_elem_descr-&gt;get_data_type_kind( iv_field ).</item><item>          WHEN &apos;D&apos; OR &apos;T&apos;.   &quot; date or time</item><item>            DATA: lv_value TYPE c LENGTH 100.</item><item>            WRITE iv_field TO lv_value.</item><item>            cv_field = lv_value.</item><item>          WHEN &apos;C&apos;.</item><item>            IF ( lo_elem_descr-&gt;absolute_name+6 = &apos;UDTIME&apos; ).</item><item>              DATA: lv_uzeit TYPE uzeit.</item><item>              lv_uzeit = iv_field.</item><item>              WRITE lv_uzeit TO lv_value.</item><item>              cv_field = lv_value.</item><item>            ELSE.</item><item>              cv_field = iv_field.</item><item>            ENDIF.</item><item>          WHEN OTHERS.</item><item>            cv_field = iv_field.</item><item>        ENDCASE.</item><item>      ENDIF.</item><item>    ELSE.</item><item>      &quot; gestire eccezione. Crearla o utilizzare una esistente.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CONVERSION_FIELD><CONVERSION_STRUCT><item>  METHOD conversion_struct.</item><item>    DATA: lo_struct_descr TYPE REF TO cl_abap_structdescr,</item><item>          ls_components   TYPE abap_compdescr,</item><item>          ty_s_data       TYPE REF TO cl_abap_structdescr,</item><item>          ty_t_data       TYPE REF TO cl_abap_tabledescr,</item><item>          ldref           TYPE REF TO data,</item><item>          lv_input        TYPE string,</item><item>          lv_output       TYPE string.</item><item/><item>    FIELD-SYMBOLS: &lt;input&gt;  TYPE any,</item><item>                   &lt;output&gt; TYPE any.</item><item/><item>    &quot;Create Dynamic table using component table</item><item>*    ty_s_data = cl_abap_structdescr=&gt;create( is_struct ).</item><item>    TRY.</item><item>        lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( is_struct ).</item><item>*         lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( is_struct ).</item><item>        LOOP AT lo_struct_descr-&gt;components INTO ls_components.</item><item>          lv_input = &apos;is_struct-&apos; &amp;&amp; ls_components-name.</item><item>          ASSIGN (lv_input) TO &lt;input&gt;.</item><item>          IF ( sy-subrc &lt;&gt; 0 ).</item><item>            CONTINUE.</item><item>          ENDIF.</item><item>          lv_output = &apos;cs_struct-&apos; &amp;&amp; ls_components-name.</item><item>          ASSIGN (lv_output) TO &lt;output&gt;.</item><item>          IF ( sy-subrc &lt;&gt; 0 ).</item><item>            CONTINUE.</item><item>          ENDIF.</item><item>          conversion( EXPORTING iv_type  = iv_type</item><item>                                iv_field = &lt;input&gt;</item><item>                      CHANGING  cv_field = &lt;output&gt; ).</item><item>        ENDLOOP.</item><item>      CATCH cx_sy_move_cast_error.</item><item>    ENDTRY.</item><item>  ENDMETHOD.</item></CONVERSION_STRUCT><CONVERSION_TABLE><item>  METHOD conversion_table.</item><item>    DATA: lo_table_descr  TYPE REF TO cl_abap_tabledescr,</item><item>          lo_struct_descr TYPE REF TO cl_abap_structdescr,</item><item>          ls_components   TYPE abap_compdescr,</item><item>          ty_s_data       TYPE REF TO cl_abap_structdescr,</item><item>          ty_t_data       TYPE REF TO cl_abap_tabledescr,</item><item>          ldref           TYPE REF TO data,</item><item>          lv_input        TYPE string,</item><item>          lv_output       TYPE string.</item><item/><item>    FIELD-SYMBOLS: &lt;lt_table&gt; TYPE table,</item><item>                   &lt;ls_table&gt; TYPE any,</item><item>                   &lt;cs_table&gt; TYPE any.</item><item/><item>    TRY.</item><item>        lo_table_descr  ?= cl_abap_tabledescr=&gt;describe_by_data( it_table ).</item><item>      CATCH cx_sy_move_cast_error.</item><item>    ENDTRY.</item><item/><item>    ASSIGN (&apos;it_table&apos;) TO &lt;lt_table&gt;.</item><item>    IF ( sy-subrc &lt;&gt; 0 ).</item><item>      RETURN.</item><item>    ENDIF.</item><item/><item>    REFRESH: ct_table.</item><item/><item>    TRY.</item><item>        LOOP AT &lt;lt_table&gt; ASSIGNING &lt;ls_table&gt;.</item><item>          TRY.</item><item>              lo_struct_descr  ?= cl_abap_tabledescr=&gt;describe_by_data( &lt;ls_table&gt; ).</item><item>            CATCH cx_sy_move_cast_error.</item><item>          ENDTRY.</item><item>          CREATE DATA ldref LIKE &lt;ls_table&gt;.</item><item>          ASSIGN ldref-&gt;* TO &lt;cs_table&gt;.</item><item>          &lt;cs_table&gt; = &lt;ls_table&gt;.</item><item>          conversion( EXPORTING iv_type  = iv_type</item><item>                                iv_field = &lt;ls_table&gt;</item><item>                      CHANGING  cv_field = &lt;cs_table&gt; ).</item><item>          APPEND &lt;cs_table&gt; TO ct_table.</item><item>        ENDLOOP.</item><item>      CATCH cx_sy_move_cast_error.</item><item>    ENDTRY.</item><item>  ENDMETHOD.</item></CONVERSION_TABLE><CONVERSION_INPUT><item>  METHOD conversion_input.</item><item>    conversion( EXPORTING iv_type  = c_input</item><item>                          iv_field = iv_field</item><item>                CHANGING  cv_field = cv_field ).</item><item>  ENDMETHOD.</item></CONVERSION_INPUT><CONVERSION_OUTPUT><item>  METHOD CONVERSION_OUTPUT.</item><item>    conversion( EXPORTING iv_type  = c_output</item><item>                          iv_field = iv_field</item><item>                CHANGING  cv_field = cv_field ).</item><item>  ENDMETHOD.</item></CONVERSION_OUTPUT></METHOD_SOURCE></CLASS_ROOT>