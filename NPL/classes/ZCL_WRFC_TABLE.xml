<?xml version="1.0"?><CLASS_ROOT><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Get DDIC table data</DESCRIPT><UUID>CAAn5KebHuijstJ/jl8KFw==</UUID><CATEGORY>00</CATEGORY><EXPOSURE>2</EXPOSURE><STATE>1</STATE><RELEASE>0</RELEASE><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><CHGDANYON>0000-00-00</CHGDANYON><CLSFINAL>X</CLSFINAL><CLSCCINCL>X</CLSCCINCL><FIXPT>X</FIXPT><UNICODE>X</UNICODE><R3RELEASE>751</R3RELEASE><CLSBCCAT>00</CLSBCCAT><DURATION_TYPE>0</DURATION_TYPE><RISK_LEVEL>0</RISK_LEVEL><ATTRIBUTES><item><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><CMPNAME>GV_TABLE</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Control Structure for Testing the Table Name (Apart fr. SAA)</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TABLENAME</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>751</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><CMPNAME>GV_WHERE</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-23</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>751</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item></ATTRIBUTES><METHODS><item><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Constructor</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>2</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><CMPNAME>GET_DATA</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Get table data</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-23</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item></METHODS><EVENTS/><TYPES/><PARAMETERS><item><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IT_QUERY</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Query Table</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>RRXW3TQUERY</TYPE></item></PARAMETERS><EXCEPTIONS><item><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item></EXCEPTIONS><IMPLEMENTINGS/><IMPL_DETAILS/><FRIENDSHIPS/><TYPEPUSAGES/><CLSDEFERRDS/><INTDEFERRDS/><ALIASES/><INHERITANCE><CLSNAME>ZCL_WRFC_TABLE</CLSNAME><REFCLSNAME>ZCL_WRFC_CORE</REFCLSNAME><VERSION>1</VERSION><STATE>1</STATE><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON></INHERITANCE><INTERFACES/><REDEFINITIONS/><TYPE_SOURCE/><LOCALS_SRC/><LOCALS_DEF><item>*&quot;* use this source file for any type of declarations (class</item><item>*&quot;* definitions, interfaces or type declarations) you need for</item><item>*&quot;* components in the private section</item><item/></LOCALS_DEF><LOCALS_IMP><item>*&quot;* use this source file for the definition and implementation of</item><item>*&quot;* local helper classes, interface definitions and type</item><item>*&quot;* declarations</item><item/></LOCALS_IMP><LOCALS_MAC><item>*&quot;* use this source file for any macro definitions you need</item><item>*&quot;* in the implementation part of the class</item><item/></LOCALS_MAC><TEXT_POOL/><METHOD_SOURCE><CONSTRUCTOR><item>  METHOD CONSTRUCTOR.</item><item>    super-&gt;constructor( it_query = it_query ).</item><item/><item>    TRY.</item><item>        gv_table = gt_query[ name = c_param_sqltable ]-value.</item><item>      CATCH cx_root.</item><item>        MESSAGE s002(z_webrfc) INTO DATA(lv_msg).</item><item>        add_message( iv_type = &apos;E&apos; iv_msg = lv_msg ).</item><item>    ENDTRY.</item><item/><item>    TRY.</item><item>        gv_where = gt_query[ name = c_param_sqlwhere ]-value.</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item/><item>*    TRY.</item><item>*        gv_fields = gt_query[ name = c_param_fields ]-value.</item><item>*      CATCH cx_root.</item><item>*    ENDTRY.</item><item>  ENDMETHOD.</item></CONSTRUCTOR><GET_DATA><item>  METHOD get_data.</item><item>*    TRY.</item><item>*        DATA: lt_fm_parameters TYPE zbc_ty_t_fm_parameters.</item><item>*        REFRESH: lt_fm_parameters.</item><item>*        LOOP AT gt_query INTO DATA(ls_query).</item><item>*          DATA: ls_fm_parameters TYPE zbc_ty_s_fm_parameters.</item><item>*          MOVE-CORRESPONDING ls_query TO ls_fm_parameters.</item><item>*          APPEND ls_fm_parameters TO lt_fm_parameters.</item><item>*        ENDLOOP.</item><item>*        DATA: lv_name  TYPE eu_lname.</item><item>**        lv_name = gt_query[ name = c_param_method ]-value.</item><item>*        lv_name = gv_method.</item><item>*        DATA(lo_function) = NEW zcl_bc_function_module( iv_method     = lv_name</item><item>*                                                        it_parameters = lt_fm_parameters ).</item><item>*        DATA: ls_results TYPE zbc_ty_s_fm_results.</item><item>*        CLEAR: ls_results.</item><item>*</item><item>*        DATA(lo_jsonp) = NEW zcl_wrfc_jsonp( iv_callback = gv_callback</item><item>*                                             io_function = lo_function</item><item>*                                             is_results  = ls_results</item><item>*                                             it_fields   = gt_fields</item><item>*                                             it_messages = gt_messages[]</item><item>*                                             iv_from_rec = gv_from_rec</item><item>*                                             iv_to_rec   = gv_to_rec</item><item>*                                             iv_camel_case = gv_camel_case</item><item>*                                             iv_escape_url = gv_escape_url ).</item><item>*        lo_jsonp-&gt;build_interface( ).</item><item>*        gt_html[] = lo_jsonp-&gt;get_json_table( ).</item><item>*        DATA(lv_jsonpp) = lo_jsonp-&gt;get_json_string( ).</item><item>*</item><item>*      CATCH zcx_bc_exception INTO DATA(lx_exception).</item><item>*        add_message( iv_type = &apos;E&apos; iv_msg = lx_exception-&gt;get_text( ) ).</item><item>*</item><item>*        DATA(lo_jsonp_err) = NEW zcl_wrfc_jsonp( iv_callback = gv_callback</item><item>*                                                 io_function = lo_function</item><item>*                                                 is_results  = ls_results</item><item>*                                                 it_fields   = gt_fields</item><item>*                                                 it_messages = gt_messages[]</item><item>*                                                 iv_from_rec = gv_from_rec</item><item>*                                                 iv_to_rec   = gv_to_rec</item><item>*                                                 iv_camel_case = gv_camel_case</item><item>*                                                 iv_escape_url = gv_escape_url ).</item><item>*        lo_jsonp_err-&gt;build_errors( ).</item><item>*        gt_html[] = lo_jsonp_err-&gt;get_json_table( ).</item><item>*        DATA(lv_jsonp) = lo_jsonp_err-&gt;get_json_string( ).</item><item>*</item><item>*    ENDTRY.</item><item>  ENDMETHOD.</item></GET_DATA></METHOD_SOURCE></CLASS_ROOT>