<?xml version="1.0"?><CLASS_ROOT><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>JSONP class</DESCRIPT><UUID>CAAn5KebHuiX19chl1aZHg==</UUID><CATEGORY>00</CATEGORY><EXPOSURE>2</EXPOSURE><STATE>1</STATE><RELEASE>0</RELEASE><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><CHGDANYON>0000-00-00</CHGDANYON><CLSFINAL>X</CLSFINAL><CLSCCINCL>X</CLSCCINCL><FIXPT>X</FIXPT><UNICODE>X</UNICODE><R3RELEASE>751</R3RELEASE><CLSBCCAT>00</CLSBCCAT><DURATION_TYPE>0</DURATION_TYPE><RISK_LEVEL>0</RISK_LEVEL><ATTRIBUTES><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GV_CALLBACK</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Callback function</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GV_JSONP</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Jsonp string</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GT_JSONP</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Table for HTML File</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>W3HTMLTAB</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GS_RESULTS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Function module results</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-26</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>ZBC_TY_S_FM_RESULTS</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GO_FUNCTION</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Function utility</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>3</TYPTYPE><TYPE>ZCL_BC_FUNCTION_MODULE</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GT_DICTIONARY</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_DICTIONARY</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GT_FIELDS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_FIELDS</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GV_FROM_REC</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GV_TO_REC</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GV_CAMEL_CASE</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GT_MESSAGES</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-08</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_MESSAGES</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GV_ESCAPE_URL</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>751</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item></ATTRIBUTES><METHODS><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Constructor</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><MTDTYPE>2</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GET_JSON_TABLE</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Get jsonp table</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-03</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GET_JSON_STRING</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Get jsonp string</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-03</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Build json</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-03</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_ERRORS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Build errors json</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-03</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_INTERFACE</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Build interface function module json</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>OPEN_CALLBACK</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Open callback key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CLOSE_CALLBACK</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Close callback key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>REMOVE_EXTRA_COMMA</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Remove redundant comma</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>OPEN_RESULTS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Open results key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-26</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CLOSE_RESULTS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Close results key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-26</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Builds results</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-26</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_ROW_RESULTS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Add row results</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>DICTIONARY</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Add dictionary</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_TO_DICTIONARY</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Add row table result</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-17</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CAMEL_CASE</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Replace variable in camel case</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>OPEN_ERRORS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Open errors key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-08</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CLOSE_ERRORS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Close errors key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-08</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_ERRS</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Build errors messages</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>13</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-08</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_SYSTEM_INFO</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Build system informations</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>14</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-12</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_USER_INFO</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Build user informations</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>15</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-12</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>OPEN_KEY</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Open key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>16</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-13</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CLOSE_KEY</CMPNAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Close key</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>17</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-13</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-07-13</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>751</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item></METHODS><EVENTS/><TYPES/><PARAMETERS><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_ROW_RESULTS</CMPNAME><SCONAME>IS_DATA</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_ROW_RESULTS</CMPNAME><SCONAME>IS_COMPONENTS</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-07-13</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_COMPONENTDESCR</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_ROW_RESULTS</CMPNAME><SCONAME>IV_COMMA</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Link field for view query</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>BOOL</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_ROW_RESULTS</CMPNAME><SCONAME>CT_JSONP</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Table for HTML File</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>W3HTMLTAB</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_ROW_RESULTS</CMPNAME><SCONAME>CT_DICTIONARY</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_DICTIONARY</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_TO_DICTIONARY</CMPNAME><SCONAME>IV_NAME</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_TO_DICTIONARY</CMPNAME><SCONAME>IV_VALUE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-17</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_TO_DICTIONARY</CMPNAME><SCONAME>IV_FIELD</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-17</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_TO_DICTIONARY</CMPNAME><SCONAME>CT_DICTIONARY</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-27</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_DICTIONARY</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><SCONAME>IV_SNAME</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-31</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_PARMNAME</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><SCONAME>IV_DATA</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ANY</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><SCONAME>IT_FIELDS</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><SCONAME>IV_FROM_REC</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><SCONAME>IV_TO_REC</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><SCONAME>CT_JSONP</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Table for HTML File</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-27</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-27</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>W3HTMLTAB</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>BUILD_RESULTS</CMPNAME><SCONAME>CT_DICTIONARY</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-27</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-27</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_DICTIONARY</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CAMEL_CASE</CMPNAME><SCONAME>CV_STR_NAME</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_CALLBACK</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Callback function</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-05-23</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IS_RESULTS</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-23</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZBC_TY_S_FM_RESULTS</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IO_FUNCTION</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Function utility</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>3</TYPTYPE><TYPE>ZCL_BC_FUNCTION_MODULE</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IT_FIELDS</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_FIELDS</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IT_MESSAGES</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZWRFC_TY_T_MESSAGES</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_FROM_REC</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_TO_REC</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-26</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-08</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_CAMEL_CASE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-09</CREATEDON><CHANGEDBY>DEVELOPER</CHANGEDBY><CHANGEDON>2018-06-09</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_ESCAPE_URL</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GET_JSON_STRING</CMPNAME><SCONAME>RV_JSON_STRING</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>GET_JSON_TABLE</CMPNAME><SCONAME>RT_TABLE</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Table for HTML File</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-05-31</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>W3HTMLTAB</TYPE></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>OPEN_KEY</CMPNAME><SCONAME>IV_NAME</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-07-13</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item></PARAMETERS><EXCEPTIONS><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><CMPNAME>ADD_TO_DICTIONARY</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>E</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>DEVELOPER</AUTHOR><CREATEDON>2018-06-17</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item></EXCEPTIONS><IMPLEMENTINGS/><IMPL_DETAILS/><FRIENDSHIPS/><TYPEPUSAGES><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><TYPEGROUP>ABAP</TYPEGROUP><VERSION>1</VERSION><TPUTYPE>0</TPUTYPE><IMPLICIT>X</IMPLICIT></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><TYPEGROUP>ZBC</TYPEGROUP><VERSION>1</VERSION><TPUTYPE>0</TPUTYPE><IMPLICIT>X</IMPLICIT></item><item><CLSNAME>ZCL_WRFC_JSONP</CLSNAME><TYPEGROUP>ZWRFC</TYPEGROUP><VERSION>1</VERSION><TPUTYPE>0</TPUTYPE><IMPLICIT>X</IMPLICIT></item></TYPEPUSAGES><CLSDEFERRDS/><INTDEFERRDS/><ALIASES/><INHERITANCE><VERSION>0</VERSION><STATE>0</STATE><CREATEDON>0000-00-00</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON></INHERITANCE><INTERFACES/><REDEFINITIONS/><TYPE_SOURCE/><LOCALS_SRC/><LOCALS_DEF><item>*&quot;* use this source file for any type of declarations (class</item><item>*&quot;* definitions, interfaces or type declarations) you need for</item><item>*&quot;* components in the private section</item><item/></LOCALS_DEF><LOCALS_IMP><item>*&quot;* use this source file for the definition and implementation of</item><item>*&quot;* local helper classes, interface definitions and type</item><item>*&quot;* declarations</item><item/></LOCALS_IMP><LOCALS_MAC><item>*&quot;* use this source file for any macro definitions you need</item><item>*&quot;* in the implementation part of the class</item><item/></LOCALS_MAC><TEXT_POOL/><METHOD_SOURCE><CONSTRUCTOR><item>  METHOD constructor.</item><item>    gv_callback   = iv_callback.</item><item>    gs_results    = is_results.</item><item>    go_function   = io_function.</item><item>    gt_fields[]   = it_fields[].</item><item>    gt_messages[] = it_messages[].</item><item>    gv_from_rec   = iv_from_rec.</item><item>    gv_to_rec     = iv_to_rec.</item><item>    gv_camel_case = iv_camel_case.</item><item>    gv_escape_url = iv_escape_url.</item><item>    CLEAR: gv_jsonp, gt_jsonp, gt_dictionary.</item><item>    TRANSLATE gv_camel_case TO LOWER CASE.</item><item>  ENDMETHOD.</item></CONSTRUCTOR><OPEN_CALLBACK><item>  METHOD open_callback.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    CLEAR: ls_jsonp.</item><item>    IF ( NOT gv_callback IS INITIAL ).</item><item>      ls_jsonp-line = gv_callback &amp;&amp; &apos;({&apos;.</item><item>    ELSE.</item><item>      ls_jsonp-line = &apos;{&apos;.</item><item>    ENDIF.</item><item>    gv_jsonp = ls_jsonp-line.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></OPEN_CALLBACK><CLOSE_CALLBACK><item>  METHOD close_callback.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    remove_extra_comma( ).</item><item/><item>    IF ( NOT gv_callback IS INITIAL ).</item><item>      ls_jsonp = &apos;});&apos;.</item><item>    ELSE.</item><item>      ls_jsonp = &apos;}&apos;.</item><item>    ENDIF.</item><item>    gv_jsonp = gv_jsonp &amp;&amp; ls_jsonp-line.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></CLOSE_CALLBACK><REMOVE_EXTRA_COMMA><item>  METHOD remove_extra_comma.</item><item>    DATA: ls_jsonp TYPE w3html,</item><item>          lv_len   TYPE i,</item><item>          lv_lines TYPE i.</item><item/><item>    DESCRIBE TABLE gt_jsonp LINES lv_lines.</item><item>    IF ( lv_lines &gt; 0 ).</item><item>      READ TABLE gt_jsonp INTO ls_jsonp INDEX lv_lines.</item><item>      lv_len = strlen( ls_jsonp ) - 1.</item><item>      IF ( ls_jsonp+lv_len(1) = &apos;,&apos; ).</item><item>        ls_jsonp+lv_len(1) = &apos;&apos;.</item><item>      ENDIF.</item><item>      MODIFY gt_jsonp FROM ls_jsonp INDEX lv_lines.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></REMOVE_EXTRA_COMMA><CLOSE_RESULTS><item>  METHOD close_results.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    remove_extra_comma( ).</item><item/><item>    ls_jsonp = &apos;}&apos;.</item><item>    gv_jsonp = gv_jsonp &amp;&amp; ls_jsonp-line.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></CLOSE_RESULTS><OPEN_RESULTS><item>  METHOD open_results.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    ls_jsonp = &apos;&quot;results&quot;: {&apos;.</item><item>    gv_jsonp = gv_jsonp &amp;&amp; ls_jsonp-line.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></OPEN_RESULTS><BUILD><item>  METHOD build.</item><item>    CLEAR: gv_jsonp, gt_jsonp, gt_dictionary.</item><item/><item>    open_callback( ).</item><item>    open_results( ).</item><item/><item>    DATA: ls_jsonp        TYPE w3html,</item><item>          lo_struct_descr TYPE REF TO cl_abap_structdescr.</item><item>    CLEAR: ls_jsonp.</item><item>    LOOP AT gs_results-t_params INTO DATA(ls_params).</item><item>      DATA: ls_tables TYPE rsfbpara.</item><item>      FIELD-SYMBOLS: &lt;ls_data&gt; TYPE any,</item><item>                     &lt;lt_data&gt; TYPE ANY TABLE,</item><item>                     &lt;lv_data&gt; TYPE any.</item><item>      READ TABLE go_function-&gt;get_interface( )-tables WITH KEY parameter = ls_params-name INTO ls_tables.</item><item>      IF ( sy-subrc = 0 ).</item><item>        DATA(lv_sname) = ls_params-name.</item><item>        TRY.</item><item>            ASSIGN ls_params-value-&gt;* TO &lt;lt_data&gt;.</item><item>            LOOP AT &lt;lt_data&gt; ASSIGNING &lt;ls_data&gt;.</item><item>              EXIT.</item><item>            ENDLOOP.</item><item>            IF ( sy-subrc &lt;&gt; 0 ).   &quot; tabella vuota</item><item>              ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; lv_sname &amp;&amp; &apos;&quot;: [],&apos;.</item><item>              APPEND ls_jsonp TO gt_jsonp.</item><item>              CONTINUE.</item><item>            ENDIF.</item><item>            lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item>          CATCH cx_root.</item><item>        ENDTRY.</item><item/><item>        &quot; costruisce results</item><item>        build_results( EXPORTING iv_sname    = lv_sname</item><item>                                 iv_data     = &lt;lt_data&gt;[]</item><item>                                 it_fields   = gt_fields[]</item><item>                                 iv_from_rec = gv_from_rec</item><item>                                 iv_to_rec   = gv_to_rec</item><item>                       CHANGING ct_jsonp      = gt_jsonp</item><item>                                ct_dictionary = gt_dictionary ).</item><item/><item/><item>      ENDIF.</item><item>      READ TABLE go_function-&gt;get_interface( )-export WITH KEY parameter = ls_params-name TRANSPORTING NO FIELDS.</item><item>      IF ( sy-subrc = 0 ).</item><item>        lv_sname = ls_params-name.</item><item>        TRY.</item><item>            ASSIGN ls_params-value-&gt;* TO &lt;ls_data&gt;.</item><item>            DATA: lo_table_descr TYPE REF TO cl_abap_tabledescr.</item><item>            lo_table_descr ?= cl_abap_tabledescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item>            &quot; costruisce results</item><item>            build_results( EXPORTING iv_sname    = lv_sname</item><item>                                     iv_data     =   &lt;ls_data&gt;</item><item>                                     it_fields   = gt_fields[]</item><item>                                     iv_from_rec = gv_from_rec</item><item>                                     iv_to_rec   = gv_to_rec</item><item>                           CHANGING ct_jsonp      = gt_jsonp</item><item>                                    ct_dictionary = gt_dictionary ).</item><item/><item>          CATCH cx_root.</item><item>            TRY.</item><item>                ASSIGN ls_params-value-&gt;* TO &lt;ls_data&gt;.</item><item>                lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item/><item>                build_results( EXPORTING iv_sname = lv_sname</item><item>                                         iv_data  = &lt;ls_data&gt;</item><item>                                         it_fields = gt_fields[]</item><item>                                         iv_from_rec = gv_from_rec</item><item>                                         iv_to_rec = gv_to_rec</item><item>                        CHANGING ct_jsonp = gt_jsonp</item><item>                                 ct_dictionary = gt_dictionary  ).</item><item>              CATCH cx_root.</item><item>                TRY.</item><item>                    ASSIGN ls_params-value-&gt;* TO &lt;ls_data&gt;.</item><item>                    DATA: lo_data_descr TYPE REF TO cl_abap_datadescr.</item><item>                    lo_data_descr ?= cl_abap_datadescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item/><item>                    ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; lv_sname &amp;&amp; &apos;&quot;:&quot;&apos; &amp;&amp; &lt;ls_data&gt; &amp;&amp; &apos;&quot;,&apos;.</item><item>                    APPEND ls_jsonp TO gt_jsonp.</item><item>                  CATCH cx_root.</item><item>                ENDTRY.</item><item>            ENDTRY.</item><item>        ENDTRY.</item><item/><item>      ENDIF.</item><item/><item>      READ TABLE go_function-&gt;get_interface( )-change WITH KEY parameter = ls_params-name TRANSPORTING NO FIELDS.</item><item>      IF ( sy-subrc = 0 ).</item><item>        lv_sname = ls_params-name.</item><item>        TRY.</item><item>            ASSIGN ls_params-value-&gt;* TO &lt;ls_data&gt;.</item><item>            lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item/><item>            build_results( EXPORTING iv_sname = lv_sname</item><item>                                     iv_data =  &lt;ls_data&gt;</item><item>                                     it_fields = gt_fields[]</item><item>                                     iv_from_rec = gv_from_rec</item><item>                                     iv_to_rec = gv_to_rec</item><item>                           CHANGING ct_jsonp      = gt_jsonp</item><item>                                    ct_dictionary = gt_dictionary ).</item><item>          CATCH cx_root.</item><item>            TRY.</item><item>                ASSIGN ls_params-value-&gt;* TO &lt;ls_data&gt;.</item><item>                lo_data_descr ?= cl_abap_datadescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item/><item>                ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; lv_sname &amp;&amp; &apos;&quot;:&quot;&apos; &amp;&amp; &lt;ls_data&gt; &amp;&amp; &apos;&quot;,&apos;..</item><item>                APPEND ls_jsonp TO gt_jsonp.</item><item>              CATCH cx_root.</item><item>            ENDTRY.</item><item>        ENDTRY.</item><item/><item>      ENDIF.</item><item/><item>    ENDLOOP.</item><item/><item>    close_results( ).</item><item>    build_system_info( ).</item><item>    build_user_info( ).</item><item>    dictionary( ).</item><item>    close_callback( ).</item><item/><item>  ENDMETHOD.</item></BUILD><BUILD_RESULTS><item>  METHOD build_results.</item><item>    FIELD-SYMBOLS: &lt;value&gt;   TYPE any.</item><item/><item>    DATA: lt_jsonp      TYPE w3htmltab,</item><item>          ls_jsonp      TYPE w3html,</item><item>          ls_fields     TYPE string,</item><item>          lv_field      TYPE string,  &quot;c LENGTH 50,</item><item>          lv_str_name   TYPE string,</item><item>          lv_str_val    TYPE string,</item><item>          ls_components TYPE abap_componentdescr,</item><item>          lv_lines      TYPE i,</item><item>          lv_tabix      TYPE i,</item><item>          lv_comma      TYPE bool.</item><item/><item>    FIELD-SYMBOLS: &lt;lv_field&gt; TYPE any.</item><item/><item>    DATA: lo_struct_descr TYPE REF TO cl_abap_structdescr,</item><item>          lo_table_descr  TYPE REF TO cl_abap_tabledescr,</item><item>          lo_data_descr   TYPE REF TO cl_abap_datadescr,</item><item>          lx_root         TYPE REF TO cx_root,</item><item>          lv_has_struct   TYPE abap_bool.</item><item/><item>    TRY.</item><item>        lo_table_descr ?= cl_abap_tabledescr=&gt;describe_by_data( iv_data ).</item><item/><item>        FIELD-SYMBOLS: &lt;lt_data&gt; TYPE ANY TABLE.</item><item>        ASSIGN iv_data TO &lt;lt_data&gt;.</item><item/><item>        IF ( NOT iv_sname IS INITIAL ).</item><item>          ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; iv_sname &amp;&amp; &apos;&quot;: [&apos;.</item><item>          INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item>        ENDIF.</item><item/><item>        DATA: lv_count TYPE i.</item><item>        lv_count = 1.</item><item>        LOOP AT &lt;lt_data&gt; ASSIGNING FIELD-SYMBOL(&lt;ls_data&gt;).</item><item>          lv_tabix = sy-tabix.</item><item>          TRY.</item><item>              lv_has_struct = abap_true.</item><item>              CHECK lv_count BETWEEN iv_from_rec AND iv_to_rec.</item><item>              TRY.</item><item>                  lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item>                  ls_jsonp = &apos;{&apos;.</item><item>                  INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item>                CATCH cx_root.</item><item>                  lv_has_struct = abap_false.</item><item>              ENDTRY.</item><item>*            CHECK lv_count BETWEEN iv_from_rec AND iv_to_rec.</item><item>*            ls_jsonp = &apos;{&apos;.</item><item>*            INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item/><item>              DESCRIBE TABLE it_fields LINES lv_lines.</item><item/><item>              REFRESH: lt_jsonp.</item><item>              IF ( lv_has_struct = abap_true ).</item><item>                LOOP AT it_fields INTO ls_fields.</item><item>                  lv_tabix = sy-tabix.</item><item>                  IF ( ls_fields &lt;&gt; &apos;*&apos; ).</item><item>                    CLEAR: lv_comma.</item><item>                    IF ( lv_tabix &lt; lv_lines ).</item><item>                      lv_comma = &apos;X&apos;.</item><item>                    ENDIF.</item><item>                    READ TABLE lo_struct_descr-&gt;get_components( ) INTO ls_components WITH KEY name = ls_fields.</item><item>                    IF ( sy-subrc = 0 ).</item><item>                      add_row_results( EXPORTING is_data = &lt;ls_data&gt;</item><item>                                                 is_components = ls_components</item><item>                                                 iv_comma =  &apos;X&apos;  &quot;lv_comma</item><item>                                       CHANGING ct_jsonp = lt_jsonp[]</item><item>                                                ct_dictionary =  ct_dictionary[] ).</item><item>                    ENDIF.</item><item>                  ELSE.</item><item>                    LOOP AT lo_struct_descr-&gt;get_components( ) INTO ls_components.</item><item>                      lv_tabix = sy-tabix.</item><item>                      lv_field = &apos;&lt;ls_data&gt;-&apos; &amp;&amp; ls_components-name.</item><item>                      ASSIGN (lv_field) TO &lt;lv_field&gt;.</item><item>                      TRY.</item><item>                          lo_table_descr ?= cl_abap_tabledescr=&gt;describe_by_data( &lt;lv_field&gt; ).</item><item>                          DATA: lv_name TYPE abap_parmname.</item><item>                          lv_name = ls_components-name.</item><item>                          TRANSLATE lv_name TO LOWER CASE.</item><item>                          build_results( EXPORTING iv_sname =    lv_name</item><item>                                                   iv_data =  &lt;lv_field&gt;</item><item>                                                   it_fields =   it_fields[]</item><item>                                                   iv_from_rec = iv_from_rec</item><item>                                                   iv_to_rec = iv_to_rec</item><item>                                         CHANGING ct_jsonp = lt_jsonp[]</item><item>                                                  ct_dictionary = ct_dictionary[] ).</item><item>                          DATA: lv_index TYPE i.</item><item>                          DESCRIBE TABLE lt_jsonp LINES lv_index.</item><item>                          READ TABLE lt_jsonp INTO ls_jsonp INDEX lv_index.</item><item>                          IF ( sy-subrc = 0 ).</item><item>                            IF ( NOT ls_jsonp-line CA &apos;],&apos; ).</item><item>                              ls_jsonp-line = ls_jsonp-line &amp;&amp; &apos;],&apos;.</item><item>                              MODIFY lt_jsonp FROM ls_jsonp INDEX lv_index.</item><item>                            ENDIF.</item><item>                          ENDIF.</item><item>                        CATCH cx_root.</item><item>                          TRY.</item><item>                              lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( &lt;lv_field&gt; ).</item><item>                              CHECK 1 = 1.</item><item>                            CATCH cx_root.</item><item>                              CLEAR: lv_comma.</item><item>                              IF ( lv_tabix &lt; lv_lines ).</item><item>                                lv_comma = &apos;X&apos;.</item><item>                              ENDIF.</item><item>                              add_row_results( EXPORTING is_data       = &lt;ls_data&gt;</item><item>                                                         is_components = ls_components</item><item>                                                         iv_comma      = &apos;X&apos;   &quot;lv_comma</item><item>                                               CHANGING ct_jsonp      = lt_jsonp[]</item><item>                                                        ct_dictionary = ct_dictionary[] ).</item><item>                          ENDTRY.</item><item>                      ENDTRY.</item><item>                      &quot;              CLEAR: lv_comma.</item><item>                      &quot;              IF ( lv_tabix &lt; lv_lines ).</item><item>                      &quot;                lv_comma = &apos;X&apos;.</item><item>                      &quot;              ENDIF.</item><item>                      &quot;              PERFORM jsonp_add_row_results USING     &lt;ls_data&gt;</item><item>                      &quot;                                                      ls_components</item><item>                      &quot;                                                      &apos;X&apos;   &quot;lv_comma</item><item>                      &quot;                                            CHANGING  lt_jsonp[].</item><item>                    ENDLOOP.</item><item>                  ENDIF.</item><item>                ENDLOOP.</item><item>                DATA: lv_str       TYPE string,</item><item>                      ls_jsonp_tmp TYPE w3html.</item><item>*              lv_str = &apos;&apos;.</item><item>*              LOOP AT lt_jsonp INTO ls_jsonp_tmp.</item><item>*                IF ( strlen( lv_str ) &gt; 200 ).</item><item>*                  ls_jsonp-line = lv_str.</item><item>*                  APPEND ls_jsonp TO ct_jsonp.</item><item>*                  lv_str = &apos;&apos;.</item><item>*                ENDIF.</item><item>*                lv_str = lv_str &amp;&amp; ls_jsonp_tmp-line.</item><item>*              ENDLOOP.</item><item>*              IF ( strlen( lv_str ) &gt; 0 ).</item><item>*                ls_jsonp-line = lv_str.</item><item>*                APPEND ls_jsonp TO ct_jsonp.</item><item>*              ENDIF.</item><item>                APPEND LINES OF lt_jsonp TO ct_jsonp.</item><item>                remove_extra_comma( ).</item><item/><item>                ls_jsonp = &apos;},&apos;.</item><item>                INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item>              ELSE.</item><item>                IF ( iv_sname = &apos;steps&apos; ).</item><item>                  &quot;                break novedev.</item><item>                ENDIF.</item><item>                lv_str_val = &lt;ls_data&gt;.</item><item>                lv_str = lv_str_val.</item><item>                &quot; encode uri</item><item>                IF ( gv_escape_url = abap_true ).</item><item>                  cl_http_utility=&gt;escape_url( EXPORTING unescaped = lv_str_val</item><item>                                               RECEIVING escaped = lv_str ).</item><item>                ENDIF.</item><item>                ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; lv_str &amp;&amp; &apos;&quot;,&apos;.</item><item>                APPEND ls_jsonp TO ct_jsonp.</item><item>              ENDIF.</item><item>*            DATA: lv_str       TYPE string,</item><item>*                  ls_jsonp_tmp TYPE w3html.</item><item>*            lv_str = &apos;&apos;.</item><item>*            LOOP AT lt_jsonp INTO ls_jsonp_tmp.</item><item>*              IF ( strlen( lv_str ) &gt; 200 ).</item><item>*                ls_jsonp-line = lv_str.</item><item>*                APPEND ls_jsonp TO ct_jsonp.</item><item>*                lv_str = &apos;&apos;.</item><item>*              ENDIF.</item><item>*              lv_str = lv_str &amp;&amp; ls_jsonp_tmp-line.</item><item>*            ENDLOOP.</item><item>*            IF ( strlen( lv_str ) &gt; 0 ).</item><item>*              ls_jsonp-line = lv_str.</item><item>*              APPEND ls_jsonp TO ct_jsonp.</item><item>*            ENDIF.</item><item>*            PERFORM jsonp_remove_extra_comma CHANGING ct_jsonp[].</item><item>*</item><item>*            ls_jsonp = &apos;},&apos;.</item><item>*            INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item>            CATCH cx_root.</item><item>*            CHECK 1 = 1.</item><item>*            ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; &lt;ls_data&gt; &amp;&amp; &apos;&quot;,&apos;.</item><item>*            APPEND ls_jsonp TO ct_jsonp.</item><item>          ENDTRY.</item><item>          ADD 1 TO lv_count.</item><item>        ENDLOOP.</item><item/><item>        remove_extra_comma( ).</item><item/><item>        IF ( NOT iv_sname IS INITIAL ).</item><item>          ls_jsonp = &apos;],&apos;.</item><item>          INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item>        ENDIF.</item><item>      CATCH cx_root.</item><item>        TRY.</item><item>            lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( iv_data ).</item><item/><item>            IF ( NOT iv_sname IS INITIAL ).</item><item>              ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; iv_sname &amp;&amp; &apos;&quot;: {&apos;.</item><item>              INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item>            ENDIF.</item><item/><item>            LOOP AT lo_struct_descr-&gt;get_components( ) INTO ls_components.</item><item>              lv_tabix = sy-tabix.</item><item>              CLEAR: lv_comma.</item><item>              IF ( lv_tabix &lt; lv_lines ).</item><item>                lv_comma = &apos;X&apos;.</item><item>              ENDIF.</item><item>              add_row_results( EXPORTING is_data       = iv_data</item><item>                                         is_components = ls_components</item><item>                                         iv_comma      = &apos;X&apos;   &quot;lv_comma</item><item>                               CHANGING ct_jsonp     = ct_jsonp[]</item><item>                                        ct_dictionary = ct_dictionary[] ).</item><item>            ENDLOOP.</item><item/><item>            remove_extra_comma( ).</item><item/><item>            IF ( NOT iv_sname IS INITIAL ).</item><item>              ls_jsonp = &apos;},&apos;.</item><item>              INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item>            ENDIF.</item><item>          CATCH cx_root.</item><item>            TRY.</item><item>                lo_data_descr ?= cl_abap_datadescr=&gt;describe_by_data( iv_data ).</item><item>              CATCH cx_root.</item><item>            ENDTRY.</item><item>        ENDTRY.</item><item>    ENDTRY.</item><item>  ENDMETHOD.</item></BUILD_RESULTS><ADD_ROW_RESULTS><item>  METHOD add_row_results.</item><item>    FIELD-SYMBOLS: &lt;value&gt;   TYPE any.</item><item/><item>    DATA: ls_jsonp    TYPE w3html,</item><item>          lv_str_name TYPE string,</item><item>          lv_name     TYPE string,</item><item>          lv_str_val  TYPE string,</item><item>          lv_field    TYPE c LENGTH 50.</item><item/><item>    CLEAR: ls_jsonp-line, lv_str_val.</item><item/><item>    lv_str_name = lv_name = is_components-name.</item><item>    TRANSLATE lv_str_name TO LOWER CASE.</item><item>    TRANSLATE lv_name TO LOWER CASE.</item><item>    camel_case( CHANGING cv_str_name = lv_str_name ).</item><item>    CONCATENATE &apos;&quot;&apos; lv_str_name &apos;&quot;&apos; INTO lv_str_name.</item><item/><item>    lv_field = &apos;is_data-&apos;.</item><item>    CONCATENATE lv_field is_components-name INTO lv_field.</item><item>    ASSIGN (lv_field) TO &lt;value&gt;.</item><item/><item>    zcl_bc_conversion_exit=&gt;conversion_output( EXPORTING iv_field = &lt;value&gt;</item><item>                                               CHANGING  cv_field = lv_str_val ).</item><item/><item>    &quot; encode uri</item><item>    IF ( gv_escape_url = abap_true ).</item><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = lv_str_val</item><item>                                   RECEIVING escaped = lv_str_val ).</item><item/><item>    ENDIF.</item><item>    CONCATENATE &apos;&quot;&apos; lv_str_val &apos;&quot;&apos; INTO lv_str_val.</item><item/><item>    IF ( lv_str_name = &apos;&quot;&quot;&apos; ).</item><item>      ls_jsonp-line = lv_str_val.</item><item>    ELSE.</item><item>      CONCATENATE lv_str_name &apos;: &apos; lv_str_val INTO ls_jsonp-line.</item><item>    ENDIF.</item><item/><item>    IF ( NOT iv_comma IS INITIAL ).</item><item>      CONCATENATE ls_jsonp &apos;,&apos; INTO ls_jsonp.</item><item>    ENDIF.</item><item>    INSERT ls_jsonp INTO TABLE ct_jsonp.</item><item/><item>    add_to_dictionary( EXPORTING iv_name = lv_name</item><item>                                 iv_value = &lt;value&gt;</item><item>                       changing ct_dictionary = ct_dictionary ).</item><item/><item>  ENDMETHOD.</item></ADD_ROW_RESULTS><DICTIONARY><item>  METHOD dictionary.</item><item>    DATA: lv_name        TYPE string,</item><item>          ls_dictionary  TYPE zwrfc_ty_s_dictionary,</item><item>          ls_jsonp       TYPE w3html,</item><item>          ls_components  TYPE abap_compdescr,</item><item>          lv_field       TYPE string,</item><item>          lo_structdescr TYPE REF TO cl_abap_structdescr.</item><item/><item>    FIELD-SYMBOLS: &lt;value&gt; TYPE string.</item><item/><item>    TRY.</item><item>        lo_structdescr ?= cl_abap_structdescr=&gt;describe_by_data( ls_dictionary ).</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item/><item>    remove_extra_comma( ).</item><item/><item>    ls_jsonp-line = &apos;, &quot;dictionary&quot;: [&apos;  ##no_text.</item><item>    APPEND ls_jsonp TO gt_jsonp.</item><item/><item>    CLEAR: lv_name.</item><item>    LOOP AT gt_dictionary INTO ls_dictionary.</item><item>      IF ( lv_name &lt;&gt; ls_dictionary-name ).</item><item>        ls_jsonp-line = &apos;{&apos;.</item><item>        APPEND ls_jsonp TO gt_jsonp.</item><item/><item>        READ TABLE gt_dictionary INTO DATA(ls_dict) WITH KEY name = ls_dictionary-name.</item><item>        CHECK sy-subrc = 0.</item><item/><item>        LOOP AT lo_structdescr-&gt;components INTO ls_components.  &quot; WHERE name &lt;&gt; ls_dictionary-name.</item><item>          TRANSLATE ls_components-name TO LOWER CASE.</item><item>          lv_field = &apos;ls_dictionary-&apos; &amp;&amp; ls_components-name.</item><item/><item>          ASSIGN (lv_field) TO &lt;value&gt;.</item><item>          CHECK sy-subrc = 0.</item><item/><item>*          ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; ls_components-name &amp;&amp; &apos;&quot;: &quot;&apos; &amp;&amp; &lt;value&gt; &amp;&amp; &apos;&quot;,&apos;.</item><item>          DATA: lv_comp_name TYPE string.</item><item>          lv_comp_name = ls_components-name.</item><item>          camel_case( CHANGING cv_str_name = lv_comp_name ).</item><item>          ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; lv_comp_name &amp;&amp; &apos;&quot;: &quot;&apos; &amp;&amp; &lt;value&gt; &amp;&amp; &apos;&quot;,&apos;.</item><item>          APPEND ls_jsonp TO gt_jsonp.</item><item>        ENDLOOP.</item><item>        remove_extra_comma( ).</item><item/><item>        ls_jsonp-line = &apos;},&apos;.</item><item>        APPEND ls_jsonp TO gt_jsonp.</item><item>      ENDIF.</item><item>      lv_name = ls_dictionary-name.</item><item>    ENDLOOP.</item><item/><item>    remove_extra_comma( ).</item><item/><item>    ls_jsonp-line = &apos;]&apos;.</item><item>    APPEND ls_jsonp TO gt_jsonp.</item><item>  ENDMETHOD.</item></DICTIONARY><ADD_TO_DICTIONARY><item>  METHOD add_to_dictionary.</item><item>    READ TABLE ct_dictionary WITH KEY name = iv_name TRANSPORTING NO FIELDS.</item><item>    CHECK sy-subrc &lt;&gt; 0.</item><item/><item>    DATA: ls_dictionary TYPE zwrfc_ty_s_dictionary,</item><item>          lo_datadescr  TYPE REF TO cl_abap_datadescr,</item><item>          lo_elemdescr  TYPE REF TO cl_abap_elemdescr.</item><item/><item>    CLEAR: ls_dictionary.</item><item/><item>    ls_dictionary-name = iv_name.</item><item/><item>    TRY.</item><item>*        IF ( NOT iv_value IS INITIAL ).</item><item>*          lo_datadescr ?= cl_abap_datadescr=&gt;describe_by_data( iv_value ).</item><item>*          lo_elemdescr ?= cl_abap_elemdescr=&gt;describe_by_data( iv_value ).</item><item>*        ELSEIF ( NOT iv_field IS INITIAL ).</item><item>*          lo_datadescr ?= cl_abap_datadescr=&gt;describe_by_name( iv_field ).</item><item>*          lo_elemdescr ?= cl_abap_elemdescr=&gt;describe_by_name( iv_field ).</item><item>*        ELSE.</item><item>*          RETURN.</item><item>*        ENDIF.</item><item>        lo_datadescr ?= cl_abap_datadescr=&gt;describe_by_data( iv_value ).</item><item>        lo_elemdescr ?= cl_abap_elemdescr=&gt;describe_by_data( iv_value ).</item><item/><item>        ls_dictionary-length = lo_elemdescr-&gt;output_length.</item><item>        DATA: ls_elem TYPE dfies.</item><item>        ls_elem = lo_elemdescr-&gt;get_ddic_field( p_langu = sy-langu ).</item><item>        CONDENSE ls_dictionary-length.</item><item>        CASE ls_elem-inttype.</item><item>          WHEN &apos;C&apos;.</item><item>            ls_dictionary-type = &apos;string&apos;.</item><item>          WHEN &apos;I&apos; OR &apos;b&apos;.</item><item>            ls_dictionary-type = &apos;integer&apos;.</item><item>        ENDCASE.</item><item>        ls_dictionary-description  = ls_elem-fieldtext.</item><item>        ls_dictionary-header_descr = ls_elem-reptext.</item><item>        ls_dictionary-small_descr  = ls_elem-scrtext_s.</item><item>        ls_dictionary-medium_descr = ls_elem-scrtext_m.</item><item>        ls_dictionary-long_descr   = ls_elem-scrtext_l.</item><item>*      SELECT SINGLE ddtext reptext scrtext_s scrtext_m scrtext_l</item><item>*             INTO (ls_dictionary-description, ls_dictionary-header_descr, ls_dictionary-small_descr, ls_dictionary-medium_descr, ls_dictionary-long_descr)</item><item>*             FROM dd04t WHERE rollname   = lo_elemdescr-&gt;absolute_name+6</item><item>*                        AND   ddlanguage = sy-langu</item><item>*                        AND   as4local   = &apos;A&apos;.</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item/><item>    IF ( gv_escape_url = abap_true ).</item><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = ls_dictionary-length</item><item>                                   RECEIVING escaped = ls_dictionary-length ).</item><item>    ENDIF.</item><item/><item>    IF ( ls_dictionary-description IS INITIAL OR ls_dictionary-description = &apos;.&apos; ).</item><item>      ls_dictionary-description = ls_dictionary-name.</item><item>    ENDIF.</item><item>    IF ( gv_escape_url = abap_true ).</item><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = ls_dictionary-description</item><item>                                   RECEIVING escaped = ls_dictionary-description ).</item><item>    ENDIF.</item><item/><item>    IF ( ls_dictionary-header_descr IS INITIAL OR ls_dictionary-header_descr = &apos;.&apos;  ).</item><item>      ls_dictionary-header_descr = ls_dictionary-name.</item><item>    ENDIF.</item><item>    IF ( gv_escape_url = abap_true ).</item><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = ls_dictionary-header_descr</item><item>                                   RECEIVING escaped = ls_dictionary-header_descr ).</item><item>    ENDIF.</item><item/><item>    IF ( ls_dictionary-small_descr IS INITIAL OR ls_dictionary-small_descr = &apos;.&apos;  ).</item><item>      ls_dictionary-small_descr = ls_dictionary-name.</item><item>    ENDIF.</item><item>    IF ( gv_escape_url = abap_true ).</item><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = ls_dictionary-small_descr</item><item>                                   RECEIVING escaped = ls_dictionary-small_descr ).</item><item>    ENDIF.</item><item/><item>    IF ( ls_dictionary-medium_descr IS INITIAL OR ls_dictionary-medium_descr = &apos;.&apos;  ).</item><item>      ls_dictionary-medium_descr = ls_dictionary-name.</item><item>    ENDIF.</item><item>    IF ( gv_escape_url = abap_true ).</item><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = ls_dictionary-medium_descr</item><item>                                   RECEIVING escaped = ls_dictionary-medium_descr ).</item><item>    ENDIF.</item><item/><item>    IF ( ls_dictionary-long_descr IS INITIAL OR ls_dictionary-long_descr = &apos;.&apos;  ).</item><item>      ls_dictionary-long_descr = ls_dictionary-name.</item><item>    ENDIF.</item><item>    IF ( gv_escape_url = abap_true ).</item><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = ls_dictionary-long_descr</item><item>                                   RECEIVING escaped = ls_dictionary-long_descr ).</item><item/><item>      cl_http_utility=&gt;escape_url( EXPORTING unescaped = ls_dictionary-name</item><item>                                   RECEIVING escaped = ls_dictionary-name ).</item><item>    ENDIF.</item><item/><item>    IF ( NOT ls_dictionary IS INITIAL ).</item><item>      APPEND ls_dictionary TO ct_dictionary.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></ADD_TO_DICTIONARY><CAMEL_CASE><item>  METHOD camel_case.</item><item>    DATA: lv_len      TYPE i,</item><item>          lv_pos      TYPE i,</item><item>          lv_upper    TYPE c LENGTH 1,</item><item>          lv_str_name TYPE string.</item><item/><item>    IF ( gv_camel_case = &apos;true&apos; AND cv_str_name CA &apos;_&apos; ).</item><item>      lv_str_name = cv_str_name.</item><item>      lv_pos = 0.</item><item>      lv_len = strlen( cv_str_name ).</item><item>      CLEAR: cv_str_name.</item><item>      DO lv_len TIMES.</item><item>        IF ( lv_pos &gt;= lv_len ).</item><item>          EXIT.</item><item>        ENDIF.</item><item>        IF ( lv_str_name+lv_pos(1) = &apos;_&apos; ).</item><item>          ADD 1 TO lv_pos.</item><item>          lv_upper = lv_str_name+lv_pos(1).</item><item>          TRANSLATE lv_upper TO UPPER CASE.</item><item>          cv_str_name = cv_str_name &amp;&amp; lv_upper.</item><item>          ADD 1 TO lv_pos.</item><item>        ENDIF.</item><item>        cv_str_name = cv_str_name &amp;&amp; lv_str_name+lv_pos(1).</item><item>        ADD 1 TO lv_pos.</item><item>      ENDDO.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CAMEL_CASE><GET_JSON_TABLE><item>  METHOD GET_JSON_TABLE.</item><item>    rt_table[] = gt_jsonp[].</item><item>  ENDMETHOD.</item></GET_JSON_TABLE><GET_JSON_STRING><item>  METHOD get_json_string.</item><item>    CLEAR: rv_json_string.</item><item>    LOOP AT gt_jsonp INTO DATA(ls_jsonp).</item><item>      rv_json_string = rv_json_string &amp;&amp; ls_jsonp-line.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></GET_JSON_STRING><BUILD_ERRORS><item>  METHOD build_errors.</item><item>    &quot; apre tag funcione di callback</item><item>    open_callback( ).</item><item>    &quot; apre tag errors</item><item>    open_errors( ).</item><item>    &quot; costruzione errors</item><item>    build_errs( ).</item><item>    &quot; chiude tag errors</item><item>    close_errors( ).</item><item>    &quot; apre tag results</item><item>    open_results( ).</item><item>    &quot; chiude tag results</item><item>    close_results( ).</item><item>    &quot; chiude tab funzione di callback</item><item>    close_callback( ).</item><item>  ENDMETHOD.</item></BUILD_ERRORS><CLOSE_ERRORS><item>  METHOD close_errors.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    ls_jsonp = &apos;],&apos;.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></CLOSE_ERRORS><OPEN_ERRORS><item>  METHOD open_errors.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    ls_jsonp = &apos;&quot;errors&quot;: [&apos;.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></OPEN_ERRORS><BUILD_ERRS><item>  METHOD build_errs.</item><item>    DATA: ls_jsonp TYPE w3html,</item><item>          lv_lines TYPE i,</item><item>          lv_tabix TYPE i.</item><item/><item>    DESCRIBE TABLE gt_messages LINES lv_lines.</item><item/><item>    LOOP AT gt_messages INTO DATA(ls_messages).</item><item>      lv_tabix = sy-tabix.</item><item>      CLEAR: ls_jsonp.</item><item>      CONCATENATE &apos;{ &quot;type&quot;:&quot;&apos; ls_messages-type &apos;&quot;, &quot;msg&quot;:&quot;&apos; ls_messages-msg &apos;&quot; }&apos; INTO ls_jsonp.</item><item>      IF ( lv_tabix &lt; lv_lines ).</item><item>        CONCATENATE ls_jsonp &apos;,&apos; INTO ls_jsonp.</item><item>      ENDIF.</item><item>      APPEND ls_jsonp TO gt_jsonp.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></BUILD_ERRS><BUILD_INTERFACE><item>  METHOD build_interface.</item><item>    DATA(ls_interface) =  go_function-&gt;get_interface( ).</item><item/><item>    DATA: ls_param        TYPE rsfbpara,</item><item>          lv_name         TYPE eu_lname,</item><item>          lo_struct_descr TYPE REF TO cl_abap_structdescr.</item><item/><item>    FIELD-SYMBOLS: &lt;ls_data&gt; TYPE any.</item><item>    FIELD-SYMBOLS: &lt;lt_data&gt; TYPE ANY TABLE.</item><item/><item>    IF ( NOT ls_interface IS INITIAL ).</item><item>      &quot; apre tag funcione di callback</item><item>      open_callback( ).</item><item/><item>      TRY.</item><item>          FIELD-SYMBOLS &lt;lv_field&gt; TYPE any.</item><item>          lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( ls_interface ).</item><item/><item>          &quot; apre tag results</item><item>          open_results( ).</item><item/><item>          LOOP AT lo_struct_descr-&gt;get_components( ) INTO DATA(ls_components) WHERE name = &apos;IMPORT&apos;</item><item>                                                                              OR    name = &apos;EXPORT&apos;</item><item>                                                                              OR    name = &apos;CHANGE&apos;</item><item>                                                                              OR    name = &apos;TABLES&apos;</item><item>                                                                              OR    name = &apos;EXCEPT&apos;.</item><item>            DATA(lv_field) = &apos;ls_interface-&apos; &amp;&amp; ls_components-name.</item><item>            ASSIGN (lv_field) TO &lt;lt_data&gt;.</item><item>            IF ( sy-subrc = 0 ).</item><item>              DATA: lv_sname TYPE string,</item><item>                    ls_jsonp TYPE w3html.</item><item/><item>              lv_sname = ls_components-name.</item><item>              ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; ls_components-name &amp;&amp; &apos;&quot;:{&apos;.</item><item>              APPEND ls_jsonp TO gt_jsonp.</item><item>              LOOP AT &lt;lt_data&gt; ASSIGNING &lt;ls_data&gt;.</item><item>                TRY.</item><item>                    DATA: lo_struct_descr_2 TYPE REF TO cl_abap_structdescr.</item><item>                    lo_struct_descr_2 ?= cl_abap_structdescr=&gt;describe_by_data( &lt;ls_data&gt; ).</item><item>* results ------------------------------------------------------</item><item>                    &quot; costruisce results</item><item>                    DATA: ls_components_2 TYPE abap_compdescr,</item><item>                          ls_components_3 TYPE abap_compdescr,</item><item>                          lv_par          TYPE string.</item><item>                    FIELD-SYMBOLS: &lt;lv_par&gt;  TYPE any,</item><item>                                   &lt;lv_par2&gt; TYPE any.</item><item>                    LOOP AT lo_struct_descr_2-&gt;components INTO ls_components_2 WHERE name = &apos;PARAMETER&apos;.</item><item>                      lv_par = &apos;&lt;LS_DATA&gt;-&apos; &amp;&amp; ls_components_2-name.</item><item>                      ASSIGN (lv_par) TO &lt;lv_par&gt;.</item><item>                      CHECK sy-subrc = 0.</item><item>                      DATA: lo_data   TYPE REF TO cl_abap_datadescr,</item><item>                            lo_struct TYPE REF TO cl_abap_structdescr,</item><item>                            lo_table  TYPE REF TO cl_abap_tabledescr,</item><item>                            lv_type   TYPE string.</item><item>                      CLEAR: lv_type.</item><item>                      lv_par = &apos;&lt;LS_DATA&gt;-structure&apos;.</item><item>                      ASSIGN (lv_par) TO &lt;lv_par2&gt;.</item><item>                      CHECK sy-subrc = 0.</item><item>                      IF ( NOT &lt;lv_par2&gt; IS INITIAL ).</item><item>                        TRY.</item><item>                            lo_table ?= cl_abap_tabledescr=&gt;describe_by_name( &lt;lv_par2&gt; ).</item><item>                            lv_type = &apos;&quot;table&quot;&apos;.</item><item>                          CATCH cx_root.</item><item>                            TRY.</item><item>                                lo_struct ?= cl_abap_structdescr=&gt;describe_by_name( &lt;lv_par2&gt; ).</item><item>                                lv_type = &apos;&quot;structure&quot;&apos;.</item><item>                              CATCH cx_root.</item><item>                                TRY.</item><item>                                    lo_data ?= cl_abap_datadescr=&gt;describe_by_name( &lt;lv_par2&gt; ).</item><item>                                    lv_type = &apos;&quot;field&quot;&apos;.</item><item>*                                  HTML-LINE = &apos;&quot;&apos; &amp;&amp; &lt;LV_PAR&gt; &amp;&amp; &apos;&quot;: &quot;&apos; &amp;&amp; &lt;LV_PAR2&gt; &amp;&amp;  &apos;&quot;,&apos;.</item><item>*                                  APPEND HTML.</item><item>                                  CATCH cx_root.</item><item>                                ENDTRY.</item><item>                            ENDTRY.</item><item>                        ENDTRY.</item><item>                      ENDIF.</item><item>                      ls_jsonp-line = &apos;&quot;&apos; &amp;&amp; &lt;lv_par&gt; &amp;&amp; &apos;&quot;: &quot;&apos; &amp;&amp; &lt;lv_par2&gt; &amp;&amp;  &apos;&quot;,&apos;.</item><item>                      APPEND ls_jsonp TO gt_jsonp.</item><item>                      DATA: lv_name2  TYPE string,</item><item>                            lv_field2 TYPE string.</item><item>                      lv_name2 = &lt;lv_par&gt;.</item><item>                      lv_field2 = &lt;lv_par2&gt;.</item><item>                      add_to_dictionary( EXPORTING iv_name = lv_name2</item><item>                                                   iv_field = lv_field2</item><item>                                         CHANGING ct_dictionary = gt_dictionary ).</item><item>                    ENDLOOP.</item><item/><item>                  CATCH cx_root INTO DATA(lx_root).</item><item>*                    CLEAR: ls_messages.</item><item>*                    ls_messages-type = &apos;E&apos;.</item><item>*                    ls_messages-msg = lx_root-&gt;get_text( ).</item><item>*                    APPEND ls_messages TO lt_messages.</item><item>*</item><item>*                    PERFORM create_jsonp_2 USING    iv_callback</item><item>*                                                    lt_messages[]</item><item>*                                           CHANGING html[].</item><item>                    RETURN.</item><item>                ENDTRY.</item><item>              ENDLOOP.</item><item>              remove_extra_comma( ).</item><item>              ls_jsonp-line = &apos;},&apos;.</item><item>              APPEND ls_jsonp TO gt_jsonp.</item><item>            ENDIF.</item><item>          ENDLOOP.</item><item>          remove_extra_comma( ).</item><item/><item>          &quot; chiude tag results</item><item>          close_results( ).</item><item>        CATCH cx_root INTO lx_root.</item><item>      ENDTRY.</item><item/><item>      dictionary( ).</item><item>      close_callback( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></BUILD_INTERFACE><BUILD_SYSTEM_INFO><item>  METHOD build_system_info.</item><item>    open_key( &apos;systemInfo&apos; ).</item><item>    DATA: lo_struct_descr TYPE REF TO cl_abap_structdescr.</item><item>    TRY.</item><item>        lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( sy ).</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item>    LOOP AT lo_struct_descr-&gt;get_components( ) INTO DATA(ls_components) WHERE name = &apos;MANDT&apos;</item><item>                                                                        OR    name = &apos;LANGU&apos;</item><item>                                                                        OR    name = &apos;SYSID&apos;</item><item>                                                                        OR    name = &apos;HOST&apos;</item><item>                                                                        OR    name = &apos;OPSYS&apos;</item><item>                                                                        OR    name = &apos;DBSYS&apos;</item><item>                                                                        OR    name = &apos;DATUM&apos;</item><item>                                                                        OR    name = &apos;UZEIT&apos;</item><item>                                                                        OR    name = &apos;UNAME&apos;</item><item>                                                                        OR    name = &apos;ZONLO&apos;</item><item>                                                                        OR    name = &apos;DATLO&apos;</item><item>                                                                        OR    name = &apos;TIMLO&apos;</item><item>                                                                        OR    name = &apos;SAPRL&apos;.</item><item>      me-&gt;add_row_results( EXPORTING is_data = sy</item><item>                                     is_components = ls_components</item><item>                                     iv_comma      = &apos;X&apos;   &quot;lv_comma</item><item>                           CHANGING ct_jsonp      = gt_jsonp[]</item><item>                                    ct_dictionary = gt_dictionary[] ).</item><item>    ENDLOOP.</item><item>    close_key( ).</item><item>    remove_extra_comma( ).</item><item>  ENDMETHOD.</item></BUILD_SYSTEM_INFO><BUILD_USER_INFO><item>  METHOD build_user_info.</item><item>    open_key( &apos;userInfo&apos; ).</item><item>    SELECT  adrp~name_first AS first_name,</item><item>                  adrp~name_last AS last_name,</item><item>                  adrp~name_text AS full_name,</item><item>                  adr6~smtp_addr AS email,</item><item>                  adr2~tel_number AS telephone_number,</item><item>                  adr2~tel_number AS mobile_number,</item><item>                  adr2~r3_user</item><item>           FROM usr21 INNER JOIN adrp ON adrp~persnumber = usr21~persnumber</item><item>                      LEFT JOIN adr6 ON adr6~persnumber = adrp~persnumber</item><item>                      LEFT JOIN adr2 ON adr2~persnumber = adrp~persnumber AND</item><item>                                        adr6~date_from &lt;= @sy-datum AND</item><item>                                        adr2~date_from &lt;= @sy-datum &quot;AND</item><item>                                        &quot;adr2~r3_user = &apos;3&apos;</item><item>           WHERE usr21~bname    =  @sy-uname</item><item>           AND   adrp~date_from &lt;= @sy-datum</item><item>           AND   adrp~date_to   &gt;= @sy-datum</item><item>           AND   adr6~date_from &lt;= @sy-datum</item><item>           INTO TABLE @DATA(lt_user_info).</item><item>    TRY.</item><item>        DATA(ls_user_info) = lt_user_info[ 1 ].</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item>    LOOP AT lt_user_info INTO DATA(ls_usr).</item><item>      CASE ls_usr-r3_user.</item><item>        WHEN &apos;1&apos;.</item><item>          ls_user_info-telephone_number = ls_usr-telephone_number.</item><item>        WHEN &apos;3&apos;.</item><item>          ls_user_info-mobile_number = ls_usr-mobile_number.</item><item>      ENDCASE.</item><item>    ENDLOOP.</item><item>    DATA: lo_struct_descr TYPE REF TO cl_abap_structdescr.</item><item>    TRY.</item><item>        lo_struct_descr ?= cl_abap_structdescr=&gt;describe_by_data( ls_user_info ).</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item>    LOOP AT lo_struct_descr-&gt;get_components( ) INTO DATA(ls_components) where name &lt;&gt; &apos;R3_USER&apos;.</item><item>      me-&gt;add_row_results( EXPORTING is_data = ls_user_info</item><item>                                     is_components = ls_components</item><item>                                     iv_comma      = &apos;X&apos;   &quot;lv_comma</item><item>                           CHANGING ct_jsonp      = gt_jsonp[]</item><item>                                    ct_dictionary = gt_dictionary[] ).</item><item>    ENDLOOP.</item><item>    close_key( ).</item><item>    remove_extra_comma( ).</item><item>  ENDMETHOD.</item></BUILD_USER_INFO><OPEN_KEY><item>  METHOD open_key.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    ls_jsonp-line = &apos;,&quot;&apos; &amp;&amp; iv_name &amp;&amp; &apos;&quot;: {&apos;.</item><item>    gv_jsonp = gv_jsonp &amp;&amp; ls_jsonp-line.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></OPEN_KEY><CLOSE_KEY><item>  METHOD close_key.</item><item>    DATA: ls_jsonp TYPE w3html.</item><item/><item>    remove_extra_comma( ).</item><item/><item>    ls_jsonp = &apos;},&apos;.</item><item>    gv_jsonp = gv_jsonp &amp;&amp; ls_jsonp-line.</item><item>    INSERT ls_jsonp INTO TABLE gt_jsonp.</item><item>  ENDMETHOD.</item></CLOSE_KEY></METHOD_SOURCE></CLASS_ROOT>