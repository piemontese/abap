<?xml version="1.0"?><CLASS_ROOT><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>ECTR - Normalizzatore</DESCRIPT><UUID>AFBWoCPaHuiU0qXf1F6fkA==</UUID><CATEGORY>00</CATEGORY><EXPOSURE>2</EXPOSURE><STATE>1</STATE><RELEASE>0</RELEASE><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><CHGDANYON>0000-00-00</CHGDANYON><CLSCCINCL>X</CLSCCINCL><FIXPT>X</FIXPT><UNICODE>X</UNICODE><R3RELEASE>750</R3RELEASE><CLSBCCAT>00</CLSBCCAT><DURATION_TYPE>0</DURATION_TYPE><RISK_LEVEL>0</RISK_LEVEL><ATTRIBUTES><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GS_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GT_DATA</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GT_PDM_NOR_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_NOR_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GT_PDM_MON_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_MON_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GT_PDM_MON_ANAG</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_MON_ANAG</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GV_FASE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Fase corrente</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>NUMC1</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item></ATTRIBUTES><METHODS><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Costruttore</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><MTDTYPE>2</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>INITIALIZATION</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Inizializzazione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>RUN</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Esegue il programma</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GET_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Ritorna i parametri di selezione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CREATE_TREE_OLD</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea inserimenti albero</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CREATE_PDM_NOR_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea inserimenti tabella ZPP_PDM_NOR_BOM</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-09</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GET_CURRENT_FASE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-09</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>SEND_TO_TREE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>AUTORITY_CHECK</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Non usato</DESCRIPT><EXPOSURE>1</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CREATE_SELECTIONS</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea selezioni</DESCRIPT><EXPOSURE>1</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>SET_TABLES_FASE_1</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea dati tabella per update</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>UPDATE_TABLES_FASE_1</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Update delle tabelle</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>FIND_ROOTNAME</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Creca il rootname e info aggiuntive</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>FIND_ROOTNAME_2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Creca il rootname e info aggiuntive</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-10</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>SET_TABLES_FASE_2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea dati tabella per update</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>UPDATE_TABLES_FASE_2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Update delle tabelle</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>ALGORITMO_IN_LATERALE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Algoritmo in laterale</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>ALGORITMO_IN_PROFONDITA</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Algoritmo in profondità</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>ALGORITMO_DI_PROPAGAZIONE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Applica gli algoritimi: in laterale e in profondità</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>FIND_ROOTNAME_SCH</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Creca il rootname e info aggiuntive - scheletro</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-10</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>FIND_ROOTNAME_ELE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Creca il rootname e info aggiuntive - elettrico</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-10</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>FIND_ROOTNAME_MEC</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Creca il rootname e info aggiuntive - meccanico</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-10</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item></METHODS><EVENTS/><TYPES><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_S_PDM_MON_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Cruscotto produzione: distinte base</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_MON_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_T_PDM_MON_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>10</SRCROW1><SRCCOLUMN1>4</SRCCOLUMN1><SRCROW2>10</SRCROW2><SRCCOLUMN2>50</SRCCOLUMN2><TYPESRC_LENG>49</TYPESRC_LENG><TYPESRC>ty_t_pdm_mon_bom TYPE TABLE OF ty_s_pdm_mon_bom
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_S_PDM_MON_ANAG</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Cruscotto produzione: anagrafica</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_MON_ANAG</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_T_PDM_MON_ANAG</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>13</SRCROW1><SRCCOLUMN1>4</SRCCOLUMN1><SRCROW2>13</SRCROW2><SRCCOLUMN2>52</SRCCOLUMN2><TYPESRC_LENG>51</TYPESRC_LENG><TYPESRC>ty_t_pdm_mon_anag TYPE TABLE OF ty_s_pdm_mon_anag
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_S_DATA</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>15</SRCROW1><SRCCOLUMN1>4</SRCCOLUMN1><SRCROW2>19</SRCROW2><SRCCOLUMN2>26</SRCCOLUMN2><TYPESRC_LENG>157</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_data.
        INCLUDE TYPE zsppp_ectr_norm.
        INCLUDE TYPE zpp_modbom.
    TYPES: log TYPE zpp_bom_log.
    TYPES: END OF ty_s_data
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_S_PDM_NOR_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Normalizza.: BOM trasferite al Cruscotto Prod. (ultima foto)</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-08</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_NOR_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_T_DATA</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>22</SRCROW1><SRCCOLUMN1>4</SRCCOLUMN1><SRCROW2>22</SRCROW2><SRCCOLUMN2>36</SRCCOLUMN2><TYPESRC_LENG>35</TYPESRC_LENG><TYPESRC>ty_t_data TYPE TABLE OF ty_s_data
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_T_NOR_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>24</SRCROW1><SRCCOLUMN1>4</SRCCOLUMN1><SRCROW2>24</SRCROW2><SRCCOLUMN2>46</SRCCOLUMN2><TYPESRC_LENG>45</TYPESRC_LENG><TYPESRC>ty_t_nor_bom TYPE TABLE OF ty_s_pdm_nor_bom
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>TY_S_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>26</SRCROW1><SRCCOLUMN1>4</SRCCOLUMN1><SRCROW2>32</SRCROW2><SRCCOLUMN2>20</SRCCOLUMN2><TYPESRC_LENG>257</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_sel,
        s_dispo TYPE RANGE OF marc-dispo,
        s_root  TYPE RANGE OF zpp_albero-rootname,
        s_matnr TYPE RANGE OF mara-matnr,
        s_posid TYPE RANGE OF prps-posid,
        p_test  TYPE abap_bool,
      END OF ty_s_sel
</TYPESRC></item></TYPES><PARAMETERS><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>ALGORITMO_IN_LATERALE</CMPNAME><SCONAME>IV_INDEX</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>ALGORITMO_IN_LATERALE</CMPNAME><SCONAME>IS_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-09</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>ALGORITMO_IN_LATERALE</CMPNAME><SCONAME>RS_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-09</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>ALGORITMO_IN_PROFONDITA</CMPNAME><SCONAME>IS_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-05-09</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_PROGRAM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Programma chiamante</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-REPID</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_LANGUAGE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Campo sistema ABAP: chiave lingua dell&apos;ambiente testi</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-LANGU</TYPE><PARVALUE>SY-LANGU</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IS_SEL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Parametri di selezione</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_PFSTATUS</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Stato GUI</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SYPFKEY</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CREATE_PDM_NOR_BOM</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_FALSE</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CREATE_TREE_OLD</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_FALSE</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GET_CURRENT_FASE</CMPNAME><SCONAME>RV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>GET_SEL</CMPNAME><SCONAME>ES_SEL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>RUN</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_TRUE</PARVALUE></item></PARAMETERS><EXCEPTIONS><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>AUTORITY_CHECK</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CREATE_PDM_NOR_BOM</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>CREATE_SELECTIONS</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>INITIALIZATION</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>RUN</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>SEND_TO_TREE</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-10</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><CMPNAME>SET_TABLES_FASE_1</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item></EXCEPTIONS><IMPLEMENTINGS/><IMPL_DETAILS/><FRIENDSHIPS/><TYPEPUSAGES><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><TYPEGROUP>ABAP</TYPEGROUP><VERSION>1</VERSION><TPUTYPE>0</TPUTYPE><IMPLICIT>X</IMPLICIT></item></TYPEPUSAGES><CLSDEFERRDS/><INTDEFERRDS/><ALIASES/><INHERITANCE><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><STATE>1</STATE><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-05-08</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON></INHERITANCE><INTERFACES/><REDEFINITIONS><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><MTDNAME>ALV_SHOW</MTDNAME><EXPOSURE>2</EXPOSURE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><MTDNAME>MODIFY_SCREEN</MTDNAME><EXPOSURE>2</EXPOSURE></item><item><CLSNAME>ZCL_PP_ECTR_NORM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><MTDNAME>SET_DATA</MTDNAME><EXPOSURE>2</EXPOSURE></item></REDEFINITIONS><TYPE_SOURCE/><LOCALS_SRC/><LOCALS_DEF><item>*&quot;* use this source file for any type of declarations (class</item><item>*&quot;* definitions, interfaces or type declarations) you need for</item><item>*&quot;* components in the private section</item><item/></LOCALS_DEF><LOCALS_IMP><item>*&quot;* use this source file for the definition and implementation of</item><item>*&quot;* local helper classes, interface definitions and type</item><item>*&quot;* declarations</item><item/><item>CLASS lcl_handle_events DEFINITION.</item><item>  PUBLIC SECTION.</item><item>    METHODS:</item><item>      constructor IMPORTING io_sender TYPE REF TO zcl_pp_ectr_norm</item><item>                            io_alv    TYPE REF TO cl_salv_table</item><item>                            io_sel    TYPE REF TO cl_salv_selections,</item><item>      on_user_command FOR EVENT added_function OF cl_salv_events</item><item>        IMPORTING e_salv_function.</item><item>  PRIVATE SECTION.</item><item>    DATA: go_sender TYPE REF TO zcl_pp_ectr_norm,</item><item>          go_alv    TYPE REF TO cl_salv_table,</item><item>          go_sel    TYPE REF TO cl_salv_selections.</item><item>*    METHODS:</item><item>*      edit.</item><item>ENDCLASS.</item><item/><item>CLASS lcl_handle_events IMPLEMENTATION.</item><item>  METHOD constructor.</item><item>    go_sender = io_sender.</item><item>    go_alv = io_alv.</item><item>    go_sel = io_sel.</item><item>  ENDMETHOD.</item><item>  METHOD on_user_command.</item><item>    DATA: lo_selections TYPE REF TO cl_salv_selections,</item><item>          lo_salv       TYPE REF TO cl_salv_table.</item><item>    DATA: lt_rows TYPE salv_t_row.</item><item>    DATA: ls_rows TYPE i.</item><item>    DATA: message TYPE string.</item><item>    CASE e_salv_function.</item><item>      WHEN &apos;EXECUTE&apos;.</item><item>        TRY.</item><item>            CASE go_sender-&gt;get_current_fase( ).</item><item>              WHEN 0.</item><item>                go_sender-&gt;create_pdm_nor_bom( iv_show_alv = abap_true )</item><item>              WHEN 1.</item><item>                go_sender-&gt;send_to_tree( ).</item><item>            ENDCASE.</item><item>            go_sender-&gt;set_refresh_data( abap_true ).</item><item>          CATCH cx_root INTO DATA(lcx_root).</item><item>            MESSAGE lcx_root-&gt;get_text( ) TYPE &apos;S&apos;.</item><item>        ENDTRY.</item><item>      WHEN &apos;EXECUTE2&apos;.</item><item>        TRY.</item><item>            go_sender-&gt;send_to_tree( ).</item><item>            go_sender-&gt;set_refresh_data( abap_true ).</item><item>          CATCH cx_root INTO lcx_root.</item><item>            MESSAGE lcx_root-&gt;get_text( ) TYPE &apos;S&apos;.</item><item>        ENDTRY.</item><item>*      WHEN &apos;REFRESH&apos;.</item><item>*        go_sender-&gt;set_refresh_data( abap_true ).</item><item>*        go_sender-&gt;refresh_data( ).</item><item>*        go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item><item>*      WHEN &apos;&amp;&amp;BACK&apos;.</item><item>*        LEAVE TO SCREEN 0.</item><item>    ENDCASE.</item><item>    TRY.</item><item>        IF ( go_sender-&gt;get_refresh_data( ) = abap_true ).</item><item>          go_sender-&gt;refresh_data( ).</item><item>        ENDIF.</item><item>        go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item>  ENDMETHOD.</item><item>ENDCLASS.</item></LOCALS_IMP><LOCALS_MAC><item>*&quot;* use this source file for any macro definitions you need</item><item>*&quot;* in the implementation part of the class</item><item/></LOCALS_MAC><TEXT_POOL><I><item><ID>I</ID><KEY>001</KEY><ENTRY>BOM</ENTRY><LENGTH>54</LENGTH></item><item><ID>I</ID><KEY>002</KEY><ENTRY>TREE</ENTRY><LENGTH>70</LENGTH></item><item><ID>I</ID><KEY>003</KEY><ENTRY>Nessun dato estratto</ENTRY><LENGTH>40</LENGTH></item></I></TEXT_POOL><METHOD_SOURCE><AUTORITY_CHECK><item>  method AUTORITY_CHECK.</item><item>*    AUTHORITY-CHECK OBJECT &apos;M_BEST_WRK&apos;</item><item>*       ID &apos;ACTVT&apos; DUMMY</item><item>*       ID &apos;WERKS&apos; FIELD gs_sel-p_werks.</item><item>*    IF sy-subrc &lt;&gt; 0.</item><item>*      RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s001(zmmm_modula) W</item><item>*    ENDIF.</item><item>  endmethod.</item></AUTORITY_CHECK><CONSTRUCTOR><item>  METHOD constructor.</item><item>    super-&gt;constructor( iv_program = iv_program iv_language = iv_languag</item><item>    create_selections( ).</item><item>    gv_fase = 0.</item><item>  ENDMETHOD.</item></CONSTRUCTOR><CREATE_SELECTIONS><item>  METHOD CREATE_SELECTIONS.</item><item>    DATA: lref_sel TYPE REF TO data.</item><item>    CREATE DATA lref_sel TYPE ty_s_sel.</item><item>    set_selections( CHANGING cref_sel = lref_sel ).</item><item>    FIELD-SYMBOLS: &lt;sel&gt;    TYPE any.</item><item>    ASSIGN lref_sel-&gt;* TO &lt;sel&gt;.</item><item>    IF ( sy-subrc = 0 ).</item><item>      gs_sel = &lt;sel&gt;.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CREATE_SELECTIONS><GET_SEL><item>  METHOD GET_SEL.</item><item>    es_sel = gs_sel.</item><item>  ENDMETHOD.</item></GET_SEL><INITIALIZATION><item>  METHOD INITIALIZATION.</item><item>  ENDMETHOD.</item></INITIALIZATION><RUN><item>  METHOD run.</item><item/><item>    create_selections( ).</item><item>    initialization( ).</item><item>    autority_check( ).</item><item/><item>*   Estrazione dati nella tabella interna gt_data dalla tabella ZPP_MODB</item><item>*   Elaborazione dei record estratti in gt_data per aggiungere i ROOTNAM</item><item>*   altri legami di BOM per avere la reale esplosione :</item><item>*   - sia verso in basso, se un nodo foglia in gt_data ha BOM la sua BOM</item><item>*   - sia in laterale cioè coinvolgendo tutte le WBS interessate, ad es.</item><item>*     Padre - Componente su una BOM già esistente (il Padre aveva già al</item><item>*     da più WBS allora tale nuovo legame deve essere (se non lo abbiamo</item><item>*     le WBS</item><item>    set_data( ).</item><item/><item>    alv_create( EXPORTING iv_title = &apos;BOM&apos;(001)</item><item>                CHANGING ct_data = gt_data ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item/><item>    IF ( sy-batch = abap_true ).</item><item>*     Siamo in esecuzione Batch</item><item>*     Step 1 - Valorizzazione della tabella ZPP_PDM_NOR_BOM</item><item>      create_pdm_nor_bom( iv_show_alv = iv_show_alv ).</item><item>*     Step 2 - Valorizzazione delle tabelle ZPP_PDM_MON_ANAG e ZPP_PDM_M</item><item>      send_to_tree( ).</item><item>    ENDIF.</item><item/><item>  ENDMETHOD.</item></RUN><ALV_SHOW><item>  method ALV_SHOW.</item><item>    DATA : lo_selections    TYPE REF TO cl_salv_selections,</item><item>           lo_events        TYPE REF TO cl_salv_events_table,</item><item>           lo_event_handler TYPE REF TO lcl_handle_events,</item><item>           lo_sel           TYPE REF TO cl_salv_selections.</item><item/><item>    lo_sel = go_alv-&gt;get_selections( ).</item><item>    lo_sel-&gt;set_selection_mode( if_salv_c_selection_mode=&gt;multiple ).</item><item/><item>    lo_events = go_alv-&gt;get_event( ).</item><item>    lo_event_handler = NEW lcl_handle_events( io_sender = me</item><item>                                              io_alv    = go_alv</item><item>                                              io_sel    = lo_sel ).</item><item/><item>    SET HANDLER lo_event_handler-&gt;on_user_command FOR lo_events.</item><item/><item>    super-&gt;alv_show( ).</item><item>  endmethod.</item></ALV_SHOW><MODIFY_SCREEN><item>  METHOD MODIFY_SCREEN.</item><item>    super-&gt;modify_screen( ).</item><item>    create_selections( ).</item><item/><item>  ENDMETHOD.</item></MODIFY_SCREEN><SET_DATA><item>  METHOD set_data.</item><item>    REFRESH: gt_data, gt_pdm_nor_bom, gt_pdm_mon_bom, gt_pdm_mon_anag.</item><item/><item>*   Estrazione dello stato di rilascio del change number 5* (CAD Meccani</item><item>    TRY.</item><item>        DATA: lv_prefix TYPE string.</item><item>        &quot; ritorna lo stato del change number in cui è possibile il trasf</item><item>        &quot; il parametro di importing ev_prefix rappresenta il numero iniz</item><item>        DATA(lv_aenst) = zcl_pp_ectr=&gt;get_cad_mec_bom_status( IMPORTING</item><item>        lv_prefix = lv_prefix &amp;&amp; &apos;%&apos;.</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item/><item>*   Estrazione dalla tabella ZPP_MODBOM delle 3 possibili casistiche</item><item>    SELECT * INTO CORRESPONDING FIELDS OF TABLE gt_data</item><item>             FROM zpp_modbom</item><item>*                      Gestione BOM SCHELETRO</item><item>             WHERE ( ( aennr = space AND sortf_new = &apos;SCHELETRO&apos; ) OR</item><item>*                      Gestione CAD Meccanico</item><item>                     ( aennr LIKE lv_prefix AND EXISTS ( SELECT * FROM a</item><item/><item>*                      Gestione CAD Elettrico</item><item>                     ( aennr LIKE &apos;BOM-%&apos; AND sortf_new LIKE &apos;E%&apos; ) )</item><item>             AND   matnr  IN gs_sel-s_matnr</item><item>             AND   zflag1 = abap_true</item><item>             AND   zflag2 = abap_false</item><item>*             AND   NOT EXISTS ( SELECT * FROM ztppp_ectr_cn WHERE aennr</item><item>*             AND   NOT EXISTS ( SELECT * FROM ztppp_ectr_sch WHERE matn</item><item>*             ORDER BY datum uzeit matnr posnr.</item><item>             ORDER BY datum uzeit matnr idnrk vbkz.</item><item/><item>*   Da tener presente che in gt_data i legami di BOM SCHELETRO già elabo</item><item>*   non sono presenti perchè bloccate a monte dal programma ZPP_PDM_TO_S</item><item>*   Tali legami saranno aggiunti dall&apos;algoritmo di propagazione verso il</item><item/><item>*   Per ogni record in gt_data determina il relativo ROOTNAME</item><item>*   find_rootname( ).</item><item>    find_rootname_2( ).</item><item/><item>    algoritmo_di_propagazione( ).</item><item/><item>    &quot; non cancellare nè spostare</item><item>    super-&gt;set_data( it_data = gt_data ).</item><item>  ENDMETHOD.</item></SET_DATA><FIND_ROOTNAME><item>  METHOD find_rootname.</item><item>    DATA: lt_rootname TYPE zsppp_ectr_norm_t,</item><item>          lv_lines    TYPE i.</item><item/><item>    LOOP AT gt_data ASSIGNING FIELD-SYMBOL(&lt;ls_data&gt;).</item><item>      lt_rootname = zcl_pp_ectr=&gt;get_bom_rootname( iv_aennr = &lt;ls_data&gt;-</item><item>                                                   iv_matnr = &lt;ls_data&gt;-</item><item>                                                   iv_sortf = &lt;ls_data&gt;-</item><item>                                                   iv_stlan = &lt;ls_data&gt;-</item><item>                                                   iv_stlal = &lt;ls_data&gt;-</item><item>      DESCRIBE TABLE lt_rootname LINES lv_lines.</item><item>      IF ( lv_lines = 1 ).</item><item>        TRY.</item><item>            &lt;ls_data&gt;-rootname = lt_rootname[ 1 ]-rootname.</item><item>            &lt;ls_data&gt;-posid = lt_rootname[ 1 ]-posid.</item><item>            &lt;ls_data&gt;-dispo = lt_rootname[ 1 ]-dispo.</item><item>          CATCH cx_root.</item><item>        ENDTRY.</item><item>      ELSE.</item><item>        LOOP AT lt_rootname INTO DATA(ls_rootname).</item><item>          DATA: ls_data_2 TYPE ty_s_data.</item><item>          MOVE-CORRESPONDING &lt;ls_data&gt; TO ls_data_2.</item><item>          TRY.</item><item>              &lt;ls_data&gt;-rootname = gt_data[ rootname = ls_rootname-rootn</item><item>              &lt;ls_data&gt;-posid = gt_data[ rootname = ls_rootname-rootname</item><item>              &lt;ls_data&gt;-dispo = gt_data[ rootname = ls_rootname-rootname</item><item>            CATCH cx_root.</item><item>          ENDTRY.</item><item>        ENDLOOP.</item><item>      ENDIF.</item><item>    ENDLOOP.  &quot;LOOP AT gt_data ASSIGNING FIELD-SYMBOL(&lt;ls_data&gt;).</item><item/><item>    DELETE ADJACENT DUPLICATES FROM gt_data COMPARING rootname matnr idn</item><item/><item>    DELETE gt_data WHERE rootname IS INITIAL.</item><item>    DELETE gt_data WHERE rootname NOT IN gs_sel-s_root.</item><item>    DELETE gt_data WHERE posid NOT IN gs_sel-s_posid.</item><item>    DELETE gt_data WHERE dispo NOT IN gs_sel-s_dispo.</item><item>  ENDMETHOD.</item></FIND_ROOTNAME><CREATE_PDM_NOR_BOM><item>  METHOD create_pdm_nor_bom.</item><item>    REFRESH: gt_pdm_nor_bom.</item><item/><item>    SELECT * APPENDING CORRESPONDING FIELDS OF TABLE gt_pdm_nor_bom</item><item>             FROM zpp_pdm_nor_bom</item><item>             WHERE elaborato = abap_false.</item><item/><item>    LOOP AT gt_data INTO DATA(ls_data).</item><item>      DATA: ls_pdm_nor_bom TYPE zpp_pdm_nor_bom.</item><item>      CLEAR: ls_pdm_nor_bom.</item><item>      MOVE-CORRESPONDING ls_data TO ls_pdm_nor_bom.</item><item>      ls_pdm_nor_bom-parentname = ls_data-matnr.</item><item>      ls_pdm_nor_bom-childname  = ls_data-idnrk.</item><item>      ls_pdm_nor_bom-relpos     = ls_data-posnr.</item><item>*      CASE ls_data-vbkz.</item><item>*        WHEN &apos;I&apos;.</item><item>*          APPEND ls_pdm_nor_bom TO gt_pdm_nor_bom.</item><item>*        WHEN &apos;U&apos;.</item><item>*          DATA: lv_hour TYPE c LENGTH 8.</item><item>*          WRITE sy-uzeit TO lv_hour.</item><item>*          ls_pdm_nor_bom-relenddate = sy-datum+6(2) &amp;&amp; &apos;/&apos; &amp;&amp; sy-datum+</item><item>*          APPEND ls_pdm_nor_bom TO gt_pdm_nor_bom.</item><item>*          ls_pdm_nor_bom-relenddate = &apos;31/12/2099 00:00:00&apos;.</item><item>*          APPEND ls_pdm_nor_bom TO gt_pdm_nor_bom.</item><item>*        WHEN &apos;D&apos;.</item><item>**          DATA: lv_hour TYPE c LENGTH 8.</item><item>*          WRITE sy-uzeit TO lv_hour.</item><item>*          ls_pdm_nor_bom-relenddate = sy-datum+6(2) &amp;&amp; &apos;/&apos; &amp;&amp; sy-datum+</item><item>*          APPEND ls_pdm_nor_bom TO gt_pdm_nor_bom.</item><item>*      ENDCASE.</item><item>      APPEND ls_pdm_nor_bom TO gt_pdm_nor_bom.</item><item>    ENDLOOP.</item><item/><item>    IF ( gt_pdm_nor_bom[] IS INITIAL ).</item><item>      RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s019(zppp_ectr).</item><item>    ENDIF.</item><item/><item>    set_tables_fase_1( ).</item><item>    IF ( gs_sel-p_test = abap_false ).</item><item>      update_tables_fase_1( ).</item><item>    ENDIF.</item><item/><item>    alv_create( EXPORTING iv_title = &apos;TREE&apos;(002)</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN2&apos;</item><item>                CHANGING ct_data = gt_pdm_nor_bom ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CREATE_PDM_NOR_BOM><CREATE_TREE_OLD><item>  METHOD CREATE_TREE_OLD.</item><item>    create_pdm_nor_bom( ).</item><item>    alv_create( EXPORTING iv_title = &apos;TREE&apos;(002)</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN2&apos;</item><item>                CHANGING ct_data = gt_pdm_nor_bom ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CREATE_TREE_OLD><SET_TABLES_FASE_1><item>  METHOD set_tables_fase_1.</item><item>    LOOP AT gt_data ASSIGNING FIELD-SYMBOL(&lt;ls_data&gt;) WHERE zflag2 = aba</item><item>      &lt;ls_data&gt;-zflag2 = abap_true.</item><item>    ENDLOOP.</item><item/><item>    gv_fase = 1.</item><item>  ENDMETHOD.</item></SET_TABLES_FASE_1><UPDATE_TABLES_FASE_1><item>  METHOD update_tables_fase_1.</item><item>    DATA: lt_modbom      TYPE TABLE OF zpp_modbom,</item><item>          lt_pdm_nor_bom TYPE TABLE OF zpp_pdm_nor_bom,</item><item>          ls_modbom      TYPE zpp_modbom,</item><item>          ls_pdm_nor_bom TYPE zpp_pdm_nor_bom.</item><item>    REFRESH: lt_modbom, lt_pdm_nor_bom.</item><item/><item>*    MOVE-CORRESPONDING gt_data TO lt_modbom.</item><item>    MOVE-CORRESPONDING gt_pdm_nor_bom TO lt_pdm_nor_bom.</item><item/><item>*    LOOP AT lt_modbom INTO DATA(ls_data) WHERE zflag2 = abap_true.</item><item>    LOOP AT gt_data INTO DATA(ls_data) WHERE zflag2  = abap_true</item><item>                                       AND   to_save = abap_true.   &quot; è</item><item>      UPDATE zpp_modbom SET zflag2 = abap_true WHERE aennr        = ls_d</item><item>                                               AND   stlan        = ls_d</item><item>                                               AND   datum        = ls_d</item><item>                                               AND   uzeit        = ls_d</item><item>                                               AND   matnr        = ls_d</item><item>                                               AND   posnr        = ls_d</item><item>                                               AND   pspnr        = ls_d</item><item>                                               AND   idnrk        = ls_d</item><item>                                               AND   werks        = ls_d</item><item>                                               AND   stlal        = ls_d</item><item>                                               AND   vbkz         = ls_d</item><item>                                               AND   oitxt        = ls_d</item><item>                                               AND   relstartdate = ls_d</item><item>                                               AND   relenddate   = ls_d</item><item>    ENDLOOP.</item><item/><item>    MODIFY zpp_pdm_nor_bom FROM TABLE lt_pdm_nor_bom.</item><item/><item>    COMMIT WORK AND WAIT.</item><item>  ENDMETHOD.</item></UPDATE_TABLES_FASE_1><SET_TABLES_FASE_2><item>  METHOD set_tables_fase_2.</item><item>    DATA: ls_pdm_mon_anag TYPE ty_s_pdm_mon_anag,</item><item>          ls_pdm_mon_bom  TYPE ty_s_pdm_mon_bom.</item><item/><item>break kosmedev.</item><item>    LOOP AT gt_pdm_nor_bom INTO DATA(ls_pdm_nor_bom).</item><item>      DATA(lv_tabix) = sy-tabix.</item><item>      CLEAR: ls_pdm_mon_anag, ls_pdm_mon_bom.</item><item/><item>      MOVE-CORRESPONDING ls_pdm_nor_bom TO ls_pdm_mon_anag.</item><item>      ls_pdm_mon_anag-mandt = sy-mandt.</item><item>      ls_pdm_mon_anag-tipofile = 20.</item><item>      ls_pdm_mon_anag-datum = sy-datum.</item><item>      ls_pdm_mon_anag-uzeit = sy-uzeit.</item><item>      ls_pdm_mon_anag-codename = ls_pdm_nor_bom-parentname.</item><item>      ls_pdm_mon_anag-codeqty = 1.</item><item>      DATA: ls_modbom TYPE zpp_modbom.</item><item>      CLEAR: ls_modbom.</item><item>*      IF ( NOT gt_data[] IS INITIAL ).</item><item>      DATA: lt_data TYPE TABLE OF zpp_modbom.</item><item>      MOVE-CORRESPONDING gt_data TO lt_data.</item><item>      TRY.</item><item>          ls_modbom = lt_data[ matnr        = ls_pdm_nor_bom-rootname</item><item>                               relstartdate = ls_pdm_nor_bom-relstartdat</item><item>                               relenddate   = ls_pdm_nor_bom-relenddate</item><item>                               posnr        = ls_pdm_nor_bom-relpos+1(4)</item><item>                               relqty       = ls_pdm_nor_bom-relqty ].</item><item>        CATCH cx_root.</item><item>          SELECT * INTO CORRESPONDING FIELDS OF ls_modbom</item><item>                   FROM zpp_modbom</item><item>                   WHERE matnr        = ls_pdm_nor_bom-rootname</item><item>                   AND   relstartdate = ls_pdm_nor_bom-relstartdate</item><item>                   AND   relenddate   = ls_pdm_nor_bom-relenddate</item><item>                   AND   posnr        = ls_pdm_nor_bom-relpos+1(4)</item><item>                   AND   relqty       = ls_pdm_nor_bom-relqty</item><item>                   AND   zflag1       = abap_true</item><item>                   AND   zflag2       = abap_true</item><item>                         ORDER BY datum DESCENDING uzeit DESCENDING.</item><item>            EXIT.</item><item>          ENDSELECT.</item><item>      ENDTRY.</item><item>*      ELSE.</item><item>*        SELECT * INTO CORRESPONDING FIELDS OF ls_modbom</item><item>*                 FROM zpp_modbom</item><item>*                 WHERE matnr        = ls_pdm_nor_bom-rootname</item><item>*                 AND   relstartdate = ls_pdm_nor_bom-relstartdate</item><item>*                 AND   relenddate   = ls_pdm_nor_bom-relenddate</item><item>*                 AND   posnr        = ls_pdm_nor_bom-relpos+1(4)</item><item>*                 AND   relqty       = ls_pdm_nor_bom-relqty</item><item>*                 AND   zflag1       = abap_true</item><item>*                 AND   zflag2       = abap_true</item><item>*                       ORDER BY datum DESCENDING uzeit DESCENDING.</item><item>*          EXIT.</item><item>*        ENDSELECT.</item><item>*      ENDIF.</item><item>      MOVE-CORRESPONDING ls_pdm_nor_bom TO ls_pdm_mon_bom.</item><item>      IF ( ls_modbom-aennr IS INITIAL ).</item><item>        ls_pdm_mon_anag-opname = ls_modbom-sortf_new.</item><item>      ELSE.</item><item>        ls_pdm_mon_anag-opname = ls_modbom-aennr.</item><item>      ENDIF.</item><item>      APPEND ls_pdm_mon_anag TO gt_pdm_mon_anag.</item><item/><item>      ls_pdm_mon_bom-mandt = sy-mandt.</item><item>      ls_pdm_mon_bom-tipofile = 23.</item><item>      ls_pdm_mon_bom-datum = sy-datum.</item><item>      ls_pdm_mon_bom-uzeit = sy-uzeit.</item><item>      ls_pdm_mon_bom-counter = lv_tabix.</item><item>      APPEND ls_pdm_mon_bom TO gt_pdm_mon_bom.</item><item>    ENDLOOP.</item><item/><item>    LOOP AT gt_pdm_mon_anag ASSIGNING FIELD-SYMBOL(&lt;ls_pdm_mon_anag&gt;).</item><item>      lv_tabix = sy-tabix.</item><item>      &lt;ls_pdm_mon_anag&gt;-counter = lv_tabix.</item><item>    ENDLOOP.</item><item/><item>    gv_fase = 2.</item><item>  ENDMETHOD.</item></SET_TABLES_FASE_2><UPDATE_TABLES_FASE_2><item>  METHOD update_tables_fase_2.</item><item>    DELETE ADJACENT DUPLICATES FROM gt_pdm_mon_anag COMPARING rootname c</item><item/><item>    LOOP AT gt_pdm_nor_bom INTO DATA(ls_pdm_nor_bom) WHERE elaborato = a</item><item>      UPDATE zpp_pdm_nor_bom SET elaborato = abap_true WHERE parentname</item><item>                                                       AND   childname</item><item>                                                       AND   rootname</item><item>                                                       AND   relstartdat</item><item>                                                       AND   relenddate</item><item>    ENDLOOP.</item><item/><item>    MODIFY zpp_pdm_mon_anag FROM TABLE gt_pdm_mon_anag.</item><item/><item>    MODIFY zpp_pdm_mon_bom FROM TABLE gt_pdm_mon_bom.</item><item/><item>    COMMIT WORK AND WAIT.</item><item>  ENDMETHOD.</item></UPDATE_TABLES_FASE_2><SEND_TO_TREE><item>  METHOD send_to_tree.</item><item>    set_tables_fase_2( ).</item><item/><item>    IF ( gs_sel-p_test = abap_true ).</item><item>      RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s020(zppp_ectr).</item><item>    ENDIF.</item><item/><item>    IF ( gs_sel-p_test = abap_false ).</item><item>      update_tables_fase_2( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></SEND_TO_TREE><GET_CURRENT_FASE><item>  METHOD GET_CURRENT_FASE.</item><item>    rv_ret = gv_fase.</item><item>  ENDMETHOD.</item></GET_CURRENT_FASE><ALGORITMO_IN_LATERALE><item>  METHOD algoritmo_in_laterale.</item><item>*    rs_data = is_data.</item><item>*</item><item>*    LOOP AT gt_data INTO DATA(ls_data) WHERE aennr IS INITIAL</item><item>*                                       AND   sortf_new = &apos;SCHELETRO&apos;</item><item>*                                       AND   matnr = is_data-idnrk.</item><item>*      LOOP AT gt_data INTO DATA(ls_data_2) TO iv_index - 1</item><item>*                                           WHERE idnrk = ls_data-matnr.</item><item>*        LOOP AT gt_data INTO DATA(ls_data_3) WHERE rootname &lt;&gt; is_data-</item><item>*                                             AND   matnr    =  is_data-</item><item>*        ENDLOOP.</item><item>*        IF ( sy-subrc &lt;&gt; 0 ).</item><item>*          rs_data = ls_data.</item><item>*          rs_data-rootname = ls_data_2-rootname.</item><item>*          RETURN.</item><item>*        ENDIF.</item><item>*      ENDLOOP.</item><item>*      LOOP AT gt_data INTO ls_data_2 FROM iv_index + 1</item><item>*                                     WHERE idnrk = ls_data-matnr.</item><item>*        LOOP AT gt_data INTO ls_data_3 WHERE rootname &lt;&gt; is_data-rootna</item><item>*                                       AND   matnr    =  is_data-idnrk.</item><item>*        ENDLOOP.</item><item>*        IF ( sy-subrc &lt;&gt; 0 ).</item><item>*          rs_data = ls_data.</item><item>*          rs_data-rootname = ls_data_2-rootname.</item><item>*          RETURN.</item><item>*        ENDIF.</item><item>*      ENDLOOP.</item><item>*    ENDLOOP.</item><item>  ENDMETHOD.</item></ALGORITMO_IN_LATERALE><ALGORITMO_IN_PROFONDITA><item>  method ALGORITMO_IN_PROFONDITA.</item><item>  endmethod.</item></ALGORITMO_IN_PROFONDITA><ALGORITMO_DI_PROPAGAZIONE><item>  METHOD algoritmo_di_propagazione.</item><item>    LOOP AT gt_data INTO DATA(ls_data).</item><item>      DATA(lv_tabix) = sy-tabix.</item><item>&quot;      DATA(ls_data_cfr) = algoritmo_in_laterale( iv_index = lv_tabix</item><item>&quot;                                                 is_data  = ls_data ).</item><item>&quot;      IF ( ls_data_cfr &lt;&gt; ls_data ).</item><item>&quot;        APPEND ls_data_cfr TO gt_data.</item><item>&quot;        algoritmo_in_profondita( ls_data ).</item><item>&quot;        CONTINUE.</item><item>&quot;      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></ALGORITMO_DI_PROPAGAZIONE><FIND_ROOTNAME_2><item>  METHOD find_rootname_2.</item><item/><item>*   Algoritmo di propagazione verso il basso :</item><item>*     Determina i ROOTNAME. Con questi codici esplosione della BOM Multi</item><item>*     tramite ZCL_PP_ECTR METHOD get_bom.</item><item>*   REM: Il metodo get_bom esplode la bom via FM CS_BOM_EXPL_MAT_V2 con</item><item>*        quindi eventuali modifiche alla BOM eseguite con change number</item><item>*        non sono visibili perchè attive nel 31/12/3000</item><item>*   Se emergono nuovi legami allora RELSTARTDATE e RELENDDATE determinat</item><item>*   - lettura della ZPP_PDM_NOR_BOM per estrarre l&apos;ultimo record con REL</item><item>*   - se nessun record è presente sulla ZPP_PDM_NOR_BOM allora lettura d</item><item>*     per estrarre l&apos;ultimo record con RELENDDATE = 31/12/2099 00:00:00</item><item>*</item><item>*   Estrazione della WBS dalla tabella ZPS_WBS_APERTE</item><item>    find_rootname_sch( ).</item><item/><item>*   Determinare l&apos;elenco dei ROOTNAME dalla classificazione del change n</item><item>*   Algoritmo di propagazione in laterale ( a partità di change number )</item><item>*     Verificare se tale elenco è esaustivo o il progettista ne ha dimen</item><item>*     utilizzando la tabella ZPP_PDM_NOR_BOM. Per ogni legame Padre-Comp</item><item>*     accedere alla tabella ZPP_PDM_NOR_BOM anche con RELENDDATE = 31/12</item><item>*     dei record estratti raggruppare per ROOTNAME</item><item>*   Arriviamo quindi ad avere N ROOTNAME</item><item>*</item><item>*   Algoritmo di propagazione verso il basso ( a partità di change numbe</item><item>*     per tutti i Componenti (IDNRK) che sono foglie nella gt_data cioè</item><item>*     come MATNR in gt_data verificare che siano:</item><item>*     - ZMTO (MARC-DISGR)</item><item>*     - MARC-BESKZ = E oppure</item><item>*     - MARC-BESKZ = F e MARC-SOBSL = 30</item><item>*     allora esplosione della eventuale BOM Multilivello della foglia tr</item><item>*   Potenzialmente si aggiungono record alla gt_data</item><item>*   Arriviamo quindi ad avere M legami Padre-Componente</item><item>*</item><item>*   Si deve garantire che in tabella gt_data ci siano tutti gli N * M le</item><item>*</item><item>*   Nota: i ROOTNAME validi devono essere presenti nella tabella ZPS_WBS</item><item>    find_rootname_mec( ).</item><item/><item>    find_rootname_ele( ).</item><item/><item>    LOOP AT gt_data INTO DATA(ls_data) WHERE to_save = abap_true.</item><item>      LOOP AT gt_data INTO DATA(ls_data_2) WHERE rootname     = ls_data-</item><item>                                           AND   matnr        = ls_data-</item><item>                                           AND   idnrk        = ls_data-</item><item>                                           AND   relstartdate = ls_data-</item><item>                                           AND   relenddate   = ls_data-</item><item>                                           AND   to_save      = abap_fal</item><item>        DELETE gt_data.</item><item>      ENDLOOP.</item><item>    ENDLOOP.</item><item>    SORT gt_data BY rootname datum uzeit.</item><item>    gv_fase = 0.</item><item/><item>ENDMETHOD.</item></FIND_ROOTNAME_2><FIND_ROOTNAME_ELE><item>  method FIND_ROOTNAME_ELE.</item><item>  endmethod.</item></FIND_ROOTNAME_ELE><FIND_ROOTNAME_MEC><item>METHOD find_rootname_mec.</item><item>  TYPES: BEGIN OF ty_s_aennr,</item><item>           aennr TYPE aennr,</item><item>         END OF ty_s_aennr.</item><item>  TYPES: BEGIN OF ty_s_rootname.</item><item>      INCLUDE TYPE zsppp_ectr_norm.</item><item>      INCLUDE TYPE ty_s_aennr.</item><item>  TYPES: END OF ty_s_rootname.</item><item>  TYPES: ty_t_aennr    TYPE TABLE OF ty_s_aennr,</item><item>         ty_t_rootname TYPE TABLE OF ty_s_rootname.</item><item/><item>  DATA: lt_aennr TYPE ty_t_aennr,</item><item>        ls_aennr TYPE ty_s_aennr.</item><item/><item>  DATA: lt_rootname TYPE ty_t_rootname,</item><item>        lv_lines    TYPE i.</item><item/><item>  REFRESH: lt_aennr.</item><item/><item>* Estrazione del prefisso 5* (CAD Meccanico) da tabella di parametrizzaz</item><item>  TRY.</item><item>      DATA: lv_prefix TYPE string.</item><item>      &quot; ritorna lo stato del change number in cui è possibile il trasfer</item><item>      &quot; il parametro di importing ev_prefix rappresenta il numero inizia</item><item>*      DATA(lv_aenst) = zcl_pp_ectr=&gt;get_cad_mec_bom_status( IMPORTING e</item><item>      zcl_pp_ectr=&gt;get_cad_mec_bom_status( IMPORTING ev_prefix = lv_pref</item><item>      lv_prefix = lv_prefix.</item><item>    CATCH cx_root.</item><item>  ENDTRY.</item><item/><item>* Estrazione dei change number con prefisso 5* (CAD Meccanico)</item><item>  LOOP AT gt_data INTO DATA(ls_data) WHERE aennr(1) = lv_prefix.</item><item>    CLEAR: ls_aennr.</item><item>    MOVE-CORRESPONDING ls_data TO ls_aennr.</item><item>    COLLECT ls_aennr INTO lt_aennr.</item><item>  ENDLOOP.</item><item/><item>* Estrazione dei ROOTNAME dalla relativa classificazione BAPI_OBJCL_GETD</item><item>  REFRESH: lt_rootname.</item><item>  LOOP AT lt_aennr INTO ls_aennr.</item><item>    DATA(lt_rootname2) = zcl_pp_ectr=&gt;get_bom_mec_rootname( ls_aennr-aen</item><item>    LOOP AT lt_rootname2 INTO DATA(ls_rootname2).</item><item>      DATA: ls_rootname TYPE ty_s_rootname.</item><item>      CLEAR: ls_rootname.</item><item>      MOVE-CORRESPONDING ls_aennr TO ls_rootname.</item><item>      MOVE-CORRESPONDING ls_rootname2 TO ls_rootname.</item><item>      COLLECT ls_rootname INTO lt_rootname.</item><item>    ENDLOOP.</item><item>  ENDLOOP.</item><item/><item>  LOOP AT gt_data ASSIGNING FIELD-SYMBOL(&lt;ls_data&gt;) WHERE aennr(1) = lv_</item><item>    TRY.</item><item>        DATA(ls_root) = lt_rootname[ aennr = &lt;ls_data&gt;-aennr ].</item><item>        &lt;ls_data&gt;-rootname = ls_root-rootname.</item><item>        &lt;ls_data&gt;-posid    = ls_root-posid.</item><item>        &lt;ls_data&gt;-dispo    = ls_root-dispo.</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item>  ENDLOOP.</item><item/><item>  &quot; estrazione componenti attivi per i rootname trovati sopra (tabella L</item><item>  DATA: lt_pdm_nor_bom TYPE TABLE OF zpp_pdm_nor_bom.</item><item>  SELECT * INTO TABLE @lt_pdm_nor_bom</item><item>           FROM zpp_pdm_nor_bom</item><item>           FOR ALL ENTRIES IN @lt_rootname</item><item>           WHERE rootname   = @lt_rootname-rootname</item><item>           AND   relenddate = &apos;31/12/2099 00:00:00&apos;.</item><item/><item>  &quot; cerco le foglie (IDNRK non presenti come MATNR)</item><item>  DATA: lt_data_leaf TYPE ty_t_data.</item><item>  REFRESH: lt_data_leaf.</item><item>  LOOP AT gt_data INTO ls_data WHERE aennr(1) = lv_prefix.</item><item>    TRY.</item><item>        DATA(ls_data_2) = gt_data[ aennr = ls_data-aennr</item><item>                                   matnr = ls_data-idnrk ].</item><item>      CATCH cx_root.</item><item>        SELECT SINGLE matnr INTO @DATA(lv_matnr)</item><item>               FROM marc</item><item>               WHERE werks = &apos;6301&apos;</item><item>               AND   matnr = @ls_data-idnrk</item><item>               AND   disgr = &apos;ZMTO&apos;</item><item>               AND ( beskz = &apos;E&apos; OR beskz = &apos;F&apos; )</item><item>               AND   sobsl = &apos;30&apos;.</item><item>        IF ( sy-subrc = 0 ).</item><item>          DATA(ls_bom) = zcl_pp_ectr=&gt;get_bom( iv_capid = &apos;PC01&apos;</item><item>                                               iv_datuv = sy-datum</item><item>                                               iv_matnr = ls_data-idnrk</item><item>                                               iv_ememg = 1</item><item>                                               iv_mehrs = abap_true</item><item>                                               iv_stlan = ls_data-stlan</item><item>                                               iv_stlal = ls_data-stlal</item><item>          LOOP AT lt_pdm_nor_bom INTO DATA(ls_pdm_nor_bom).</item><item>            LOOP AT ls_bom-t_stb INTO DATA(ls_stb).</item><item>              READ TABLE gt_data INTO ls_data WITH KEY rootname = ls_pdm</item><item>                                                       matnr    = ls_stb</item><item>                                                       idnrk    = ls_stb</item><item>              IF ( sy-subrc = 0 ).</item><item>*                &quot; Caso 1. Legame Padre-Componente è già sulla gt_data</item><item>*                ls_data = gt_data[ matnr = ls_stb-baugr idnrk = ls_stb-</item><item>*                DATA(lv_tabix) = sy-tabix.</item><item>*                ls_data-rootname = ls_pdm_nor_bom-rootname.</item><item>*                ls_data-posid = lt_rootname[ aennr = ls_data-aennr</item><item>*                                             rootname = ls_data-rootnam</item><item>*                ls_data-dispo = lt_rootname[ aennr = ls_data-aennr</item><item>*                                             rootname = ls_data-rootnam</item><item>*                ls_data-to_save = abap_true.         &quot;Flag per indicare</item><item>*                MODIFY gt_data FROM ls_data INDEX lv_tabix TRANSPORTING</item><item>              ELSE.</item><item>                &quot; Caso 2. Legame Padre-Componente non presente sulla gt_</item><item>                CLEAR: ls_data.</item><item>*                  ls_data = gt_data[ idnrk = ls_stb-baugr ].</item><item>                ls_data = gt_data[ matnr = ls_stb-baugr ].</item><item>                CLEAR: ls_data-relstartdate, ls_data-relenddate.</item><item>                MOVE-CORRESPONDING ls_stb TO ls_data.</item><item>                ls_data-mandt = sy-mandt.</item><item>                ls_data-rootname = ls_pdm_nor_bom-rootname.</item><item>                ls_data-matnr = ls_stb-baugr.</item><item>                ls_data-idnrk = ls_stb-idnrk.</item><item>                ls_data-relqty = ls_stb-menge.</item><item>                ls_data-posid = lt_rootname[ aennr = ls_data-aennr</item><item>                                             rootname = ls_data-rootname</item><item>                ls_data-dispo = lt_rootname[ aennr = ls_data-aennr</item><item>                                             rootname = ls_data-rootname</item><item>                &quot; Le date RELSTARTDATE e RELENDDATE devono essere recupe</item><item>                &quot; a parità di PARENTNAME ( ls_data-matnr )  / CHILDNAME</item><item>                &quot; Quindi il MAX ( RELSTARTDATE )</item><item>                &quot; ...</item><item/><item>                &quot; Se nessun record è presente sulla ZPP_PDM_NOR_BOM allo</item><item>                &quot; essendo un legame da BOM SCHELTRO avremo un solo recor</item><item>                &quot; ...</item><item/><item>                zcl_pp_ectr=&gt;get_bom_dates( EXPORTING iv_rootname   = ls</item><item>                                                      iv_parentname = ls</item><item>                                                      iv_childname  = ls</item><item>                                            CHANGING  cv_relstartdate =</item><item>                                                      cv_relenddate   =</item><item>                                                      cv_datum        =</item><item>                                                      cv_uzeit        =</item><item/><item>                ls_data-vbkz = &apos;I&apos;.</item><item>                ls_data-to_save = abap_false.         &quot;Flag per indicare</item><item>                APPEND ls_data TO lt_data_leaf.</item><item>              ENDIF.</item><item>            ENDLOOP.  &quot;LOOP AT ls_bom-t_stb INTO DATA(ls_stb).</item><item>          ENDLOOP.  &quot;LOOP AT lt_pdm_nor_bom INTO DATA(ls_pdm_nor_bom).</item><item>        ENDIF.  &quot;IF ( sy-subrc = 0 ).</item><item>    ENDTRY. &quot;DATA(ls_data_2) = gt_data[ matnr = ls_data-idnrk ].</item><item>  ENDLOOP.  &quot;LOOP AT gt_data INTO ls_data WHERE aennr(1) = lv_prefix</item><item/><item>ENDMETHOD.</item></FIND_ROOTNAME_MEC><FIND_ROOTNAME_SCH><item>  METHOD find_rootname_sch.</item><item>    TYPES: BEGIN OF ty_s_matnr,</item><item>             matnr TYPE matnr,</item><item>             stlan TYPE stlan,</item><item>             stlal TYPE stlal,</item><item>           END OF ty_s_matnr,</item><item>           ty_t_matnr TYPE TABLE OF ty_s_matnr.</item><item/><item>    DATA: lt_matnr TYPE ty_t_matnr,</item><item>          ls_matnr TYPE ty_s_matnr.</item><item/><item>    REFRESH: lt_matnr.</item><item>*   Estrazione raggruppata dei ROOTNAME nella tabella interna lt_matnr</item><item>    LOOP AT gt_data INTO DATA(ls_data) WHERE aennr IS INITIAL</item><item>                                       AND   sortf_new = &apos;SCHELETRO&apos;</item><item>                                       AND ( matnr(1) = &apos;K&apos; OR matnr(1)</item><item>      CLEAR: ls_matnr.</item><item>      MOVE-CORRESPONDING ls_data TO ls_matnr.</item><item>      COLLECT ls_matnr INTO lt_matnr.</item><item>    ENDLOOP.</item><item/><item>    LOOP AT gt_data ASSIGNING FIELD-SYMBOL(&lt;ls_data&gt;).</item><item>      &lt;ls_data&gt;-to_save = abap_true.  &quot;Flag per indicare che il record s</item><item>    ENDLOOP.</item><item/><item>*   Elaborazione dei ROOTNAME</item><item>    LOOP AT lt_matnr INTO ls_matnr.</item><item>*     Per ogni ROOTNAME identificato esplosione della BOM Multilivello</item><item>      DATA(ls_bom) = zcl_pp_ectr=&gt;get_bom( iv_capid = &apos;PC01&apos;</item><item>                                           iv_datuv = sy-datum</item><item>                                           iv_matnr = ls_matnr-matnr</item><item>                                           iv_ememg = 1</item><item>                                           iv_mehrs = abap_true</item><item>                                           iv_stlan = ls_matnr-stlan</item><item>                                           iv_stlal = ls_matnr-stlal ).</item><item/><item>*     LOOP sui componenti della BOM Multilivello discriminando se il leg</item><item>*     è già sulla gt_data oppure è nuovo. In presenza di un nuovo legame</item><item>      LOOP AT ls_bom-t_stb INTO DATA(ls_stb).</item><item>        READ TABLE gt_data INTO ls_data WITH KEY rootname  = space</item><item>                                                 matnr     = ls_stb-baug</item><item>                                                 idnrk     = ls_stb-idnr</item><item>                                                 aennr     = space</item><item>                                                 sortf_new = &apos;SCHELETRO&apos;</item><item>        IF ( sy-subrc = 0 ).</item><item>*         Caso 1. Legame Padre-Componente è già sulla gt_data</item><item>          ls_data = gt_data[ matnr = ls_stb-baugr idnrk = ls_stb-idnrk ]</item><item>          DATA(lv_tabix) = sy-tabix.</item><item>          ls_data-rootname = ls_matnr-matnr.</item><item>*          ls_data-to_save = abap_true.         &quot;Flag per indicare che i</item><item>          MODIFY gt_data FROM ls_data INDEX lv_tabix TRANSPORTING rootna</item><item>        ELSE.</item><item>*         Caso 2. Legame Padre-Componente non presente sulla gt_data</item><item>          CLEAR: ls_data.</item><item>*          ls_data = gt_data[ idnrk = ls_stb-baugr ].</item><item>*          ls_data = gt_data[ matnr = ls_stb-baugr ].</item><item>          ls_data = gt_data[ matnr = ls_matnr-matnr ].    &quot;Selezione di</item><item>          CLEAR: ls_data-relstartdate, ls_data-relenddate, ls_data-sortf</item><item>          MOVE-CORRESPONDING ls_stb TO ls_data.</item><item>          ls_data-mandt = sy-mandt.</item><item>          ls_data-rootname = ls_matnr-matnr.  &quot;ROOTNAME</item><item>          ls_data-matnr = ls_stb-baugr.       &quot;PARENTNAME</item><item>          ls_data-idnrk = ls_stb-idnrk.       &quot;CHILDNAME</item><item>          ls_data-relqty = ls_stb-menge.      &quot;RELQTY</item><item>*         Le date RELSTARTDATE e RELENDDATE devono essere recuperate dal</item><item>*         a parità di PARENTNAME ( ls_data-matnr )  / CHILDNAME ( ls_dat</item><item>*         Quindi il MAX ( RELSTARTDATE )</item><item>*         ...</item><item/><item>*         Se nessun record è presente sulla ZPP_PDM_NOR_BOM allora lettu</item><item>*         essendo un legame da BOM SCHELTRO avremo un solo record</item><item>*         ...</item><item/><item>*          ls_data-relstartdate = ls_stb-datuv+6(2) &amp;&amp; &apos;/&apos; &amp;&amp; ls_stb-dat</item><item>          zcl_pp_ectr=&gt;get_bom_dates( EXPORTING iv_rootname   = ls_data-</item><item>                                                iv_parentname = ls_data-</item><item>                                                iv_childname  = ls_data-</item><item>                                      CHANGING  cv_relstartdate = ls_dat</item><item>                                                cv_relenddate   = ls_dat</item><item>                                                cv_datum        = ls_dat</item><item>                                                cv_uzeit        = ls_dat</item><item/><item>          ls_data-vbkz = &apos;I&apos;.</item><item>          ls_data-to_save = abap_false.         &quot;Flag per indicare che i</item><item>          APPEND ls_data TO gt_data.</item><item>        ENDIF.</item><item>      ENDLOOP.   &quot;LOOP AT ls_bom-t_stb INTO DATA(ls_stb).</item><item>    ENDLOOP.   &quot;LOOP AT lt_matnr INTO ls_matnr.</item><item/><item>*    SORT gt_data BY rootname matnr idnrk.</item><item>*    SORT gt_data BY rootname relstartdate relenddate.</item><item>    SORT gt_data BY rootname datum uzeit.</item><item/><item>    DATA: lv_rootname TYPE zpp_albero-rootname,</item><item>          lv_posid    TYPE prps-posid,</item><item>          lv_dispo    TYPE marc-dispo..</item><item>    CLEAR: lv_rootname.</item><item/><item>*   Estrazione della WBS e del Resp.MRP</item><item>    LOOP AT gt_data ASSIGNING &lt;ls_data&gt;.</item><item>      IF ( lv_rootname &lt;&gt; &lt;ls_data&gt;-rootname ).</item><item>        DATA: lv_wbsroot TYPE zps_wbs_aperte-zwbsroot.</item><item>        DATA: ls_wbs_aperte TYPE zps_wbs_aperte.</item><item>        lv_wbsroot = &apos;%&amp;%&apos; &amp;&amp; &lt;ls_data&gt;-rootname.</item><item>        SELECT SINGLE * INTO CORRESPONDING FIELDS OF ls_wbs_aperte FROM</item><item>        IF ( sy-subrc = 0 ).</item><item>          IF ( &lt;ls_data&gt;-posid IS INITIAL ).</item><item>            DATA: lt_split TYPE TABLE OF string.</item><item>            REFRESH lt_split.</item><item>            SPLIT ls_wbs_aperte-zwbsroot AT &apos; &amp; &apos; INTO TABLE lt_split.</item><item>            TRY.</item><item>*                &lt;ls_data&gt;-posid = lt_split[ 1 ].</item><item>                lv_posid = lt_split[ 1 ].</item><item>              CATCH cx_root.</item><item>            ENDTRY.</item><item>          ENDIF.</item><item>        ELSE.</item><item>*         E&apos; arrivata una BOM scheletro su di un ROOTNAME senza WBS Aper</item><item>*         Errore al momento non gestito ...</item><item>        ENDIF.</item><item>        SELECT SINGLE dispo INTO lv_dispo FROM marc WHERE matnr = &lt;ls_da</item><item>                                                    AND   werks = &apos;6301&apos;</item><item>      ENDIF.</item><item>      &lt;ls_data&gt;-posid = lv_posid.</item><item>      &lt;ls_data&gt;-dispo = lv_dispo.</item><item>      lv_rootname = &lt;ls_data&gt;-rootname.</item><item>    ENDLOOP.   &quot;LOOP AT gt_data ASSIGNING FIELD-SYMBOL(&lt;ls_data&gt;).</item><item/><item>    SORT gt_data BY datum uzeit matnr idnrk vbkz.</item><item/><item>  ENDMETHOD.</item></FIND_ROOTNAME_SCH></METHOD_SOURCE></CLASS_ROOT>