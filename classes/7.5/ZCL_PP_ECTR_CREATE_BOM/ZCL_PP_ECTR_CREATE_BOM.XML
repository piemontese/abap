<?xml version="1.0"?><CLASS_ROOT><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>ECTR - Normalizzatore</DESCRIPT><UUID>AFBWoCPaHuicjYtTzLUd2A==</UUID><CATEGORY>00</CATEGORY><EXPOSURE>2</EXPOSURE><STATE>1</STATE><RELEASE>0</RELEASE><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><CHGDANYON>0000-00-00</CHGDANYON><CLSCCINCL>X</CLSCCINCL><FIXPT>X</FIXPT><UNICODE>X</UNICODE><R3RELEASE>750</R3RELEASE><CLSBCCAT>00</CLSBCCAT><DURATION_TYPE>0</DURATION_TYPE><RISK_LEVEL>0</RISK_LEVEL><ATTRIBUTES><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GS_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_ALBERO</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ALBERO</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_PARENT_LIST</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PARENT_LIST</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_PARENT_LIST_1</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PARENT_LIST</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_PARENT_LIST_2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PARENT_LIST</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_PARENT_LIST_3</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PARENT_LIST</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_PARENT_LIST_4</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PARENT_LIST</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_PARENT_LIST_5</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PARENT_LIST</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_ALBERO_1</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ALBERO</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_ALBERO_2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ALBERO</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_ALBERO_3</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ALBERO</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_ALBERO_4</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ALBERO</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GT_ALBERO_5</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>13</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ALBERO</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><R3RELEASE>750</R3RELEASE><TYPESRC_LENG>0</TYPESRC_LENG></item></ATTRIBUTES><METHODS><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Costruttore</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>2</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>INITIALIZATION</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Inizializzazione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>RUN</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Esegue il programma</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GET_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Ritorna i parametri di selezione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GET_PARENTNAME_LIST</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Estrae lista parentname -step 1</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_WBS_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Controlla BOM a WBS - step 3</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea BOM universale</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_BOM_ALBERO</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Controlla BOM albero - step 2</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_BOM_TEC</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Controlla BOM tecnica - step 4</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-15</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>AUTORITY_CHECK</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Non usato</DESCRIPT><EXPOSURE>1</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CREATE_SELECTIONS</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea selezioni</DESCRIPT><EXPOSURE>1</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>UPDATE_TABLES</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Update tabelle DB</DESCRIPT><EXPOSURE>1</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><MTDNEWEXC>X</MTDNEWEXC><R3RELEASE>750</R3RELEASE><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item></METHODS><EVENTS/><TYPES><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>TY_S_PARENT_LIST</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-20</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>9</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>14</SRCROW2><SRCCOLUMN2>28</SRCCOLUMN2><TYPESRC_LENG>206</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_parent_list,
        light      TYPE icon_d,
        parentname TYPE zpp_albero-parentname,
        wbs        TYPE string,
        log        TYPE string,
      END OF ty_s_parent_list
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>TY_T_PARENT_LIST</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-20</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>16</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>16</SRCROW2><SRCCOLUMN2>52</SRCCOLUMN2><TYPESRC_LENG>49</TYPESRC_LENG><TYPESRC>ty_t_parent_list TYPE TABLE OF ty_s_parent_list
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>TY_S_ALBERO</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-20</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>18</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>31</SRCROW2><SRCCOLUMN2>23</SRCCOLUMN2><TYPESRC_LENG>585</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_albero,
        light        TYPE icon_d,
        rootname     TYPE zpp_albero-rootname,
        sort         TYPE zpp_albero-sort,
        lev          TYPE zpp_albero-lev,
        parentname   TYPE zpp_albero-parentname,
        counter      TYPE zpp_albero-counter,
        childname    TYPE zpp_albero-childname,
        relqty       TYPE zpp_albero-relqty,
        relstartdate TYPE zpp_albero-relstartdate,
        relenddate   TYPE zpp_albero-relenddate,
        posid        TYPE ps_posid,
        log          TYPE string,
      END OF ty_s_albero
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>TY_T_ALBERO</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-20</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>33</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>33</SRCROW2><SRCCOLUMN2>49</SRCCOLUMN2><TYPESRC_LENG>46</TYPESRC_LENG><TYPESRC>ty_t_albero        TYPE TABLE OF ty_s_albero
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>TY_T_ALBERO_SORT</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-20</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>35</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>37</SRCROW2><SRCCOLUMN2>90</SRCCOLUMN2><TYPESRC_LENG>210</TYPESRC_LENG><TYPESRC>ty_t_albero_sort   TYPE SORTED TABLE OF ty_s_albero
                             WITH UNIQUE KEY rootname sort lev
                             WITH UNIQUE SORTED KEY sorted_key COMPONENTS rootname sort lev
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>TY_T_ALBERO_SORT_2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-18</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-20</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>39</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>41</SRCROW2><SRCCOLUMN2>109</SRCCOLUMN2><TYPESRC_LENG>248</TYPESRC_LENG><TYPESRC>ty_t_albero_sort_2 TYPE SORTED TABLE OF ty_s_albero
                             WITH UNIQUE KEY counter rootname parentname sort lev
                             WITH UNIQUE SORTED KEY sorted_key COMPONENTS counter rootname parentname sort lev
</TYPESRC></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>TY_S_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-20</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>43</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>54</SRCROW2><SRCCOLUMN2>20</SRCCOLUMN2><TYPESRC_LENG>442</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_sel,
        s_root   TYPE RANGE OF zpp_albero-rootname,
        s_parent TYPE RANGE OF zpp_albero-parentname,
        p_godate TYPE datum,
        p_gotime TYPE uzeit,
        p_zmto   TYPE abap_bool,
        p_zmts   TYPE abap_bool,
        p_layo1  TYPE disvariant-variant,
        p_layo2  TYPE disvariant-variant,
        p_layo3  TYPE disvariant-variant,
        p_test   TYPE abap_bool,
      END OF ty_s_sel
</TYPESRC></item></TYPES><PARAMETERS><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_BOM_ALBERO</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_FALSE</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_BOM_TEC</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_FALSE</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_WBS_BOM</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_FALSE</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_PROGRAM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Programma chiamante</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-REPID</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_LANGUAGE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Campo sistema ABAP: chiave lingua dell&apos;ambiente testi</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-LANGU</TYPE><PARVALUE>SY-LANGU</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IS_SEL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Parametri di selezione</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_PFSTATUS</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Stato GUI</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SYPFKEY</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_FALSE</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GET_PARENTNAME_LIST</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_FALSE</PARVALUE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GET_SEL</CMPNAME><SCONAME>ES_SEL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>RUN</CMPNAME><SCONAME>IV_SHOW_ALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ABAP_BOOL</TYPE><PARVALUE>ABAP_TRUE</PARVALUE></item></PARAMETERS><EXCEPTIONS><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>AUTORITY_CHECK</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_BOM_ALBERO</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_BOM_TEC</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CHECK_WBS_BOM</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>CREATE_SELECTIONS</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>GET_PARENTNAME_LIST</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>INITIALIZATION</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>RUN</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><CMPNAME>UPDATE_TABLES</CMPNAME><SCONAME>ZCX_BC_EXCEPTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe eccezione autorizzazione</DESCRIPT><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-19</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><IS_RESUMABLE>X</IS_RESUMABLE></item></EXCEPTIONS><IMPLEMENTINGS/><IMPL_DETAILS/><FRIENDSHIPS/><TYPEPUSAGES><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><TYPEGROUP>ABAP</TYPEGROUP><VERSION>1</VERSION><TPUTYPE>0</TPUTYPE><IMPLICIT>X</IMPLICIT></item></TYPEPUSAGES><CLSDEFERRDS/><INTDEFERRDS/><ALIASES/><INHERITANCE><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><STATE>1</STATE><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2018-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2018-06-19</CHANGEDON></INHERITANCE><INTERFACES/><REDEFINITIONS><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><MTDNAME>ALV_SHOW</MTDNAME><EXPOSURE>2</EXPOSURE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><MTDNAME>MODIFY_SCREEN</MTDNAME><EXPOSURE>2</EXPOSURE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><MTDNAME>REFRESH_DATA</MTDNAME><EXPOSURE>2</EXPOSURE></item><item><CLSNAME>ZCL_PP_ECTR_CREATE_BOM</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE_2</REFCLSNAME><VERSION>1</VERSION><MTDNAME>SET_DATA</MTDNAME><EXPOSURE>2</EXPOSURE></item></REDEFINITIONS><TYPE_SOURCE/><LOCALS_SRC/><LOCALS_DEF><item>*&quot;* use this source file for any type of declarations (class</item><item>*&quot;* definitions, interfaces or type declarations) you need for</item><item>*&quot;* components in the private section</item><item/></LOCALS_DEF><LOCALS_IMP><item>*&quot;* use this source file for the definition and implementation of</item><item>*&quot;* local helper classes, interface definitions and type</item><item>*&quot;* declarations</item><item/><item>CLASS lcl_handle_events DEFINITION.</item><item>  PUBLIC SECTION.</item><item>    METHODS:</item><item>      constructor IMPORTING io_sender TYPE REF TO zcl_pp_ectr_create_bom</item><item>                            io_alv    TYPE REF TO cl_salv_table</item><item>                            io_sel    TYPE REF TO cl_salv_selections,</item><item>      on_user_command FOR EVENT added_function OF cl_salv_events</item><item>        IMPORTING e_salv_function.</item><item>  PRIVATE SECTION.</item><item>    DATA: go_sender TYPE REF TO zcl_pp_ectr_create_bom,</item><item>          go_alv    TYPE REF TO cl_salv_table,</item><item>          go_sel    TYPE REF TO cl_salv_selections.</item><item>*    METHODS:</item><item>*      edit.</item><item>ENDCLASS.</item><item/><item>CLASS lcl_handle_events IMPLEMENTATION.</item><item>  METHOD constructor.</item><item>    go_sender = io_sender.</item><item>    go_alv = io_alv.</item><item>    go_sel = io_sel.</item><item>  ENDMETHOD.</item><item>  METHOD on_user_command.</item><item>    DATA: lo_selections TYPE REF TO cl_salv_selections,</item><item>          lo_salv       TYPE REF TO cl_salv_table.</item><item>    DATA: lt_rows TYPE salv_t_row.</item><item>    DATA: ls_rows TYPE i.</item><item>    DATA: message TYPE string.</item><item>    CASE e_salv_function.</item><item>      WHEN &apos;EXECUTE&apos;.</item><item>        TRY.</item><item>            go_sender-&gt;create_bom( iv_show_alv = abap_true ).</item><item>            go_sender-&gt;set_refresh_data( abap_true ).</item><item>          CATCH cx_root INTO DATA(lcx_root).</item><item>            MESSAGE lcx_root-&gt;get_text( ) TYPE &apos;S&apos;.</item><item>        ENDTRY.</item><item/><item>      WHEN &apos;EXECUTE1&apos;.</item><item>        TRY.</item><item>            go_sender-&gt;check_bom_albero( iv_show_alv = abap_true ).</item><item>            go_sender-&gt;set_refresh_data( abap_true ).</item><item>          CATCH cx_root INTO lcx_root.</item><item>            MESSAGE lcx_root-&gt;get_text( ) TYPE &apos;S&apos;.</item><item>        ENDTRY.</item><item/><item>      WHEN &apos;EXECUTE2&apos;.</item><item>        TRY.</item><item>            go_sender-&gt;check_wbs_bom( iv_show_alv = abap_true ).</item><item>            go_sender-&gt;set_refresh_data( abap_true ).</item><item>          CATCH cx_root INTO lcx_root.</item><item>            MESSAGE lcx_root-&gt;get_text( ) TYPE &apos;S&apos;.</item><item>        ENDTRY.</item><item/><item>      WHEN &apos;EXECUTE3&apos;.</item><item>        TRY.</item><item>            go_sender-&gt;check_bom_tec( iv_show_alv = abap_true ).</item><item>            go_sender-&gt;set_refresh_data( abap_true ).</item><item>          CATCH cx_root INTO lcx_root.</item><item>            MESSAGE lcx_root-&gt;get_text( ) TYPE &apos;S&apos;.</item><item>        ENDTRY.</item><item/><item>      WHEN &apos;ALL_CHECKS&apos;.</item><item>        TRY.</item><item>            go_sender-&gt;check_bom_albero( iv_show_alv = abap_false ).</item><item>            go_sender-&gt;check_wbs_bom( iv_show_alv = abap_false ).</item><item>            go_sender-&gt;check_bom_tec( iv_show_alv = abap_true ).</item><item>            go_sender-&gt;set_refresh_data( abap_true ).</item><item>          CATCH cx_root INTO lcx_root.</item><item>            MESSAGE lcx_root-&gt;get_text( ) TYPE &apos;S&apos;.</item><item>        ENDTRY.</item><item/><item/><item>*      WHEN &apos;&amp;&amp;BACK&apos;.</item><item>*        break kosmedev.</item><item>*        LEAVE to screen 0.</item><item/><item>*      WHEN &apos;REFRESH&apos;.</item><item>*        go_sender-&gt;set_refresh_data( abap_true ).</item><item>*        go_sender-&gt;refresh_data( ).</item><item>*        go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item><item>*      WHEN &apos;&amp;&amp;BACK&apos;.</item><item>*        LEAVE TO SCREEN 0.</item><item>    ENDCASE.</item><item>    TRY.</item><item>        IF ( go_sender-&gt;get_refresh_data( ) = abap_true ).</item><item>          go_sender-&gt;refresh_data( ).</item><item>        ENDIF.</item><item>        go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item><item>      CATCH cx_root.</item><item>    ENDTRY.</item><item>  ENDMETHOD.</item><item>ENDCLASS.</item></LOCALS_IMP><LOCALS_MAC><item>*&quot;* use this source file for any macro definitions you need</item><item>*&quot;* in the implementation part of the class</item><item/></LOCALS_MAC><TEXT_POOL><I><item><ID>I</ID><KEY>001</KEY><ENTRY>Lista parentname</ENTRY><LENGTH>40</LENGTH></item><item><ID>I</ID><KEY>002</KEY><ENTRY>Controllo BOM Albero</ENTRY><LENGTH>23</LENGTH></item><item><ID>I</ID><KEY>003</KEY><ENTRY>Nessun dato estratto</ENTRY><LENGTH>40</LENGTH></item><item><ID>I</ID><KEY>004</KEY><ENTRY>Controllo BOM a WBS</ENTRY><LENGTH>30</LENGTH></item><item><ID>I</ID><KEY>005</KEY><ENTRY>Controllo BOM Tecnica</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>006</KEY><ENTRY>BOM Universali create</ENTRY><LENGTH>30</LENGTH></item></I></TEXT_POOL><METHOD_SOURCE><AUTORITY_CHECK><item>  METHOD AUTORITY_CHECK.</item><item>*    AUTHORITY-CHECK OBJECT &apos;M_BEST_WRK&apos;</item><item>*       ID &apos;ACTVT&apos; DUMMY</item><item>*       ID &apos;WERKS&apos; FIELD gs_sel-p_werks.</item><item>*    IF sy-subrc &lt;&gt; 0.</item><item>*      RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s001(zmmm_modula) WITH gs_sel-p_werks.</item><item>*    ENDIF.</item><item>  ENDMETHOD.</item></AUTORITY_CHECK><CONSTRUCTOR><item>  METHOD CONSTRUCTOR.</item><item>    super-&gt;constructor( iv_program = iv_program iv_language = iv_language iv_pfstatus = iv_pfstatus ).</item><item>    create_selections( ).</item><item>  ENDMETHOD.</item></CONSTRUCTOR><CREATE_SELECTIONS><item>  METHOD CREATE_SELECTIONS.</item><item>    DATA: lref_sel TYPE REF TO data.</item><item>    CREATE DATA lref_sel TYPE ty_s_sel.</item><item>    set_selections( CHANGING cref_sel = lref_sel ).</item><item>    FIELD-SYMBOLS: &lt;sel&gt;    TYPE any.</item><item>    ASSIGN lref_sel-&gt;* TO &lt;sel&gt;.</item><item>    IF ( sy-subrc = 0 ).</item><item>      gs_sel = &lt;sel&gt;.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CREATE_SELECTIONS><GET_SEL><item>  METHOD GET_SEL.</item><item>    es_sel = gs_sel.</item><item>  ENDMETHOD.</item></GET_SEL><INITIALIZATION><item>  METHOD initialization.</item><item>    REFRESH: gt_parent_list_1, gt_parent_list_2, gt_parent_list_3, gt_parent_list_4, gt_parent_list_5,</item><item>             gt_albero_1, gt_albero_2, gt_albero_3, gt_albero_4, gt_albero_5.</item><item>  ENDMETHOD.</item></INITIALIZATION><RUN><item>  METHOD run.</item><item/><item>    create_selections( ).</item><item>    initialization( ).</item><item>    autority_check( ).</item><item/><item>*   Estrazione dati nella tabella interna gt_data dalla tabella ZPP_MODBOM</item><item>*   Elaborazione dei record estratti in gt_data per aggiungere i ROOTNAME ed eventuali</item><item>*   altri legami di BOM per avere la reale esplosione :</item><item>*   - sia in laterale cioè coinvolgendo tutte le WBS interessate, ad es. se abbiamo un nuovo legame</item><item>*     Padre - Componente su una BOM già esistente (il Padre aveva già altri Componenti) ed utilizzata</item><item>*     da più WBS allora tale nuovo legame deve essere (se non lo abbiamo già in gt_data) propagato a tutte</item><item>*     le WBS</item><item>*   - sia verso in basso, se un nodo foglia in gt_data ha BOM la sua BOM va recuperata</item><item>    set_data( ).   &quot;&lt;------</item><item/><item>    alv_create( EXPORTING iv_title = &apos;Lista parentname&apos;(001)</item><item>                          iv_layout = gs_sel-p_layo1</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN1&apos;</item><item>                CHANGING ct_data = gt_parent_list ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item/><item>    IF ( sy-batch = abap_true ).</item><item>*     Siamo in esecuzione Batch</item><item>**     Step 1 - Estrazione di tutti i parentname validi</item><item>*      get_parentname_list( iv_show_alv = iv_show_alv ).</item><item>*     Step 2 - Controllo delle BOM albero</item><item>      check_bom_albero( iv_show_alv = iv_show_alv ).</item><item>*     Step 2 - Controllo delle BOM a WBS</item><item>      check_wbs_bom( iv_show_alv = iv_show_alv ).</item><item>*     Step 2 - Controllo delle BOM tecniche</item><item>      check_bom_tec( iv_show_alv = iv_show_alv ).</item><item>*     Crea BOM universale</item><item>      create_bom( iv_show_alv = iv_show_alv ).</item><item>    ENDIF.</item><item/><item>  ENDMETHOD.</item></RUN><ALV_SHOW><item>  METHOD ALV_SHOW.</item><item>    DATA : lo_selections    TYPE REF TO cl_salv_selections,</item><item>           lo_events        TYPE REF TO cl_salv_events_table,</item><item>           lo_event_handler TYPE REF TO lcl_handle_events,</item><item>           lo_sel           TYPE REF TO cl_salv_selections.</item><item/><item>    lo_sel = go_alv-&gt;get_selections( ).</item><item>    lo_sel-&gt;set_selection_mode( if_salv_c_selection_mode=&gt;multiple ).</item><item/><item>    lo_events = go_alv-&gt;get_event( ).</item><item>    lo_event_handler = NEW lcl_handle_events( io_sender = me</item><item>                                              io_alv    = go_alv</item><item>                                              io_sel    = lo_sel ).</item><item/><item>    SET HANDLER lo_event_handler-&gt;on_user_command FOR lo_events.</item><item/><item>    super-&gt;alv_show( ).</item><item>  ENDMETHOD.</item></ALV_SHOW><MODIFY_SCREEN><item>  METHOD MODIFY_SCREEN.</item><item>    super-&gt;modify_screen( ).</item><item>    create_selections( ).</item><item/><item>  ENDMETHOD.</item></MODIFY_SCREEN><SET_DATA><item>METHOD set_data.</item><item>  REFRESH: gt_parent_list, gt_albero.</item><item/><item>  IF ( NOT gt_parent_list_1[] IS INITIAL ).</item><item>    gt_parent_list[] = gt_parent_list_1[].</item><item>    gt_albero[] = gt_albero_1[].</item><item>  ELSE.</item><item/><item>    SELECT DISTINCT datum, uzeit</item><item>           UP TO 1 ROWS</item><item>           FROM zpp_ectr_chk_bom</item><item>           INTO (@DATA(lv_datum), @DATA(lv_uzeit))</item><item>           GROUP BY datum, uzeit</item><item>           ORDER BY datum DESCENDING, uzeit DESCENDING.</item><item>    ENDSELECT.</item><item/><item>    SELECT DISTINCT a~rootname, a~parentname, marc~disgr</item><item>           INTO TABLE @DATA(lt_parent_list)</item><item>           FROM zpp_albero AS a INNER JOIN marc ON marc~werks = @zcl_pp_ectr=&gt;c_werks AND</item><item>                                                   marc~matnr = a~parentname</item><item>           WHERE rootname   IN @gs_sel-s_root</item><item>           AND   parentname IN @gs_sel-s_parent</item><item>           AND   parentname &lt;&gt; @space</item><item>           AND   colore     = &apos;GRIGIO&apos;</item><item>           AND   NOT EXISTS ( SELECT datum FROM zpp_ectr_chk_bom</item><item>                                           WHERE datum      = @lv_datum</item><item>                                           AND   uzeit      = @lv_uzeit</item><item>                                           AND   rootname   = a~rootname</item><item>                                           AND   parentname = a~parentname )</item><item>           GROUP BY rootname, parentname, disgr</item><item>           ORDER BY rootname, parentname.</item><item/><item>    IF ( gs_sel-p_zmto = abap_false ).</item><item>      DELETE lt_parent_list WHERE disgr = &apos;ZMTO&apos;.</item><item>    ENDIF.</item><item/><item>    IF ( gs_sel-p_zmts = abap_false ).</item><item>      DELETE lt_parent_list WHERE disgr = &apos;ZMTS&apos;.</item><item>    ENDIF.</item><item/><item/><item>    MOVE-CORRESPONDING lt_parent_list TO gt_parent_list.</item><item>    SORT gt_parent_list.</item><item>    DELETE ADJACENT DUPLICATES FROM gt_parent_list COMPARING parentname.</item><item/><item>    LOOP AT gt_parent_list ASSIGNING FIELD-SYMBOL(&lt;ls_parent_list&gt;).</item><item>      &lt;ls_parent_list&gt;-light = icon_green_light.</item><item>    ENDLOOP.</item><item/><item>    MOVE-CORRESPONDING lt_parent_list TO gt_albero.</item><item/><item>    gt_parent_list_1[] = gt_parent_list[].</item><item>    gt_albero_1[] = gt_albero[].</item><item>  ENDIF.</item><item/><item>  &quot; non cancellare nè spostare</item><item>  super-&gt;set_data( it_data = gt_parent_list ).</item><item>ENDMETHOD.</item></SET_DATA><GET_PARENTNAME_LIST><item>  METHOD get_parentname_list.</item><item>*  IF ( gs_sel-p_test = abap_false ).</item><item>*    &quot;Aggiornamento Step 1 solo se non siamo in simulazione</item><item>*    update_tables_fase_1( ).</item><item>*  ENDIF.</item><item/><item>    IF ( gt_parent_list[] IS INITIAL ).</item><item>      &quot; Nessun dato estratto</item><item>      RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s398(00) WITH TEXT-003.</item><item>    ENDIF.</item><item/><item>    alv_create( EXPORTING iv_title = &apos;Controllo BOM&apos;(002)</item><item>                          iv_layout = gs_sel-p_layo2</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN1&apos;</item><item>                CHANGING ct_data = gt_parent_list ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></GET_PARENTNAME_LIST><CREATE_BOM><item>  METHOD create_bom.</item><item>    IF ( gs_sel-p_test = abap_true ).</item><item>      RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s020(zppp_ectr).</item><item>    ENDIF.</item><item/><item>    IF ( NOT gt_parent_list_5[] IS INITIAL ).</item><item>      gt_parent_list[] = gt_parent_list_5[].</item><item>      gt_albero[] = gt_albero_5[].</item><item>    ELSE.</item><item/><item>      DATA: ls_ecsin  TYPE csin,</item><item>            ls_estkob TYPE stkob,</item><item>            ls_estzub TYPE stzub,</item><item>            lv_key    TYPE string.</item><item/><item>      DATA: lt_albero_sort TYPE ty_t_albero_sort_2.</item><item>      REFRESH: lt_albero_sort.</item><item>      lt_albero_sort[] = gt_albero.</item><item/><item>      LOOP AT gt_parent_list ASSIGNING FIELD-SYMBOL(&lt;ls_parent_list&gt;) WHERE light = icon_green_light.</item><item>        ls_ecsin = VALUE csin( matnr = &lt;ls_parent_list&gt;-parentname</item><item>                               &quot;werks = gs_params_1-werks</item><item>                               aennr = &apos;BOM-&apos; &amp;&amp; sy-datum</item><item>                               stlan = &apos;3&apos;</item><item>                               stlal = &apos;01&apos;</item><item>                               stlty = &apos;M&apos;</item><item>                               datuv = sy-datum</item><item>                               datub = &apos;99991231&apos;</item><item>                               otmat = abap_true ).</item><item>        CLEAR: ls_estkob, ls_estzub.</item><item/><item>        DATA: lt_stpo TYPE tt_stpo,</item><item>              ls_stpo TYPE stpob.</item><item/><item>        REFRESH: lt_stpo.</item><item>        DATA(lv_counter) = 0.</item><item>        LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero_sort&gt;) WHERE parentname = &lt;ls_parent_list&gt;-parentname.</item><item>          IF ( lv_counter &lt;&gt; &lt;ls_albero_sort&gt;-counter ).</item><item>            LOOP AT lt_albero_sort INTO DATA(ls_albero_sort) WHERE counter = &lt;ls_albero_sort&gt;-counter.</item><item>              CLEAR: ls_stpo.</item><item>              ls_stpo = VALUE stpob( idnrk = ls_albero_sort-childname</item><item>                                     stlty = &apos;M&apos;</item><item>                                     postp = &apos;L&apos;</item><item>                                     datuv = sy-datum</item><item>                                     datub = &apos;99991231&apos;</item><item>        &quot;                             sortf = &apos;E&apos; &amp;&amp; gs_params_1-rootname</item><item>                                     aennr = &apos;BOM-&apos; &amp;&amp; sy-datum</item><item>                                     menge = ls_albero_sort-relqty ).</item><item>              APPEND ls_stpo TO lt_stpo.</item><item>            ENDLOOP.</item><item/><item>            DATA: lv_fl_warning TYPE capiflag-flwarning,</item><item>                  lv_astlnr     TYPE stzub-stlnr.</item><item>            CALL FUNCTION &apos;CSAI_BOM_CREATE&apos;</item><item>              EXPORTING</item><item>                ecsin              = ls_ecsin</item><item>                estkob             = ls_estkob</item><item>                estzub             = ls_estzub</item><item>*               FL_NO_CHANGE_DOC   = &apos; &apos;</item><item>                fl_commit_and_wait = abap_true</item><item>*               FL_NO_COMMIT_WORK  = &apos; &apos;</item><item>*               FL_ALE             = &apos; &apos;</item><item>*               FL_DEFAULT_VALUES  = &apos;X&apos;</item><item>              IMPORTING</item><item>                fl_warning         = lv_fl_warning</item><item>                astlnr             = lv_astlnr</item><item>              TABLES</item><item>                t_stpob            = lt_stpo</item><item>*               T_SGT_BOMC         =</item><item>              EXCEPTIONS</item><item>                error              = 1</item><item>                OTHERS             = 2.</item><item>            IF sy-subrc &lt;&gt; 0.</item><item>              &lt;ls_parent_list&gt;-light = icon_red_light.</item><item>              &lt;ls_parent_list&gt;-log = &apos;Errore Creazione BOM Universale&apos;.</item><item/><item>              LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero&gt;)</item><item>                         &quot;USING KEY sorted_key</item><item>                         &quot;WHERE rootname   = &lt;ls_albero_sort&gt;-rootname</item><item>                         WHERE   light      = icon_green_light</item><item>                         AND   parentname = &lt;ls_albero_sort&gt;-parentname.</item><item>                &lt;ls_albero&gt;-light = icon_red_light.</item><item>              ENDLOOP.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ENDLOOP.</item><item>        lv_counter = &lt;ls_albero_sort&gt;-counter.</item><item>      ENDLOOP.</item><item/><item>      update_tables( ).</item><item/><item>      gt_parent_list_5[] = gt_parent_list[].</item><item>      gt_albero_5[] = gt_albero[].</item><item>    ENDIF.</item><item/><item>    alv_create( EXPORTING iv_title = &apos;BOM Universali create&apos;(006)</item><item>                          iv_layout = gs_sel-p_layo3</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN4&apos;</item><item>                CHANGING ct_data = gt_parent_list ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CREATE_BOM><CHECK_BOM_ALBERO><item>  METHOD check_bom_albero.</item><item>    IF ( NOT gt_parent_list_2[] IS INITIAL ).</item><item>      gt_parent_list[] = gt_parent_list_2[].</item><item>      gt_albero[] = gt_albero_2[].</item><item>    ELSE.</item><item/><item/><item>      IF ( gt_albero[] IS INITIAL ).</item><item>        &quot; Nessun dato estratto</item><item>        RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s398(00) WITH TEXT-003.</item><item>      ENDIF.</item><item/><item>      DATA: lt_albero_sort TYPE ty_t_albero_sort,</item><item>            lv_perc        TYPE i,</item><item>            lv_curr        TYPE i,</item><item>            lv_tot_rec     TYPE i.</item><item/><item>      SELECT rootname, sort, lev, parentname, childname, relqty, relstartdate, relenddate</item><item>             FROM zpp_albero</item><item>             FOR ALL ENTRIES IN @gt_albero</item><item>             WHERE rootname   = @gt_albero-rootname</item><item>             AND   parentname = @gt_albero-parentname</item><item>             AND   colore     = &apos;GRIGIO&apos;</item><item>             INTO TABLE @DATA(lt_albero).</item><item/><item>      REFRESH: gt_albero.</item><item>      MOVE-CORRESPONDING lt_albero TO lt_albero_sort.</item><item/><item>      lv_perc = 0.</item><item>      DESCRIBE TABLE lt_albero_sort LINES lv_tot_rec.</item><item/><item>      lv_tot_rec = lv_tot_rec.</item><item>      lv_curr = 0.</item><item/><item>      DATA: lv_key TYPE string.</item><item>      DATA(lv_counter) = 1.</item><item/><item>      BREAK kosmedev.</item><item>      CLEAR: lv_key.</item><item>      LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero_sort&gt;) USING KEY sorted_key.</item><item>        DATA(lv_tabix) = sy-tabix.</item><item>        DATA(lv_counter_old) = lv_counter.</item><item>        ADD 1 TO lv_curr.</item><item/><item>        CHECK &lt;ls_albero_sort&gt;-light IS INITIAL.</item><item>        &lt;ls_albero_sort&gt;-light = icon_green_light.</item><item>*      &lt;ls_albero_sort&gt;-counter = lv_counter.</item><item/><item>        LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero_next&gt;) FROM lv_tabix</item><item>                                                                        USING KEY sorted_key</item><item>                                                                        WHERE rootname = &lt;ls_albero_sort&gt;-rootname.</item><item>          IF ( &lt;ls_albero_next&gt;-lev &gt; &lt;ls_albero_sort&gt;-lev ).</item><item>            &quot; non è ancora finita la bom del parentname</item><item>            CONTINUE.</item><item>          ELSEIF ( &lt;ls_albero_next&gt;-lev = &lt;ls_albero_sort&gt;-lev ).</item><item>            &quot; ho raggiunto lo stesso livello del parentname</item><item>            IF ( &lt;ls_albero_next&gt;-parentname = &lt;ls_albero_sort&gt;-parentname ).</item><item>              TRY.</item><item>                  &quot; verifica se il childname non è già presente, altrimenti è una nuova bom</item><item>                  DATA(ls_tmp) = lt_albero_sort[ rootname   = &lt;ls_albero_next&gt;-rootname</item><item>                                                 parentname = &lt;ls_albero_next&gt;-parentname</item><item>                                                 childname  = &lt;ls_albero_next&gt;-childname</item><item>                                                 counter    = lv_counter ].</item><item>                  &quot; è ancora un figlio del parentname ma di un altro nodo</item><item>                  ADD 1 TO lv_counter.</item><item>                CATCH cx_root.</item><item>                  &quot; è ancora un figlio del parentname e dello stesso nodo</item><item>              ENDTRY.</item><item>              &lt;ls_albero_next&gt;-light = icon_green_light.</item><item>              &lt;ls_albero_next&gt;-counter = lv_counter.</item><item>            ELSE.</item><item>              &quot; sono passato ad un&apos;altro parentname</item><item>              ADD 1 TO lv_counter.</item><item>              EXIT.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ENDLOOP.</item><item>        &quot; bisogna incrementare il counter per garantirci l&apos;univocità dello stesso</item><item>        ADD 1 TO lv_counter.</item><item/><item>*      lv_perc = floor( 100 *  lv_curr  / lv_tot_rec ).</item><item>*      IF ( lv_perc &gt; 100 ).</item><item>*        lv_perc = 100.</item><item>*      ENDIF.</item><item>*      DATA(lv_text) = lv_perc &amp;&amp; `% Record elaborati`.</item><item>*</item><item>*      CALL FUNCTION &apos;SAPGUI_PROGRESS_INDICATOR&apos;</item><item>*        EXPORTING</item><item>*          percentage = lv_perc</item><item>*          text       = lv_text.</item><item>      ENDLOOP.</item><item/><item>      BREAK kosmedev.</item><item>      DATA: lt_albero_sort_2 TYPE ty_t_albero_sort_2.</item><item>      REFRESH: lt_albero_sort_2.</item><item>      MOVE-CORRESPONDING lt_albero_sort TO lt_albero_sort_2.</item><item>      lv_counter = 0.</item><item>      lv_curr = 0.</item><item>      LOOP AT lt_albero_sort_2 ASSIGNING &lt;ls_albero_sort&gt; USING KEY sorted_key.</item><item>        ADD 1 TO lv_curr.</item><item>        IF ( lv_counter &lt;&gt; &lt;ls_albero_sort&gt;-counter ).</item><item>          DATA: lt_albero_1 TYPE ty_t_albero.</item><item>          REFRESH lt_albero_1.</item><item>          LOOP AT lt_albero_sort_2 ASSIGNING FIELD-SYMBOL(&lt;ls_albero&gt;)</item><item>                                 USING KEY sorted_key</item><item>                                 &quot;WHERE rootname   = &lt;ls_albero_sort&gt;-rootname</item><item>                                 WHERE counter    = &lt;ls_albero_sort&gt;-counter</item><item>                                 AND   light      = icon_green_light</item><item>                                 AND   parentname = &lt;ls_albero_sort&gt;-parentname.</item><item>            lv_tabix = sy-tabix.</item><item>            APPEND &lt;ls_albero&gt; TO lt_albero_1.</item><item>          ENDLOOP.</item><item/><item>          LOOP AT lt_albero_sort_2 ASSIGNING &lt;ls_albero_next&gt; &quot; FIELD-SYMBOL(&lt;ls_albero_next&gt;)</item><item>                                   FROM lv_tabix + 1</item><item>                                   &quot;USING KEY sorted_key</item><item>                                   &quot;WHERE rootname   = &lt;ls_albero_sort&gt;-rootname</item><item>                                   WHERE parentname = &lt;ls_albero_sort&gt;-parentname</item><item>                                   AND   light      = icon_green_light.</item><item>            EXIT.</item><item>          ENDLOOP.</item><item>          IF ( sy-subrc = 0 ).</item><item>            DATA: lt_albero_2 TYPE ty_t_albero.</item><item>            REFRESH lt_albero_2.</item><item>            LOOP AT lt_albero_sort_2 ASSIGNING FIELD-SYMBOL(&lt;ls_albero_3&gt;)</item><item>                                   USING KEY sorted_key</item><item>                                   &quot;WHERE rootname   = &lt;ls_albero_next&gt;-rootname</item><item>                                   WHERE   counter    = &lt;ls_albero_next&gt;-counter</item><item>                                   AND   light      = icon_green_light</item><item>                                   AND   parentname = &lt;ls_albero_next&gt;-parentname.</item><item>              APPEND &lt;ls_albero_3&gt; TO lt_albero_2.</item><item>            ENDLOOP.</item><item>            DATA: lv_count_1 TYPE i,</item><item>                  lv_count_2 TYPE i.</item><item>            DESCRIBE TABLE lt_albero_1 LINES lv_count_1.</item><item>            DESCRIBE TABLE lt_albero_2 LINES lv_count_2.</item><item>            DATA(lv_error) = abap_false.</item><item>            IF ( lv_count_1 &lt;&gt; lv_count_2 ).</item><item>              lv_error = abap_true.</item><item>            ELSE.</item><item>              LOOP AT lt_albero_1 INTO DATA(ls_albero_1).</item><item>                READ TABLE lt_albero_2 INTO DATA(ls_albero_2) &quot;INDEX sy-tabix.</item><item>                                       WITH KEY childname = ls_albero_1-childname.</item><item>                IF ( sy-subrc &lt;&gt; 0 OR</item><item>                     ( ls_albero_1-childname &lt;&gt; ls_albero_2-childname OR</item><item>                       ls_albero_1-relqty &lt;&gt; ls_albero_2-relqty ) ).</item><item>                  lv_error = abap_true.</item><item>                  EXIT.</item><item>                ENDIF.</item><item>              ENDLOOP.</item><item>            ENDIF.</item><item>            IF ( lv_error = abap_true ).</item><item>              READ TABLE gt_parent_list ASSIGNING FIELD-SYMBOL(&lt;ls_parent_list&gt;)</item><item>                                        WITH KEY parentname = &lt;ls_albero_sort&gt;-parentname.</item><item>              IF ( sy-subrc = 0 ).</item><item>                &lt;ls_parent_list&gt;-light = icon_red_light.</item><item>                &lt;ls_parent_list&gt;-log = &apos;Errore BOM albero&apos;.</item><item>              ENDIF.</item><item/><item>              LOOP AT lt_albero_sort ASSIGNING &lt;ls_albero&gt;</item><item>                         &quot;USING KEY sorted_key</item><item>                         &quot;WHERE rootname   = &lt;ls_albero_sort&gt;-rootname</item><item>                         WHERE   light      = icon_green_light</item><item>                         AND   parentname = &lt;ls_albero_sort&gt;-parentname.</item><item>                &lt;ls_albero&gt;-light = icon_red_light.</item><item>              ENDLOOP.</item><item>              LOOP AT lt_albero_sort ASSIGNING &lt;ls_albero&gt;</item><item>                                     &quot;USING KEY sorted_key</item><item>                                     &quot;WHERE rootname   = &lt;ls_albero_next&gt;-rootname</item><item>                                     WHERE light      = icon_green_light</item><item>                                     AND   parentname = &lt;ls_albero_next&gt;-parentname.</item><item>                &lt;ls_albero&gt;-light = icon_red_light.</item><item>              ENDLOOP.</item><item>              CONTINUE.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>*      &lt;ls_albero_sort&gt;-light = icon_green_light.</item><item>        lv_counter = &lt;ls_albero_sort&gt;-counter.</item><item/><item>*      lv_perc = floor( 100 *  lv_curr  / lv_tot_rec ).</item><item>*      IF ( lv_perc &gt; 100 ).</item><item>*        lv_perc = 100.</item><item>*      ENDIF.</item><item>*      lv_text = lv_perc &amp;&amp; `% Record elaborati: `.</item><item>*</item><item>*      CALL FUNCTION &apos;SAPGUI_PROGRESS_INDICATOR&apos;</item><item>*        EXPORTING</item><item>*          percentage = lv_perc</item><item>*          text       = lv_text.</item><item>      ENDLOOP.</item><item/><item>      gt_albero[] = lt_albero_sort[].</item><item/><item>      gt_parent_list_2[] = gt_parent_list[].</item><item>      gt_albero_2[] = gt_albero[].</item><item>    ENDIF.</item><item/><item>    alv_create( EXPORTING iv_title = &apos;Controllo BOM Albero&apos;(002)</item><item>                          iv_layout = gs_sel-p_layo2</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN2&apos;</item><item>                CHANGING ct_data = gt_parent_list ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CHECK_BOM_ALBERO><CHECK_BOM_TEC><item>  METHOD check_bom_tec.</item><item>    IF ( NOT gt_parent_list_4[] IS INITIAL ).</item><item>      gt_parent_list[] = gt_parent_list_4[].</item><item>      gt_albero[] = gt_albero_4[].</item><item>    ELSE.</item><item/><item>      IF ( gt_albero[] IS INITIAL ).</item><item>        &quot; Nessun dato estratto</item><item>        RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s398(00) WITH TEXT-003.</item><item>      ENDIF.</item><item/><item>      DATA: lt_albero_sort TYPE ty_t_albero_sort.</item><item>      REFRESH: lt_albero_sort.</item><item>      lt_albero_sort[] = gt_albero[].</item><item/><item>      LOOP AT gt_parent_list ASSIGNING FIELD-SYMBOL(&lt;ls_parent_list&gt;).</item><item>        DATA(ls_bom) = zcl_pp_ectr=&gt;get_bom( iv_capid = &apos;PP01&apos;</item><item>                                             iv_mehrs = abap_false</item><item>                                             iv_matnr = &lt;ls_parent_list&gt;-parentname</item><item>                                             iv_werks = zcl_pp_ectr=&gt;c_werks</item><item>                                             iv_stlan = &apos;2&apos;</item><item>                                             iv_stlal = &apos;01&apos;</item><item>                                             iv_mto   = abap_false ).</item><item/><item>        DATA(lv_error) = abap_false.</item><item>        IF ( ls_bom-t_stb[] IS INITIAL ).</item><item>          lv_error = abap_true.</item><item>        ELSE.</item><item>          DATA(lv_counter) = 0.</item><item>          LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero_sort&gt;) &quot;USING KEY sorted_key</item><item>                                                                          WHERE parentname = &lt;ls_parent_list&gt;-parentname.</item><item>            IF ( lv_counter &lt;&gt; &lt;ls_albero_sort&gt;-counter ).</item><item>              LOOP AT ls_bom-t_stb INTO DATA(ls_stb) WHERE baugr = &lt;ls_albero_sort&gt;-parentname.</item><item>                TRY.</item><item>                    DATA(ls_tmp) = gt_albero[ rootname         = &lt;ls_albero_sort&gt;-rootname</item><item>                                              parentname       = ls_stb-baugr</item><item>                                              childname        = ls_stb-idnrk</item><item>                                              relqty           = ls_stb-menge ].</item><item>                  CATCH cx_root.</item><item>                    lv_error = abap_true.</item><item>                ENDTRY.</item><item>              ENDLOOP.</item><item>            ENDIF.</item><item>            lv_counter = &lt;ls_albero_sort&gt;-counter.</item><item>          ENDLOOP.</item><item>        ENDIF.</item><item>        IF ( lv_error = abap_true ).</item><item>          READ TABLE gt_parent_list ASSIGNING &lt;ls_parent_list&gt;</item><item>                                    WITH KEY parentname = &lt;ls_parent_list&gt;-parentname.</item><item>          IF ( sy-subrc = 0 ).</item><item>            &lt;ls_parent_list&gt;-light = icon_red_light.</item><item>            &lt;ls_parent_list&gt;-log = &apos;Errore BOM Tecnica&apos;.</item><item>          ENDIF.</item><item/><item>          LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero&gt;)</item><item>                     &quot;USING KEY sorted_key</item><item>                     &quot;WHERE rootname   = &lt;ls_albero_sort&gt;-rootname</item><item>                     WHERE light      = icon_green_light</item><item>                     AND   parentname = &lt;ls_parent_list&gt;-parentname.</item><item>            &lt;ls_albero&gt;-light = icon_red_light.</item><item>          ENDLOOP.</item><item>        ENDIF.</item><item/><item>      ENDLOOP.</item><item/><item>      gt_parent_list_4[] = gt_parent_list[].</item><item>      gt_albero_4[] = gt_albero[].</item><item>    ENDIF.</item><item/><item>    alv_create( EXPORTING iv_title = &apos;Controllo BOM Tecnica&apos;(005)</item><item>                          iv_layout = gs_sel-p_layo3</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN&apos;</item><item>                CHANGING ct_data = gt_parent_list ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CHECK_BOM_TEC><CHECK_WBS_BOM><item>  METHOD check_wbs_bom.</item><item>    IF ( NOT gt_parent_list_3[] IS INITIAL ).</item><item>      gt_parent_list[] = gt_parent_list_3[].</item><item>      gt_albero[] = gt_albero_3[].</item><item>    ELSE.</item><item/><item/><item>      IF ( gt_albero[] IS INITIAL ).</item><item>        &quot; Nessun dato estratto</item><item>        RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s398(00) WITH TEXT-003.</item><item>      ENDIF.</item><item/><item>      DATA: lt_albero_sort TYPE ty_t_albero_sort_2,</item><item>            lv_rootname    TYPE zpp_albero-rootname.</item><item/><item>      DATA(lv_counter) = 0.</item><item>      CLEAR: lv_rootname.</item><item>      REFRESH: lt_albero_sort.</item><item>      lt_albero_sort[] = gt_albero[].</item><item/><item>      LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero_sort&gt;) &quot;USING KEY sorted_key</item><item>                                                                      WHERE light = icon_green_light.</item><item>        IF ( lv_rootname &lt;&gt; &lt;ls_albero_sort&gt;-rootname ).</item><item>          SELECT vbeln, ps_psp_pnr</item><item>            FROM vbap</item><item>            WHERE matnr = @&lt;ls_albero_sort&gt;-rootname</item><item>            ORDER BY erdat DESCENDING</item><item>            INTO (@DATA(lv_vbeln), @DATA(lv_ps_psp_pnr)).</item><item>            SELECT SINGLE vbeln FROM vbak INTO lv_vbeln WHERE vbeln = lv_vbeln AND     &quot;S.B.</item><item>                                                              vbtyp = &apos;C&apos;.             &quot;S.B.</item><item>            IF sy-subrc = 0.</item><item>              zcl_bc_conversion_exit=&gt;conversion_output( EXPORTING iv_field = lv_ps_psp_pnr</item><item>                                                         CHANGING cv_field = &lt;ls_albero_sort&gt;-posid ).</item><item>              LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_alb_sort&gt;) &quot;USING KEY sorted_key</item><item>                                                                           &quot;WHERE counter    = &lt;ls_albero_sort&gt;-counter</item><item>                                                                           WHERE rootname   = &lt;ls_albero_sort&gt;-rootname.</item><item>                &lt;ls_alb_sort&gt;-posid = &lt;ls_albero_sort&gt;-posid.</item><item>                READ TABLE gt_parent_list ASSIGNING FIELD-SYMBOL(&lt;ls_parent&gt;)</item><item>                                          WITH KEY parentname = &lt;ls_alb_sort&gt;-parentname.</item><item>                IF ( sy-subrc = 0 ).</item><item>                  IF ( NOT &lt;ls_parent&gt;-wbs CS &lt;ls_alb_sort&gt;-posid ).</item><item>                    &lt;ls_parent&gt;-wbs = &lt;ls_parent&gt;-wbs &amp;&amp; `; ` &amp;&amp; &lt;ls_alb_sort&gt;-posid.</item><item>                  ENDIF.</item><item>                ENDIF.</item><item>              ENDLOOP.</item><item>              EXIT.   &quot;------&gt; USCITA SELECT</item><item>            ENDIF.</item><item>          ENDSELECT.</item><item/><item>          DATA(lt_bom) = zcl_pp_ectr=&gt;get_wbs_bom( iv_capid = &apos;PP01&apos;</item><item>                                                   iv_mehrs = abap_false</item><item>                                                   iv_matnr = &lt;ls_albero_sort&gt;-parentname</item><item>                                                   iv_pspnr = lv_ps_psp_pnr</item><item>                                                   iv_mto   = abap_false ).</item><item>          DATA(lv_error) = abap_false.</item><item>          IF ( lt_bom[] IS INITIAL ).</item><item>            lv_error = abap_true.</item><item>          ELSE.</item><item>            LOOP AT lt_bom INTO DATA(ls_bom) WHERE baugr = &lt;ls_albero_sort&gt;-parentname.</item><item>              TRY.</item><item>                  DATA(ls_tmp) = gt_albero[ rootname         = &lt;ls_albero_sort&gt;-rootname</item><item>                                            parentname       = ls_bom-baugr</item><item>                                            childname        = ls_bom-objnr</item><item>                                            relqty           = ls_bom-menge ].</item><item>                CATCH cx_root.</item><item>                  lv_error = abap_true.</item><item>              ENDTRY.</item><item>            ENDLOOP.</item><item>          ENDIF.</item><item>          IF ( lv_error = abap_true ).</item><item>            READ TABLE gt_parent_list ASSIGNING FIELD-SYMBOL(&lt;ls_parent_list&gt;)</item><item>                                      WITH KEY parentname = &lt;ls_albero_sort&gt;-parentname.</item><item>            IF ( sy-subrc = 0 ).</item><item>              &lt;ls_parent_list&gt;-light = icon_red_light.</item><item>              &lt;ls_parent_list&gt;-log = &apos;Errore BOM a WBS&apos;.</item><item>            ENDIF.</item><item/><item>            LOOP AT lt_albero_sort ASSIGNING FIELD-SYMBOL(&lt;ls_albero&gt;)</item><item>                       &quot;USING KEY sorted_key</item><item>                       &quot;WHERE rootname   = &lt;ls_albero_sort&gt;-rootname</item><item>                       WHERE   light      = icon_green_light</item><item>                       AND   parentname = &lt;ls_albero_sort&gt;-parentname.</item><item>              &lt;ls_albero&gt;-light = icon_red_light.</item><item>            ENDLOOP.</item><item>          ENDIF.</item><item>        ENDIF.</item><item/><item>        lv_rootname = &lt;ls_albero_sort&gt;-rootname.</item><item>      ENDLOOP.</item><item/><item>      gt_albero[] = lt_albero_sort[].</item><item/><item>      gt_parent_list_3[] = gt_parent_list[].</item><item>      gt_albero_3[] = gt_albero[].</item><item>    ENDIF.</item><item/><item>    alv_create( EXPORTING iv_title = &apos;Controllo BOM a WBS&apos;(004)</item><item>                          iv_layout = gs_sel-p_layo3</item><item>                          iv_pfstatus = &apos;STANDARD_FULLSCREEN3&apos;</item><item>                CHANGING ct_data = gt_parent_list ).</item><item>    IF ( iv_show_alv = abap_true ).</item><item>      me-&gt;alv_show( ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CHECK_WBS_BOM><REFRESH_DATA><item>  METHOD refresh_data.</item><item>*    super-&gt;refresh_data( ).</item><item>    IF ( gv_refresh_data = abap_true ).</item><item>*      set_data( ).</item><item>      CASE sy-pfkey.</item><item>        WHEN &apos;STANDARD_FULLSCREEN&apos;.</item><item>          gt_parent_list[] = gt_parent_list_4[].</item><item>          gt_albero[] = gt_albero_4[].</item><item>*          check_bom_albero( iv_show_alv = abap_false ).</item><item>*          check_wbs_bom( iv_show_alv = abap_false ).</item><item>*          check_bom_tec( iv_show_alv = abap_false ).</item><item>        WHEN &apos;STANDARD_FULLSCREEN1&apos;.</item><item>          gt_parent_list[] = gt_parent_list_1[].</item><item>          gt_albero[] = gt_albero_1[].</item><item>        WHEN &apos;STANDARD_FULLSCREEN2&apos;.</item><item>          gt_parent_list[] = gt_parent_list_2[].</item><item>          gt_albero[] = gt_albero_2[].</item><item>*          check_bom_albero( iv_show_alv = abap_false ).</item><item>        WHEN &apos;STANDARD_FULLSCREEN3&apos;.</item><item>          gt_parent_list[] = gt_parent_list_3[].</item><item>          gt_albero[] = gt_albero_3[].</item><item>*          check_bom_albero( iv_show_alv = abap_false ).</item><item>*          check_wbs_bom( iv_show_alv = abap_false ).</item><item>        WHEN &apos;STANDARD_FULLSCREEN4&apos;.</item><item>          gt_parent_list[] = gt_parent_list_5[].</item><item>          gt_albero[] = gt_albero_5[].</item><item>*          check_bom_albero( iv_show_alv = abap_false ).</item><item>*          check_wbs_bom( iv_show_alv = abap_false ).</item><item>*          check_bom_tec( iv_show_alv = abap_false ).</item><item>*          create_bom( iv_show_alv = abap_false ).</item><item>      ENDCASE.</item><item>    ENDIF.</item><item>    gv_refresh_data = abap_false.</item><item>  ENDMETHOD.</item></REFRESH_DATA><UPDATE_TABLES><item>  METHOD update_tables.</item><item>    IF ( gs_sel-p_test = abap_true ).</item><item>      RAISE EXCEPTION TYPE zcx_bc_exception MESSAGE s020(zppp_ectr).</item><item>    ENDIF.</item><item/><item>    DATA: lt_albero_sort TYPE ty_t_albero_sort_2,</item><item>          lt_modbom      TYPE TABLE OF zpp_modbom,</item><item>          lt_modbom_new  TYPE TABLE OF zpp_modbom,</item><item>          lt_pdm_nor_bom TYPE TABLE OF zpp_pdm_nor_bom,</item><item>          ls_pdm_nor_bom TYPE zpp_pdm_nor_bom.</item><item/><item>    lt_albero_sort[] = gt_albero[].</item><item/><item>    REFRESH: lt_modbom, lt_modbom_new, lt_pdm_nor_bom.</item><item/><item>    DATA(lv_relstartdate) = gs_sel-p_godate+6(2) &amp;&amp; `/` &amp;&amp; gs_sel-p_godate+4(2) &amp;&amp; `/` &amp;&amp; gs_sel-p_godate(4) &amp;&amp; ` ` &amp;&amp;</item><item>                            gs_sel-p_gotime(2) &amp;&amp; `:` &amp;&amp; gs_sel-p_gotime+2(2) &amp;&amp; `:` &amp;&amp; gs_sel-p_gotime+4(2).</item><item>    LOOP AT lt_albero_sort INTO DATA(ls_albero_sort) &quot;USING KEY sorted_key</item><item>                                                     WHERE light = icon_green_light.</item><item/><item>      UPDATE zpp_albero SET relstartdate = lv_relstartdate</item><item>*                            relenddate   = zcl_pp_ectr=&gt;c_infinite_date</item><item>                        WHERE rootname   = ls_albero_sort-rootname</item><item>                        AND   parentname = ls_albero_sort-parentname</item><item>                        AND   childname  = ls_albero_sort-childname</item><item>                        AND   colore     = &apos;GRIGIO&apos;.</item><item/><item>      SELECT DISTINCT * FROM zpp_modbom</item><item>               WHERE stlan = &apos;3&apos;</item><item>*               AND   datum = @sy-datum</item><item>*               AND   uzeit = @sy-uzeit</item><item>               AND   matnr = @ls_albero_sort-parentname</item><item>               AND   idnrk = @ls_albero_sort-childname</item><item>               AND   stlal = &apos;01&apos;</item><item>               AND   vbkz  = &apos;I&apos;</item><item>               AND   zflag1 = @abap_false</item><item>               AND   zflag2 = @abap_false</item><item>               APPENDING TABLE @lt_modbom.</item><item/><item>      CLEAR: ls_pdm_nor_bom.</item><item>      MOVE-CORRESPONDING ls_albero_sort TO ls_pdm_nor_bom.</item><item>      ls_pdm_nor_bom-elaborato = abap_true.</item><item>      TRY.</item><item>          ls_pdm_nor_bom-relpos = lt_modbom[ matnr = ls_albero_sort-parentname</item><item>                                             idnrk = ls_albero_sort-childname ]-posnr.</item><item>        CATCH cx_root.</item><item>      ENDTRY.</item><item>      APPEND ls_pdm_nor_bom TO lt_pdm_nor_bom.</item><item/><item>    ENDLOOP.</item><item/><item>    SORT lt_modbom.</item><item>    DELETE ADJACENT DUPLICATES FROM lt_modbom.</item><item>    SORT lt_pdm_nor_bom.</item><item>    DELETE ADJACENT DUPLICATES FROM lt_pdm_nor_bom.</item><item/><item>    lt_modbom_new[] = lt_modbom[].</item><item>    LOOP AT lt_modbom_new ASSIGNING FIELD-SYMBOL(&lt;ls_modbom_new&gt;).</item><item>      &lt;ls_modbom_new&gt;-datum = gs_sel-p_godate.</item><item>      &lt;ls_modbom_new&gt;-uzeit = gs_sel-p_gotime.</item><item>      &lt;ls_modbom_new&gt;-relstartdate = lv_relstartdate.</item><item>      &lt;ls_modbom_new&gt;-relenddate = zcl_pp_ectr=&gt;c_infinite_date.</item><item>      &lt;ls_modbom_new&gt;-zflag1 = abap_true.</item><item>      &lt;ls_modbom_new&gt;-zflag2 = abap_true.</item><item>    ENDLOOP.</item><item/><item>    DELETE zpp_modbom FROM TABLE lt_modbom.</item><item>    INSERT zpp_modbom FROM TABLE lt_modbom_new.</item><item/><item>    INSERT zpp_pdm_nor_bom FROM TABLE lt_pdm_nor_bom.</item><item/><item>    COMMIT WORK AND WAIT.</item><item>  ENDMETHOD.</item></UPDATE_TABLES></METHOD_SOURCE></CLASS_ROOT>