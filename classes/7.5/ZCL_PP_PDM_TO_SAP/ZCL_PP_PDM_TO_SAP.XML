<?xml version="1.0"?><CLASS_ROOT><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe interfaccia PDM -&gt; SAP</DESCRIPT><UUID>AA06JAOFHuaDj7OUXD5b1Q==</UUID><CATEGORY>00</CATEGORY><EXPOSURE>2</EXPOSURE><STATE>1</STATE><RELEASE>0</RELEASE><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDON>2016-10-10</CHANGEDON><CHGDANYON>0000-00-00</CHGDANYON><CLSFINAL>X</CLSFINAL><CLSCCINCL>X</CLSCCINCL><FIXPT>X</FIXPT><UNICODE>X</UNICODE><R3RELEASE>750</R3RELEASE><CLSBCCAT>00</CLSBCCAT><DURATION_TYPE>0</DURATION_TYPE><RISK_LEVEL>0</RISK_LEVEL><ATTRIBUTES><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>C_INSERT</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>2</ATTDECLTYP><ATTVALUE>&apos;I&apos;</ATTVALUE><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>ZPP_SAP_PDM_TIPOOPER</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>C_UPDATE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tipo operazione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>2</ATTDECLTYP><ATTVALUE>&apos;U&apos;</ATTVALUE><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>ZPP_SAP_PDM_TIPOOPER</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>C_ALV_VIEW_DATA</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Visualizza dati</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>2</ATTDECLTYP><ATTVALUE>1</ATTVALUE><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>NUMC1</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>C_ALV_VIEW_LOG</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Visualizza dati</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>2</ATTDECLTYP><ATTVALUE>2</ATTVALUE><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>NUMC1</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GS_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Parametri di selezione</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_MAT_FILL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica filling</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_MAT_LABE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica labelling</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_MAT_PACK</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica packaging</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_BOM_FILL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte filling</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_BOM_LABE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte labelling</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_BOM_PACK</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte packaging</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_PDM_FILE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>File da inviare al PDM</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_FILE</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_DATA_MAT</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GO_SALV</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe gestione alv grid</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>3</TYPTYPE><TYPE>ZCL_BC_ALV_BASE</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GO_ALV_HANDLER</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>General Events</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>3</TYPTYPE><TYPE>CL_SALV_EVENTS</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_PDM_AM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>13</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_AM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_PDM_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>14</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GV_PFSTATUS_LOG</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Stato GUI alv log</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>15</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>SYPFKEY</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_ZTPP_CICLI</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>16</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-14</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ZTPP_CICLI</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GT_ZTBC000004</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>17</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-02</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><ATTDECLTYP>0</ATTDECLTYP><ATTEXPVIRT>0</ATTEXPVIRT><TYPTYPE>1</TYPTYPE><TYPE>TY_T_ZTBC000004</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item></ATTRIBUTES><METHODS><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Costruttore</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>2</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>EXECUTE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Esegue programma</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-22</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Estrazione dati</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>PROCESS_FILES</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Processa i files</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Estrazione dati</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Estrazione dati</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>ALV_SHOW</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Mostra alv</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MATERIAL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Check esistenza materiale</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_REVISION_LEVEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Check esistenza livello di revisione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DIBA</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Legge diba di progettazione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MARC</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Legge dati materiale relativi alla divisione</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_PAR_CICLI_REF</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Parametrizzazione cicli di riferimento</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-13</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_ZTMM_EKGRP</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Ritorna Tabella di transcodifica gruppo acquisti per PDM</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>13</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>SET_SALV</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>14</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_SALV</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>15</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CHECK_FILE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Verifica esistenza file</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>16</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-08-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_CREATE_PARAM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>17</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-02</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>SET_SAP_TABLE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_SELECTIONS</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea parametri di selezione</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Scrive log per tipo file - OBSOLETO</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2017-01-20</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Scrive log per tipo file - Tab: ZPP_PDM_AM e ZPP_PDM_BOM</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2017-01-20</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG3</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Scrive log per tipo file - OBSOLETO</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2017-01-20</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG4</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Scrive log per tipo file - Tab: ZPP_PDM_AM e ZPP_PDM_BOM</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2017-01-20</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_MATERIAL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea materiale</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea distinta base</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea distinta base</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_SAP_UM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Converte UM PDM in UM Sap</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REVISION_LEVEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea livello di revisione</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REV_LEVEL_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea livello di revisione padri e componenti bom</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REV_LEVEL_BOM2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea livello di revisione padri e componenti bom</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>13</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>INSERT_DRAW_PATHS</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Inserisce i path dei disegni</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>14</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_CICLI_LAV</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea cicli di lavoro</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>15</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_CICLI_LAV2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea cicli di lavoro</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>16</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_PROD_VER</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea versioni di produzione</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>17</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_PROD_VER2</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Crea versioni di produzione</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>18</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_NEXT_NUMBER</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Incrementa numeratore</DESCRIPT><EXPOSURE>0</EXPOSURE><STATE>1</STATE><EDITORDER>19</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-22</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><MTDTYPE>0</MTDTYPE><MTDDECLTYP>0</MTDDECLTYP><BCMTDCAT>00</BCMTDCAT><BCMTDSYN>0</BCMTDSYN></item></METHODS><EVENTS><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>ON_USER_COMMAND</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><EVTDECLTYP>0</EVTDECLTYP><BCEVTCAT>00</BCEVTCAT></item></EVENTS><TYPES><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_ZTBC000004</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>1</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-02</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZTBC000004</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_ZTBC000004</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>2</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-02</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>11</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>11</SRCROW2><SRCCOLUMN2>50</SRCCOLUMN2><TYPESRC_LENG>47</TYPESRC_LENG><TYPESRC>ty_t_ztbc000004 TYPE TABLE OF ty_s_ztbc000004
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_ZTPP_CICLI</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>3</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-14</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>13</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>13</SRCROW2><SRCCOLUMN2>45</SRCCOLUMN2><TYPESRC_LENG>42</TYPESRC_LENG><TYPESRC>ty_t_ztpp_cicli TYPE TABLE OF ztpp_cicli
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_ALV_DATA_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Struttura file distinte base PDM -&gt; Sap</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>4</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_TO_SAP_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_ALV_DATA_MAT</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Struttura file anagrafica PDM -&gt; Sap</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>5</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_TO_SAP</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_ALV_DATA_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>6</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>17</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>17</SRCROW2><SRCCOLUMN2>54</SRCCOLUMN2><TYPESRC_LENG>51</TYPESRC_LENG><TYPESRC>ty_t_alv_data_bom TYPE TABLE OF ty_s_alv_data_bom
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_ALV_DATA_MAT</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>7</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>19</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>19</SRCROW2><SRCCOLUMN2>54</SRCCOLUMN2><TYPESRC_LENG>51</TYPESRC_LENG><TYPESRC>ty_t_alv_data_mat TYPE TABLE OF ty_s_alv_data_mat
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_DATA_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>8</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>21</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>24</SRCROW2><SRCCOLUMN2>33</SRCCOLUMN2><TYPESRC_LENG>151</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_data_bom.
    TYPES:  tipofile TYPE ztbc000001-tipofile.
        INCLUDE TYPE zpp_pdm_to_sap_bom.
    TYPES:    END OF ty_s_data_bom
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_PDM_AM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Log trasferimento anagrafica PDM -&gt; Sap</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>9</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_AM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_DATA_MAT</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>10</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>27</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>30</SRCROW2><SRCCOLUMN2>33</SRCCOLUMN2><TYPESRC_LENG>147</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_data_mat.
    TYPES:  tipofile TYPE ztbc000001-tipofile.
        INCLUDE TYPE zpp_pdm_to_sap.
    TYPES:    END OF ty_s_data_mat
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_PDM_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Log trasferimento distinte base PDM -&gt; Sap</DESCRIPT><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>11</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_BOM</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_SEL</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>12</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>33</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>49</SRCROW2><SRCCOLUMN2>20</SRCCOLUMN2><TYPESRC_LENG>1005</TYPESRC_LENG><TYPESRC>BEGIN OF ty_s_sel,
        p_mat    TYPE xfeld,     &quot; radiobutton anagrafica materiale
        p_mfill  TYPE xfeld,    &quot; invio anagrafica materiale PDM -&gt; SAP Filling
        p_mlabl  TYPE xfeld,    &quot; invio anagrafica materiale PDM -&gt; SAP  Labelling
        p_mpack  TYPE xfeld,    &quot; invio anagrafica materiale PDM -&gt; SAP Packaging
        s_matnr1 TYPE RANGE OF mara-matnr, &quot;DP-07_10_2016
        p_bom    TYPE xfeld,     &quot; radiobutton distinte base
        p_dfill  TYPE xfeld,    &quot; invio distinte base PDM -&gt; SAP Filling
        p_dlabl  TYPE xfeld,    &quot; invio distinte base PDM -&gt; SAP  Labelling
        p_dpack  TYPE xfeld,    &quot; invio distinte base PDM -&gt; SAP Packaging
        p_dtbase TYPE datum,   &quot; data base distinte
        p_err    TYPE xfeld,    &quot; rielaborazione errori
        s_matnr  TYPE RANGE OF mara-matnr,
        s_datum  TYPE RANGE OF zpp_pdm_am-datum,
        s_uzeit  TYPE RANGE OF zpp_pdm_am-uzeit,
        p_layout TYPE disvariant-variant,
      END OF ty_s_sel
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_DATA_MAT</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>13</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>51</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>51</SRCROW2><SRCCOLUMN2>46</SRCCOLUMN2><TYPESRC_LENG>43</TYPESRC_LENG><TYPESRC>ty_t_data_mat TYPE TABLE OF ty_s_data_mat
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_DATA_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>14</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>53</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>53</SRCROW2><SRCCOLUMN2>46</SRCCOLUMN2><TYPESRC_LENG>43</TYPESRC_LENG><TYPESRC>ty_t_data_bom TYPE TABLE OF ty_s_data_bom
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_S_PDM_FILE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>15</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE><SRCROW1>0</SRCROW1><SRCCOLUMN1>0</SRCCOLUMN1><SRCROW2>0</SRCROW2><SRCCOLUMN2>0</SRCCOLUMN2><TYPESRC_LENG>0</TYPESRC_LENG></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_PDM_FILE</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>16</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>56</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>56</SRCROW2><SRCCOLUMN2>46</SRCCOLUMN2><TYPESRC_LENG>43</TYPESRC_LENG><TYPESRC>ty_t_pdm_file TYPE TABLE OF ty_s_pdm_file
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_PDM_AM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>17</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>58</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>58</SRCROW2><SRCCOLUMN2>42</SRCCOLUMN2><TYPESRC_LENG>39</TYPESRC_LENG><TYPESRC>ty_t_pdm_am TYPE TABLE OF ty_s_pdm_am
</TYPESRC></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>TY_T_PDM_BOM</CMPNAME><VERSION>1</VERSION><LANGU>I</LANGU><EXPOSURE>2</EXPOSURE><STATE>1</STATE><EDITORDER>18</EDITORDER><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-10-10</CHANGEDON><TYPTYPE>4</TYPTYPE><SRCROW1>60</SRCROW1><SRCCOLUMN1>6</SRCCOLUMN1><SRCROW2>60</SRCROW2><SRCCOLUMN2>44</SRCCOLUMN2><TYPESRC_LENG>41</TYPESRC_LENG><TYPESRC>ty_t_pdm_bom TYPE TABLE OF ty_s_pdm_bom
</TYPESRC></item></TYPES><PARAMETERS><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>ALV_SHOW</CMPNAME><SCONAME>IV_TYPE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tipo visualizzaione</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-05</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>NUMC1</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>ALV_SHOW</CMPNAME><SCONAME>IV_TITLE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>ALV Control: testo della riga titolo</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-05</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>LVC_TITLE</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>ALV_SHOW</CMPNAME><SCONAME>CT_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-05</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CHECK_FILE</CMPNAME><SCONAME>IV_FILE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Path disegno</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-08-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-08-29</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STRING</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CHECK_FILE</CMPNAME><SCONAME>RV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-08-29</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_PROGRAM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Programma chiamante</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-REPID</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_LANGUAGE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Campo sistema ABAP: chiave lingua dell&apos;ambiente testi</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-LANGU</TYPE><PARVALUE>SY-LANGU</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_PFSTATUS</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Stato GUI</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SYPFKEY</TYPE><PARVALUE>SPACE</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CONSTRUCTOR</CMPNAME><SCONAME>IV_PFSTATUS_LOG</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Stato Gui alv log</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>2</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SYPFKEY</TYPE><PARVALUE>SPACE</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><SCONAME>IT_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><SCONAME>CT_PDM_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-06-09</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM</CMPNAME><SCONAME>RV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-28</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM2</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_BOM2</CMPNAME><SCONAME>RV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-29</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_CICLI_LAV</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_CICLI_LAV</CMPNAME><SCONAME>IT_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-13</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_CICLI_LAV</CMPNAME><SCONAME>CT_PDM_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-06-13</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_CICLI_LAV2</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_MATERIAL</CMPNAME><SCONAME>IS_DATA_MAT</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_MAT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_MATERIAL</CMPNAME><SCONAME>CT_PDM_AM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_AM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_PROD_VER</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_PROD_VER</CMPNAME><SCONAME>IT_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-13</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_PROD_VER</CMPNAME><SCONAME>CT_PDM_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-06-13</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_PROD_VER2</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REVISION_LEVEL</CMPNAME><SCONAME>IS_DATA_MAT</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_MAT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REVISION_LEVEL</CMPNAME><SCONAME>CT_PDM_AM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_AM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REV_LEVEL_BOM</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-27</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REV_LEVEL_BOM</CMPNAME><SCONAME>IT_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-27</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REV_LEVEL_BOM</CMPNAME><SCONAME>CT_PDM_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-27</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-06-27</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>CREATE_REV_LEVEL_BOM2</CMPNAME><SCONAME>IS_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_CREATE_PARAM</CMPNAME><SCONAME>IV_TYPE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tipo file</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-02</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZINTER_TIPOFILE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_CREATE_PARAM</CMPNAME><SCONAME>RS_ZTBC000004</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tabella di parametrizzazione creazione PDM-&gt;SAP</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-02</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZTBC000004</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>IS_SEL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_MAT_FILL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica filling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_MAT_LABE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica labelling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_MAT_PACK</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica packaging</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_BOM_FILL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte filling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_BOM_LABE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte labelling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_BOM_PACK</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte packaging</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DATA</CMPNAME><SCONAME>CT_DATA_MAT</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DIBA</CMPNAME><SCONAME>IV_MATNR</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Codice materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MATNR</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DIBA</CMPNAME><SCONAME>IV_WERKS</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Divisione</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-06-09</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>WERKS_D</TYPE><PARVALUE>&apos;6301&apos;</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DIBA</CMPNAME><SCONAME>IV_STLAN</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Impiego della distinta base</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>STLAN</TYPE><PARVALUE>&apos;2&apos;</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DIBA</CMPNAME><SCONAME>ES_MAST</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati divisione per materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-06-09</CHANGEDON><PARDECLTYP>1</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MAST</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_DIBA</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Campo sistema ABAP: valore di ritorno di enunciati ABAP</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-SUBRC</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MARC</CMPNAME><SCONAME>IV_MATNR</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Codice materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MATNR</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MARC</CMPNAME><SCONAME>IV_WERKS</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Divisione</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>WERKS_D</TYPE><PARVALUE>&apos;6301&apos;</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MARC</CMPNAME><SCONAME>ES_MARC</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati divisione per materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>1</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MARC</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MARC</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Campo sistema ABAP: valore di ritorno di enunciati ABAP</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-SUBRC</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MATERIAL</CMPNAME><SCONAME>IV_MATNR</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Codice materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MATNR</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MATERIAL</CMPNAME><SCONAME>ES_MARA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati mat. generali</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>1</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MARA</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_MATERIAL</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Esito controllo</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-SUBRC</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_NEXT_NUMBER</CMPNAME><SCONAME>IV_RANGE_NO</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>N. range di numerazione</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-22</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-22</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>INRI-NRRANGENR</TYPE><PARVALUE>&apos;01&apos;</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_NEXT_NUMBER</CMPNAME><SCONAME>IV_OBJECT</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Nome oggetto range numerico</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>INRI-OBJECT</TYPE><PARVALUE>&apos;ZRANGE_PDM&apos;</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_NEXT_NUMBER</CMPNAME><SCONAME>CV_NUMBER</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Numeratore</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-22</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-22</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_NUMERO</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_PAR_CICLI_REF</CMPNAME><SCONAME>IV_MATNR</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Codice materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-13</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MATNR</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_PAR_CICLI_REF</CMPNAME><SCONAME>ES_PAR_CICLI_REF</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Parametrizzazione cicli di riferimento</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-13</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZTPP_CICLI</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_REVISION_LEVEL</CMPNAME><SCONAME>IV_AETYP</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tipo oggetto</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>AETYP</TYPE><PARVALUE>&apos;41&apos;</PARVALUE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_REVISION_LEVEL</CMPNAME><SCONAME>IV_REVLV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Stato di revisione</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>REVLV</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_REVISION_LEVEL</CMPNAME><SCONAME>IV_MATNR</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Codice materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MATNR</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_REVISION_LEVEL</CMPNAME><SCONAME>ES_AEOI</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Servizio mod.: record gestione ogg. per anagrafica mod.</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>1</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>AEOI</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_REVISION_LEVEL</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Campo sistema ABAP: valore di ritorno di enunciati ABAP</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>SY-SUBRC</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_SALV</CMPNAME><SCONAME>EO_SALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe gestione alv grid</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>3</TYPTYPE><TYPE>ZCL_BC_ALV_BASE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_SAP_UM</CMPNAME><SCONAME>IV_PDM_UM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>UM PDM</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-05</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_TO_SAP-UM_PDM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_SAP_UM</CMPNAME><SCONAME>EV_MEINS</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Unità di misura di base</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MEINS</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_ZTMM_EKGRP</CMPNAME><SCONAME>IV_MATNR</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Codice materiale</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>MATNR</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>GET_ZTMM_EKGRP</CMPNAME><SCONAME>ES_ZTMM_EKGRP</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tabella di transcodifica gruppo acquisti per PDM</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZTMM_EKGRP</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>INSERT_DRAW_PATHS</CMPNAME><SCONAME>IS_DATA_MAT</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_DATA_MAT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>INSERT_DRAW_PATHS</CMPNAME><SCONAME>CT_PDM_AM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-09</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_PDM_AM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>ON_USER_COMMAND</CMPNAME><SCONAME>E_SALV_FUNCTION</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>General Events</DESCRIPT><CMPTYPE>2</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>1</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>3</TYPTYPE><TYPE>CL_SALV_EVENTS</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>IS_SEL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-05</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_MAT</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-05</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_MAT_FILL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica filling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_MAT_LABE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica labelling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_MAT_PACK</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica packaging</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_BOM_FILL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte filling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_BOM_LABE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte labelling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_ERR_RECORDS</CMPNAME><SCONAME>CT_DATA_BOM_PACK</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte packaging</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>IS_SEL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_S_SEL</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_MAT_FILL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica filling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_MAT_LABE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica labelling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_MAT_PACK</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM anagrafica packaging</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_BOM_FILL</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte filling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_BOM_LABE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte labelling</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>6</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_BOM_PACK</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Dati estratti PDM distinte packaging</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>7</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE><PAROPTIONL>X</PAROPTIONL></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_BOM</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>8</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_BOM</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>READ_FILES</CMPNAME><SCONAME>CT_DATA_MAT</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>9</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TY_T_DATA_MAT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>SET_SALV</CMPNAME><SCONAME>IO_SALV</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Classe gestione alv grid</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-15</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>3</TYPTYPE><TYPE>ZCL_BC_ALV_BASE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>SET_SAP_TABLE</CMPNAME><SCONAME>IV_TYPE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tipo file</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-04</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZINTER_TIPOFILE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>SET_SAP_TABLE</CMPNAME><SCONAME>IT_FILE</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZCL_PP_PDM_FILE=&gt;TY_T_FILE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>SET_SAP_TABLE</CMPNAME><SCONAME>CT_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG</CMPNAME><SCONAME>IT_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tabella dati</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-04</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG</CMPNAME><SCONAME>CT_PDM_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-05-05</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-28</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-05-05</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG2</CMPNAME><SCONAME>IV_NUMBER</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Numeratore</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-22</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_NUMERO</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG2</CMPNAME><SCONAME>IT_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Tabella dati</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-22</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG2</CMPNAME><SCONAME>IV_TIME</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Ora</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-22</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>UZEIT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG2</CMPNAME><SCONAME>CT_PDM_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-30</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG2</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>5</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-06-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-30</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG3</CMPNAME><SCONAME>IV_NUMBER</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Numeratore</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_NUMERO</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG3</CMPNAME><SCONAME>IV_TIME</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Ora</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-29</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>UZEIT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG3</CMPNAME><SCONAME>IV_INDEX</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-30</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG3</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-29</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-30</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG4</CMPNAME><SCONAME>IV_NUMBER</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Numeratore</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>1</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-30</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>ZPP_PDM_NUMERO</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG4</CMPNAME><SCONAME>IV_TIME</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><DESCRIPT>Ora</DESCRIPT><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>2</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-30</CREATEDON><CHANGEDON>0000-00-00</CHANGEDON><PARDECLTYP>0</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>UZEIT</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG4</CMPNAME><SCONAME>CT_PDM_DATA</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>3</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-30</CHANGEDON><PARDECLTYP>2</PARDECLTYP><PARPASSTYP>1</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>TABLE</TYPE></item><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><CMPNAME>WRITE_LOG4</CMPNAME><SCONAME>EV_RET</SCONAME><VERSION>1</VERSION><LANGU>I</LANGU><CMPTYPE>1</CMPTYPE><MTDTYPE>0</MTDTYPE><EDITORDER>4</EDITORDER><DISPID>0</DISPID><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-09-30</CREATEDON><CHANGEDBY>KOSMEDEV</CHANGEDBY><CHANGEDON>2016-09-30</CHANGEDON><PARDECLTYP>3</PARDECLTYP><PARPASSTYP>0</PARPASSTYP><TYPTYPE>1</TYPTYPE><TYPE>I</TYPE></item></PARAMETERS><EXCEPTIONS/><IMPLEMENTINGS/><IMPL_DETAILS/><FRIENDSHIPS/><TYPEPUSAGES><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><TYPEGROUP>ABAP</TYPEGROUP><VERSION>1</VERSION><TPUTYPE>0</TPUTYPE><IMPLICIT>X</IMPLICIT></item></TYPEPUSAGES><CLSDEFERRDS><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><TYPEGROUP>ZCL_PP_PDM_FILE</TYPEGROUP><VERSION>1</VERSION><TPUTYPE>1</TPUTYPE><IMPLICIT>X</IMPLICIT></item></CLSDEFERRDS><INTDEFERRDS/><ALIASES/><INHERITANCE><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE</REFCLSNAME><VERSION>1</VERSION><STATE>1</STATE><AUTHOR>KOSMEDEV</AUTHOR><CREATEDON>2016-04-27</CREATEDON><CHANGEDON>2016-10-10</CHANGEDON></INHERITANCE><INTERFACES/><REDEFINITIONS><item><CLSNAME>ZCL_PP_PDM_TO_SAP</CLSNAME><REFCLSNAME>ZCL_BC_PROGRAM_BASE</REFCLSNAME><VERSION>1</VERSION><MTDNAME>MODIFY_SCREEN</MTDNAME><EXPOSURE>2</EXPOSURE></item></REDEFINITIONS><TYPE_SOURCE/><LOCALS_SRC/><LOCALS_DEF><item>*&quot;* use this source file for any type of declarations (class</item><item>*&quot;* definitions, interfaces or type declarations) you need for</item><item>*&quot;* components in the private section</item><item/></LOCALS_DEF><LOCALS_IMP><item>*&quot;* use this source file for the definition and implementation of</item><item>*&quot;* local helper classes, interface definitions and type</item><item>*&quot;* declarations</item><item/><item>CLASS lcl_handle_events DEFINITION.</item><item>  PUBLIC SECTION.</item><item>    METHODS:</item><item>      constructor IMPORTING io_sender TYPE REF TO zcl_pp_pdm_to_sap,</item><item>      on_user_command FOR EVENT added_function OF cl_salv_events</item><item>        IMPORTING e_salv_function.</item><item>  PRIVATE SECTION.</item><item>    DATA: go_sender TYPE REF TO zcl_pp_pdm_to_sap.</item><item>ENDCLASS.</item><item/><item>CLASS lcl_handle_events IMPLEMENTATION.</item><item>  METHOD constructor.</item><item>    go_sender = io_sender.</item><item>  ENDMETHOD.</item><item>  METHOD on_user_command.</item><item>    DATA: lr_selections TYPE REF TO cl_salv_selections.</item><item>    DATA: lt_rows TYPE salv_t_row.</item><item>    DATA: ls_rows TYPE i.</item><item>    DATA: message TYPE string.</item><item>    CASE e_salv_function.</item><item>      WHEN &apos;EXEC&apos;.</item><item>        go_sender-&gt;process_files( ).</item><item>*        MESSAGE : &apos;Files elaborati!&apos;(010) TYPE &apos;I&apos;.</item><item>      WHEN &apos;&amp;&amp;BACK&apos;.</item><item>        LEAVE TO SCREEN 0.</item><item>    ENDCASE.</item><item>  ENDMETHOD.</item><item>ENDCLASS.</item></LOCALS_IMP><LOCALS_MAC><item>*&quot;* use this source file for any macro definitions you need</item><item>*&quot;* in the implementation part of the class</item><item/></LOCALS_MAC><TEXT_POOL><I><item><ID>I</ID><KEY>001</KEY><ENTRY>Anagrafica Materiale Filling</ENTRY><LENGTH>56</LENGTH></item><item><ID>I</ID><KEY>002</KEY><ENTRY>Anagrafica Materiale Labelling</ENTRY><LENGTH>60</LENGTH></item><item><ID>I</ID><KEY>004</KEY><ENTRY>Anagrafica Materiale Packaging</ENTRY><LENGTH>60</LENGTH></item><item><ID>I</ID><KEY>005</KEY><ENTRY>Distinte base Filling</ENTRY><LENGTH>42</LENGTH></item><item><ID>I</ID><KEY>006</KEY><ENTRY>Distinte base Labelling</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>007</KEY><ENTRY>Distinte base Packaging</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>008</KEY><ENTRY>Anagrafica Materiale</ENTRY><LENGTH>40</LENGTH></item><item><ID>I</ID><KEY>009</KEY><ENTRY>Distinte base</ENTRY><LENGTH>23</LENGTH></item><item><ID>I</ID><KEY>010</KEY><ENTRY>Files elaborati!</ENTRY><LENGTH>26</LENGTH></item><item><ID>I</ID><KEY>011</KEY><ENTRY>Errori trasmissioni Anagrafica Materiale</ENTRY><LENGTH>80</LENGTH></item><item><ID>I</ID><KEY>012</KEY><ENTRY>Livello non creato per mancanza codice materiale</ENTRY><LENGTH>96</LENGTH></item><item><ID>I</ID><KEY>013</KEY><ENTRY>Codice padre non aperto su divisione</ENTRY><LENGTH>72</LENGTH></item><item><ID>I</ID><KEY>014</KEY><ENTRY>Errore creazione testata diba</ENTRY><LENGTH>42</LENGTH></item><item><ID>I</ID><KEY>015</KEY><ENTRY>Errore cancellazione componenti diba</ENTRY><LENGTH>72</LENGTH></item><item><ID>I</ID><KEY>016</KEY><ENTRY>Log trasmissione BOM</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>017</KEY><ENTRY>Log trasmissione Anagrafica Materiale</ENTRY><LENGTH>74</LENGTH></item><item><ID>I</ID><KEY>018</KEY><ENTRY>Nessuna parametrizzazione per materiale</ENTRY><LENGTH>78</LENGTH></item><item><ID>I</ID><KEY>019</KEY><ENTRY>Ciclo già esistente</ENTRY><LENGTH>29</LENGTH></item><item><ID>I</ID><KEY>020</KEY><ENTRY>Da non creare (vedi parametrizzazione)</ENTRY><LENGTH>82</LENGTH></item><item><ID>I</ID><KEY>021</KEY><ENTRY>Codice componente non aperto su divisione</ENTRY><LENGTH>82</LENGTH></item></I></TEXT_POOL><METHOD_SOURCE><ALV_SHOW><item>  METHOD alv_show.</item><item>    IF ( NOT ct_data[] IS INITIAL ).</item><item>      DATA: lt_fieldcat TYPE slis_t_fieldcat_alv,</item><item>            is_print    TYPE slis_print_alv,</item><item>            lv_program  TYPE sy-repid.</item><item>      FIELD-SYMBOLS &lt;ct_data&gt; TYPE table.</item><item/><item>      lv_program = get_program( ).</item><item/><item>      ASSIGN (&apos;CT_DATA[]&apos;) TO &lt;ct_data&gt;.</item><item/><item>      DATA lo_alv     TYPE REF TO cl_salv_table.</item><item>      DATA lo_display TYPE REF TO cl_salv_display_settings.</item><item>      DATA: lt_fcat   TYPE lvc_t_fcat.</item><item/><item>      DATA: lv_lenght   TYPE i.</item><item>      DATA: lv_title    TYPE char70.</item><item/><item>      lo_alv = get_alv( ).</item><item/><item>      TRY.</item><item>          cl_salv_table=&gt;factory(</item><item>            IMPORTING</item><item>              r_salv_table = lo_alv</item><item>            CHANGING</item><item>              t_table      = &lt;ct_data&gt; ).</item><item>*          lt_fcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(</item><item>*                      r_columns      = lo_alv-&gt;get_columns( ) &quot; ALV Fil</item><item>*                      r_aggregations = lo_alv-&gt;get_aggregations( ) ).&quot;</item><item>*          LOOP AT lt_fcat INTO DATA(ls_fcat) WHERE fieldname = &apos;TYPE&apos;.</item><item>*            ls_fcat-ref_field = &apos;TIPOFILE&apos;.</item><item>*            ls_fcat-ref_table = &apos;ZTBC000001&apos;.</item><item>*            MODIFY lt_fcat FROM ls_fcat.</item><item>*          ENDLOOP.</item><item>*          cl_salv_controller_metadata=&gt;set_lvc_fieldcatalog( EXPORTING</item><item>*</item><item>*</item><item>        CATCH cx_salv_msg.</item><item>      ENDTRY.</item><item/><item>      DATA: lo_functions TYPE REF TO cl_salv_functions_list.</item><item/><item>      lo_functions = lo_alv-&gt;get_functions( ).</item><item>      lo_functions-&gt;set_all( abap_true ).</item><item/><item>      lo_display = lo_alv-&gt;get_display_settings( ).</item><item>      lo_display-&gt;set_list_header( iv_title ).</item><item>      lo_display-&gt;set_striped_pattern( cl_salv_display_settings=&gt;true ).</item><item/><item>      TRY.</item><item>          DATA: lv_text TYPE string VALUE &apos;nutton&apos;.</item><item>          lv_text = TEXT-b01.</item><item>          lo_functions-&gt;add_function(</item><item>            name     = &apos;GET_SEL&apos;</item><item>            icon     = &apos;ICON_EXECUTE_OBJECT&apos;</item><item>            text     = lv_text</item><item>            tooltip  = lv_text</item><item>            position = if_salv_c_function_position=&gt;right_of_salv_functi</item><item>        CATCH cx_salv_wrong_call cx_salv_existing cx_salv_method_not_sup</item><item>      ENDTRY.</item><item/><item>      DATA: lo_columns  TYPE REF TO cl_salv_columns.</item><item>      lo_columns = lo_alv-&gt;get_columns( ).</item><item>      DATA: lo_column    TYPE REF TO cl_salv_column.</item><item>      TRY.</item><item>          lo_columns-&gt;set_optimize( abap_true ).</item><item>*          lo_column = lo_cols-&gt;get_column( &apos;TYPE&apos; ).</item><item>*          lo_column-&gt;set_long_text( &apos;Avl Date&apos; ).           &quot;#EC NOTEXT</item><item>*          lo_column-&gt;set_medium_text( &apos;Avl Date&apos; ).         &quot;#EC NOTEXT</item><item>*          lo_column-&gt;set_short_text( &apos;Avl Date&apos; ).          &quot;#EC NOTEXT</item><item>*          lo_column-&gt;set_output_length( 10 ).</item><item>        CATCH cx_salv_not_found.                        &quot;#EC NO_HANDLER</item><item>      ENDTRY.</item><item/><item>      IF ( iv_type = c_alv_view_data ).</item><item>        lo_alv-&gt;set_screen_status( report        = get_program( )</item><item>                                   pfstatus      = get_pfstatus( )</item><item>                                   set_functions = lo_alv-&gt;c_functions_a</item><item>      ELSEIF ( iv_type = c_alv_view_log ).</item><item>        DATA: lo_layout  TYPE REF TO cl_salv_layout,</item><item>              ls_variant TYPE slis_vari.</item><item>        lo_layout = lo_alv-&gt;get_layout( ).</item><item>        lo_layout-&gt;set_save_restriction( if_salv_c_layout=&gt;restrict_none</item><item>*        ls_key-report = gv_program.</item><item>        lo_layout-&gt;set_key( go_salv-&gt;get_key( ) ).</item><item>        IF ( NOT go_salv-&gt;get_variant( ) IS INITIAL ).</item><item>          lo_layout-&gt;set_initial_layout( ls_variant ).</item><item>        ENDIF.</item><item>        lo_alv-&gt;set_screen_status( report        = get_program( )</item><item>                                   pfstatus      = gv_pfstatus_log</item><item>                                   set_functions = lo_alv-&gt;c_functions_a</item><item>      ENDIF.</item><item/><item>      DATA : lo_selections    TYPE REF TO cl_salv_selections,</item><item>             lo_events        TYPE REF TO cl_salv_events_table,</item><item>             lo_event_handler TYPE REF TO lcl_handle_events.</item><item/><item>      lo_events = lo_alv-&gt;get_event( ).</item><item>      lo_event_handler = NEW #( io_sender = me ).</item><item>      SET HANDLER lo_event_handler-&gt;on_user_command FOR lo_events.</item><item/><item>      IF lo_alv IS BOUND.</item><item>        set_alv( CHANGING co_alv = lo_alv ).</item><item>        lo_alv-&gt;display( ).</item><item>      ENDIF.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></ALV_SHOW><CONSTRUCTOR><item>  METHOD constructor.</item><item>    super-&gt;constructor( iv_program  = iv_program</item><item>                        iv_language = iv_language</item><item>                        iv_pfstatus = iv_pfstatus ).</item><item>    gv_pfstatus_log = iv_pfstatus_log.</item><item>  ENDMETHOD.</item></CONSTRUCTOR><CREATE_SELECTIONS><item>  METHOD create_selections.</item><item>    DATA: lref_sel TYPE REF TO data.</item><item>    CREATE DATA lref_sel TYPE ty_s_sel.</item><item>    set_selections( CHANGING cref_sel = lref_sel ).</item><item>    FIELD-SYMBOLS: &lt;sel&gt;    TYPE any.</item><item>    ASSIGN lref_sel-&gt;* TO &lt;sel&gt;.</item><item>    IF ( sy-subrc = 0 ).</item><item>      gs_sel = &lt;sel&gt;.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CREATE_SELECTIONS><GET_DATA><item>  METHOD get_data.</item><item>    REFRESH gt_ztbc000004.</item><item>    IF ( is_sel-p_err IS INITIAL ).</item><item>*     Ricezione anagrafica materiale e distinte base</item><item>      read_files( EXPORTING is_sel = is_sel</item><item>                  CHANGING  ct_data_bom      = ct_data_bom</item><item>                            ct_data_mat      = ct_data_mat</item><item>                            ct_data_bom_fill = ct_data_bom_fill</item><item>                            ct_data_bom_labe = ct_data_bom_labe</item><item>                            ct_data_bom_pack = ct_data_bom_pack</item><item>                            ct_data_mat_fill = ct_data_mat_fill</item><item>                            ct_data_mat_labe = ct_data_mat_labe</item><item>                            ct_data_mat_pack = ct_data_mat_pack ).</item><item>    ELSE.</item><item>*     Rielabora errori</item><item>      read_err_records( EXPORTING is_sel      = is_sel</item><item>                        CHANGING  ct_data_bom      = ct_data_bom</item><item>                                  ct_data_mat      = ct_data_mat</item><item>                                  ct_data_bom_fill = ct_data_bom_fill</item><item>                                  ct_data_bom_labe = ct_data_bom_labe</item><item>                                  ct_data_bom_pack = ct_data_bom_pack</item><item>                                  ct_data_mat_fill = ct_data_mat_fill</item><item>                                  ct_data_mat_labe = ct_data_mat_labe</item><item>                                  ct_data_mat_pack = ct_data_mat_pack ).</item><item>    ENDIF.</item><item>    IF ( is_sel-p_err IS INITIAL ).</item><item>      DELETE ct_data_bom WHERE data &lt; is_sel-p_dtbase.</item><item>      DELETE ct_data_bom_fill WHERE data &lt; is_sel-p_dtbase.</item><item>      DELETE ct_data_bom_labe WHERE data &lt; is_sel-p_dtbase.</item><item>      DELETE ct_data_bom_pack WHERE data &lt; is_sel-p_dtbase.</item><item>      IF ( is_sel-p_dtbase IS INITIAL ).</item><item>        REFRESH ct_data_bom.</item><item>        REFRESH ct_data_bom_fill.</item><item>        REFRESH ct_data_bom_labe.</item><item>        REFRESH ct_data_bom_pack.</item><item>      ENDIF.</item><item>    ENDIF.</item><item>*    SORT ct_data_bom BY padre data componente.</item><item>  ENDMETHOD.</item></GET_DATA><MODIFY_SCREEN><item>  METHOD modify_screen.</item><item>    create_selections( ).</item><item/><item>    LOOP AT SCREEN INTO DATA(ls_screen).</item><item>      IF ( ls_screen-group1 = &apos;MAT&apos; ).</item><item>        CASE abap_true.</item><item>          WHEN gs_sel-p_mat.</item><item>            CLEAR gs_sel-p_dfill. &quot;DP-07_10_2016</item><item>            CLEAR gs_sel-p_dlabl. &quot;DP-07_10_2016</item><item>            CLEAR gs_sel-p_dpack. &quot;DP-07_10_2016</item><item>            IF ( gs_sel-p_err = abap_false ).</item><item>              ls_screen-active = 1.</item><item>            ELSE.</item><item>              ls_screen-active = 0.</item><item>            ENDIF.</item><item>          WHEN OTHERS.</item><item>            ls_screen-active = 0.</item><item>        ENDCASE.</item><item>        MODIFY screen FROM ls_screen.</item><item/><item/><item>      ENDIF.</item><item>      IF ( ls_screen-group1 = &apos;BOM&apos; ).</item><item>        CASE abap_true.</item><item>          WHEN gs_sel-p_bom.</item><item>            CLEAR gs_sel-s_matnr1.   &quot;DP-07_10_2016</item><item>            REFRESH gs_sel-s_matnr1. &quot;DP-07_10_2016</item><item>            CLEAR gs_sel-p_mfill. &quot;DP-07_10_2016</item><item>            CLEAR gs_sel-p_mlabl. &quot;DP-07_10_2016</item><item>            CLEAR gs_sel-p_mpack. &quot;DP-07_10_2016</item><item>            IF ( gs_sel-p_err = abap_false ).</item><item>              ls_screen-active = 1.</item><item>            ELSE.</item><item>              ls_screen-active = 0.</item><item>            ENDIF.</item><item>          WHEN OTHERS.</item><item>            ls_screen-active = 0.</item><item>        ENDCASE.</item><item>        MODIFY screen FROM ls_screen.</item><item/><item/><item>      ENDIF.</item><item>      IF ( ls_screen-group1 = &apos;ERR&apos; ).</item><item>        CASE abap_true.</item><item>          WHEN gs_sel-p_err.</item><item>            ls_screen-active = 1.</item><item>          WHEN OTHERS.</item><item>            ls_screen-active = 0.</item><item>        ENDCASE.</item><item>        MODIFY screen FROM ls_screen.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item/><item>  ENDMETHOD.</item></MODIFY_SCREEN><WRITE_LOG><item>  METHOD write_log.</item><item>    DATA: lo_pdm_file TYPE REF TO zcl_pp_pdm_file,</item><item>          lv_counter  TYPE zpp_counter.</item><item>    FIELD-SYMBOLS: &lt;ls_pdm_data&gt; TYPE any,</item><item>                   &lt;ls_data&gt;     TYPE any,</item><item>                   &lt;tipofile&gt;    TYPE zinter_tipofile.</item><item>    ev_ret = 0.</item><item>    lo_pdm_file = NEW #( iv_werks = &apos;6301&apos; ).</item><item/><item>    IF ( NOT gs_sel-p_mat IS INITIAL ).</item><item>      DATA: ls_pdm_am TYPE ty_s_pdm_am,</item><item>            lt_pdm_am TYPE ty_t_pdm_am.</item><item>      REFRESH: lt_pdm_am.</item><item>      LOOP AT ct_pdm_data ASSIGNING &lt;ls_pdm_data&gt;.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE it_data ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_am           = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_am-mandt     = sy-mandt.</item><item>        ls_pdm_am-datum     = sy-datum.</item><item>        ls_pdm_am-uzeit     = sy-uzeit.</item><item>        ls_pdm_am-tipofile  = &lt;tipofile&gt;.</item><item>        ls_pdm_am-counter   = lv_counter.</item><item>        ls_pdm_am-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;tip</item><item>        ls_pdm_am-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tipo</item><item>        IF ( ls_pdm_am-anamat_flg &lt;&gt; &apos;E&apos; AND ls_pdm_am-pathdis_flg &lt;&gt; &apos;E</item><item>          ls_pdm_am-complete_flg = abap_true.</item><item>        ENDIF.</item><item>        APPEND ls_pdm_am TO lt_pdm_am.</item><item>        UPDATE zpp_pdm_am SET complete_flg = abap_true WHERE matnr = ls_</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_am[] IS INITIAL ).</item><item>        INSERT zpp_pdm_am FROM TABLE lt_pdm_am.</item><item>        COMMIT WORK AND WAIT.</item><item>        ct_pdm_data[] = lt_pdm_am[].</item><item>      ENDIF.</item><item>    ELSEIF ( NOT gs_sel-p_bom IS INITIAL ).</item><item>      DATA: ls_pdm_bom TYPE ty_s_pdm_bom,</item><item>            lt_pdm_bom TYPE ty_t_pdm_bom.</item><item>      REFRESH: lt_pdm_bom.</item><item>      LOOP AT ct_pdm_data ASSIGNING &lt;ls_pdm_data&gt;.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE it_data ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_bom = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_bom-mandt     = sy-mandt.</item><item>        ls_pdm_bom-datum     = sy-datum.</item><item>        ls_pdm_bom-uzeit     = sy-uzeit.</item><item>        ls_pdm_am-tipofile   = &lt;tipofile&gt;.</item><item>        ls_pdm_bom-counter   = lv_counter.</item><item>        ls_pdm_bom-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;ti</item><item>        ls_pdm_bom-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tip</item><item>        IF ( ls_pdm_bom-cicli_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-bom_flg &lt;&gt; &apos;E&apos; A</item><item>             ls_pdm_bom-revpadre_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-revfiglio_flg</item><item>          ls_pdm_bom-complete_flg = abap_true.</item><item>        ENDIF.</item><item>        APPEND ls_pdm_bom TO lt_pdm_bom.</item><item>        UPDATE zpp_pdm_bom SET complete_flg = abap_true WHERE padre = ls</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_bom[] IS INITIAL ).</item><item>        INSERT zpp_pdm_bom FROM TABLE lt_pdm_bom.</item><item>        COMMIT WORK AND WAIT.</item><item>        ct_pdm_data[] = lt_pdm_bom[].</item><item>      ENDIF.</item><item>    ENDIF.</item><item>    FREE lo_pdm_file.</item><item>  ENDMETHOD.</item></WRITE_LOG><SET_SAP_TABLE><item>  METHOD set_sap_table.</item><item>    DATA: ldref         TYPE REF TO data,</item><item>          lt_split      TYPE TABLE OF string,</item><item>          lv_n          TYPE i,</item><item>          lo_data_descr TYPE REF TO cl_abap_datadescr.</item><item>    CREATE DATA ldref LIKE LINE OF ct_data.</item><item>    FIELD-SYMBOLS: &lt;file&gt;  TYPE any,</item><item>                   &lt;field&gt; TYPE any.</item><item>    ASSIGN ldref-&gt;* TO &lt;file&gt;.</item><item>    IF ( sy-subrc = 0 ).</item><item>      REFRESH ct_data.</item><item>      LOOP AT it_file INTO DATA(ls_file).</item><item>        CLEAR &lt;file&gt;.</item><item>        ASSIGN COMPONENT 1 OF STRUCTURE &lt;file&gt; TO &lt;field&gt;.</item><item>        IF ( sy-subrc = 0 ).</item><item>          &lt;field&gt; = iv_type.</item><item>        ENDIF.</item><item>        SPLIT ls_file AT zcl_pp_pdm_file=&gt;c_file_separator INTO TABLE lt</item><item>        LOOP AT lt_split INTO DATA(ls_split).</item><item>          lv_n = sy-tabix + 1.</item><item>          ASSIGN COMPONENT lv_n OF STRUCTURE &lt;file&gt; TO &lt;field&gt;.</item><item>          IF ( sy-subrc = 0 ).</item><item>            &lt;field&gt; = ls_split.</item><item>            TRY.</item><item>                lo_data_descr   ?= cl_abap_datadescr=&gt;describe_by_data(</item><item>              CATCH cx_sy_move_cast_error.</item><item>            ENDTRY.</item><item>            IF ( lo_data_descr-&gt;absolute_name+6 = &apos;ZPP_SAP_PDM_REVISIONE</item><item>              CONDENSE: ls_split, &lt;field&gt;.</item><item>              DATA: n    TYPE i,</item><item>                    lv_c TYPE c LENGTH 20.</item><item>              n = 0.</item><item>              lv_c = ls_split.</item><item>              DO strlen( lv_c ) TIMES.</item><item>                IF ( lv_c+n(1) CA &apos;0123456789&apos; ).</item><item>                  ADD 1 TO n.</item><item>                ELSE.</item><item>                  lv_c+n(1) = &apos;&apos;.</item><item>                  CONDENSE lv_c.</item><item>                ENDIF.</item><item>              ENDDO.</item><item>              ls_split = lv_c.</item><item>              IF ( strlen( ls_split ) = 1 ).</item><item>                &lt;field&gt; = &apos;0&apos; &amp;&amp; ls_split.</item><item>              ENDIF.</item><item>            ENDIF.</item><item>*           Tonolli_G - 23.01.2017 - Start Ins</item><item>            IF ( lo_data_descr-&gt;absolute_name+6 = &apos;ZPP_SAP_PDM_MATNR&apos; ).</item><item>*             Il codice materiale può contenere solo caratteri alfanumer</item><item>              DATA lv_ascii TYPE i.</item><item>              CONDENSE: ls_split, &lt;field&gt;.</item><item>              n = 0.</item><item>              lv_c = ls_split.</item><item>              DO strlen( lv_c ) TIMES.</item><item>                lv_ascii = cl_abap_conv_out_ce=&gt;uccpi( lv_c+n(1) ).</item><item>                IF ( lv_ascii &gt;= 0 AND lv_ascii &lt;= 255 ).   &quot;Codifica AS</item><item>                  ADD 1 TO n.</item><item>                ELSE.</item><item>                  lv_c+n(1) = &apos;&apos;.</item><item>                  CONDENSE lv_c.</item><item>                ENDIF.</item><item>              ENDDO.</item><item>              ls_split = lv_c.</item><item>              &lt;field&gt; = ls_split.</item><item>            ENDIF.</item><item>*           Tonolli_G - 23.01.2017 - End Ins</item><item>*            IF ( lo_data_descr-&gt;absolute_name+6 = &apos;ZPP_PDM_SAP_DATA&apos; ).</item><item>*              &lt;field&gt; = &lt;field&gt;+6 &amp;&amp; &lt;field&gt;+3(2) &amp;&amp; &lt;field&gt;(2).</item><item>*            ENDIF.</item><item>            IF ( lo_data_descr-&gt;absolute_name+6 = &apos;ZPP_PDM_SAP_UZEIT&apos; ).</item><item>              &lt;field&gt; = &lt;field&gt;(2) &amp;&amp; &lt;field&gt;+3(2) &amp;&amp; &lt;field&gt;+6(2).</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ENDLOOP.</item><item>        IF ( NOT &lt;file&gt; IS INITIAL ).</item><item>          APPEND &lt;file&gt; TO ct_data.</item><item>        ENDIF.</item><item>      ENDLOOP.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></SET_SAP_TABLE><CREATE_MATERIAL><item>  METHOD create_material.</item><item>    DATA: ls_headdata             TYPE bapimathead,</item><item>          ls_clientdata           TYPE bapi_mara,</item><item>          ls_clientdatax          TYPE bapi_marax,</item><item>          ls_materialdescription  TYPE bapi_makt,</item><item>          ls_materiallongtext     TYPE bapi_mltx,</item><item>          ls_salesdata            TYPE bapi_mvke,</item><item>          ls_salesdatax           TYPE bapi_mvkex,</item><item>          ls_plantdata            TYPE bapi_marc,</item><item>          ls_plantdatax           TYPE bapi_marcx,</item><item>          ls_storagelocationdata  TYPE bapi_mard,</item><item>          ls_storagelocationdatax TYPE bapi_mardx,</item><item>          ls_valuationdata        TYPE bapi_mbew,</item><item>          ls_valuationdatax       TYPE bapi_mbewx,</item><item>          ls_taxclassifications   TYPE bapi_mlan,</item><item>          ls_return               TYPE bapiret2,</item><item>          lt_materialdescription  TYPE TABLE OF bapi_makt,</item><item>          lt_materiallongtext     TYPE TABLE OF bapi_mltx,</item><item>          lt_taxclassifications   TYPE TABLE OF bapi_mlan,</item><item>          lt_returnmessages       TYPE TABLE OF bapi_matreturn2,</item><item>          ls_pdm_am               TYPE ty_s_pdm_am,</item><item>          lv_matnr                TYPE matnr,</item><item>          ls_ztbc000004           TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_mat-tipofile ).</item><item/><item>    CLEAR: ls_headdata, ls_clientdata, ls_clientdatax, ls_materialdescri</item><item>           ls_salesdata, ls_salesdatax, ls_taxclassifications, ls_plantd</item><item>           ls_storagelocationdata, ls_storagelocationdatax, ls_valuation</item><item>           ls_return.</item><item/><item>    REFRESH: lt_materialdescription, lt_materiallongtext, lt_taxclassifi</item><item/><item>    CLEAR ls_pdm_am.</item><item>    MOVE-CORRESPONDING is_data_mat TO ls_pdm_am.</item><item>    IF ( ls_ztbc000004-crea_mat = abap_true ).</item><item/><item>      SELECT SINGLE matnr INTO lv_matnr</item><item>             FROM mara</item><item>             WHERE matnr = is_data_mat-matnr.</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_am-anamat_flg = &apos;Y&apos;.</item><item>        APPEND ls_pdm_am TO ct_pdm_am.</item><item>        RETURN.</item><item>      ENDIF.</item><item/><item>      DATA: lv_disgr TYPE marc-disgr.</item><item>      SELECT SINGLE webaz dzeit plifz beskz sobsl disgr maabc kondm rgek</item><item>             INTO (ls_plantdata-gr_pr_time, ls_plantdata-inhseprodt, ls_</item><item>                   ls_plantdata-proc_type, ls_plantdata-spproctype, ls_p</item><item>                   ls_plantdata-abc_id, ls_salesdata-mat_pr_grp, ls_plan</item><item>             FROM zpp_inter_matkl</item><item>             WHERE matkl = is_data_mat-matkl.</item><item/><item>      ls_headdata-material = is_data_mat-matnr.</item><item>      ls_headdata-ind_sector = &apos;M&apos;.</item><item>*    IF ( is_data_mat-matnr(1) = &apos;5&apos; ).</item><item>*      ls_headdata-matl_type = &apos;ZP05&apos;.</item><item>*    ELSEIF ( is_data_mat-matnr(1) = &apos;8&apos; ).</item><item>*      ls_headdata-matl_type = &apos;ZP08&apos;.</item><item>*    ENDIF.</item><item>      ls_headdata-matl_type = &apos;ZP0&apos; &amp;&amp; is_data_mat-matnr(1).</item><item>      ls_headdata-basic_view = abap_true.</item><item>      ls_headdata-sales_view = abap_true.</item><item>      ls_headdata-purchase_view = abap_true.</item><item>      ls_headdata-mrp_view = abap_true.</item><item>      ls_headdata-forecast_view = abap_false.</item><item>      ls_headdata-work_sched_view = abap_true.</item><item>      ls_headdata-prt_view = abap_false.</item><item>      ls_headdata-storage_view = abap_true.</item><item>      ls_headdata-warehouse_view = abap_false.</item><item>      ls_headdata-quality_view = abap_true.</item><item>      ls_headdata-account_view = abap_true.</item><item>      ls_headdata-cost_view = abap_true.</item><item/><item>*    ls_clientdata-MATL_GROUP = è il gruppo merci del file (CATEGORIA ME</item><item>      ls_clientdata-matl_group = is_data_mat-matkl.</item><item>      ls_clientdata-base_uom = get_sap_um( iv_pdm_um = is_data_mat-um_pd</item><item>      ls_clientdata-base_uom_iso = ls_clientdata-base_uom.</item><item>      ls_clientdata-pur_status = &apos;10&apos;.</item><item>*    IF ( is_data_mat-matnr(1) = &apos;5&apos; ).</item><item>*      ls_clientdata-item_cat = &apos;ZMTS&apos;.</item><item>*    ELSEIF ( is_data_mat-matnr(1) = &apos;8&apos; ).</item><item>*      ls_clientdata-item_cat = &apos;ZMTO&apos;.</item><item>*    ENDIF.</item><item>      ls_clientdata-division     = &apos;02&apos;.</item><item>      ls_clientdata-pur_valkey   = &apos;3&apos;.</item><item/><item>      ls_clientdatax-matl_group   = abap_true.</item><item>      ls_clientdatax-base_uom     = abap_true.</item><item>      ls_clientdatax-base_uom_iso = abap_true.</item><item>*    ls_clientdatax-item_cat     = abap_true.</item><item>      ls_clientdatax-division     = abap_true.</item><item>      ls_clientdatax-pur_valkey   = abap_true.</item><item>      ls_clientdatax-pur_status   = abap_true.</item><item/><item>      ls_materialdescription-langu = &apos;I&apos;.</item><item>      ls_materialdescription-matl_desc = is_data_mat-maktx(35).</item><item>      APPEND ls_materialdescription TO lt_materialdescription.</item><item/><item>      ls_materiallongtext-text_id = &apos;GRUN&apos;.</item><item>      ls_materiallongtext-text_name = is_data_mat-matnr.</item><item>      ls_materiallongtext-langu = &apos;I&apos;.</item><item>      ls_materiallongtext-text_line = is_data_mat-maktx+35.</item><item>      APPEND ls_materiallongtext TO lt_materiallongtext.</item><item/><item>      ls_salesdata-sales_org  = &apos;6301&apos;.</item><item>      ls_salesdata-distr_chan = &apos;02&apos;.</item><item>      ls_salesdata-delyg_plnt = &apos;6301&apos;.</item><item>      ls_salesdata-acct_assgt = &apos;04&apos;.</item><item>*      IF ( is_data_mat-matnr(1) = &apos;5&apos; ).</item><item>*        ls_salesdata-item_cat = &apos;ZMTS&apos;.</item><item>*      ELSEIF ( is_data_mat-matnr(1) = &apos;8&apos; ).</item><item>*        ls_salesdata-item_cat = &apos;ZMTO&apos;.</item><item>*      ENDIF.</item><item>      ls_salesdata-item_cat = ls_plantdata-mrp_group.</item><item/><item>      ls_salesdatax-sales_org  = ls_salesdata-sales_org.</item><item>      ls_salesdatax-distr_chan = ls_salesdata-distr_chan.</item><item>      ls_salesdatax-delyg_plnt = abap_true.</item><item>      ls_salesdatax-acct_assgt = abap_true.</item><item>      ls_salesdatax-item_cat   = abap_true.</item><item>      ls_salesdatax-mat_pr_grp = abap_true.</item><item/><item>      ls_taxclassifications-depcountry = &apos;IT&apos;.</item><item>      ls_taxclassifications-tax_type_1 = &apos;MWST&apos;.</item><item>      ls_taxclassifications-taxclass_1 = &apos;1&apos;.</item><item>      APPEND ls_taxclassifications TO lt_taxclassifications.</item><item>      ls_taxclassifications-tax_type_1 = &apos;LCIT&apos;.</item><item>      ls_taxclassifications-taxclass_1 = &apos;0&apos;.</item><item>      APPEND ls_taxclassifications TO lt_taxclassifications.</item><item/><item>*   PLANTDATA ----------------------------------------------------------</item><item>      ls_plantdata-plant      = &apos;6301&apos;.</item><item>      ls_plantdata-availcheck = &apos;02&apos;.</item><item>      ls_plantdata-loadinggrp = &apos;0001&apos;.</item><item>      ls_plantdata-countryori = &apos;IT&apos;.</item><item>      ls_plantdata-regionorig = &apos;MN&apos;.</item><item>      DATA(ls_ztmm_ekgrp) = get_ztmm_ekgrp( iv_matnr = is_data_mat-matnr</item><item>      ls_plantdata-pur_group = ls_ztmm_ekgrp-ekgrp.</item><item>*    SELECT SINGLE ekgrp INTO ls_plantdata-pur_group</item><item>*           FROM ztmm_ekgrp</item><item>*           WHERE matnr = is_data_mat-matnr.</item><item>*    IF ( sy-subrc &lt;&gt; 0 ).</item><item>*      SELECT SINGLE ekgrp INTO ls_plantdata-pur_group</item><item>*             FROM ztmm_ekgrp</item><item>*             WHERE matnr = space.</item><item>*    ENDIF.</item><item>      ls_plantdata-mrp_type = &apos;PD&apos;.</item><item>      ls_plantdata-lotsizekey = &apos;Z3&apos;.</item><item>      ls_plantdata-sloc_exprc = &apos;6300&apos;.</item><item>      ls_plantdata-period_ind = &apos;M&apos;.</item><item>      IF ( is_data_mat-matnr(1) = &apos;5&apos; ).</item><item>*     ls_plantdata-backflush = &apos;1&apos;.</item><item>*        ls_plantdata-mrp_group = &apos;ZMTS&apos;.</item><item/><item>* SV BEGIN Ticket 6884</item><item>        CASE ls_clientdata-matl_group.</item><item>          WHEN &apos;522&apos; OR &apos;523&apos; OR &apos;524&apos;.</item><item>            ls_plantdata-iss_st_loc = &apos;6331&apos;.</item><item>            ls_plantdata-determ_grp = &apos;Z002&apos;.</item><item>          WHEN OTHERS.</item><item>            ls_plantdata-iss_st_loc = &apos;6332&apos;.</item><item>            ls_plantdata-determ_grp = &apos;Z001&apos;.</item><item>        ENDCASE.</item><item>* SV END Ticket 6884</item><item/><item>        ls_plantdata-prodprof = &apos;Z00002&apos;.  &quot; provvisorio, da definire re</item><item>        ls_plantdata-mrp_ctrler = &apos;005&apos;.</item><item>      ELSEIF ( is_data_mat-matnr(1) = &apos;8&apos; ).</item><item>*       ls_plantdata-backflush = &apos;1&apos;.</item><item>*        ls_plantdata-mrp_group = &apos;ZMTO&apos;.</item><item>        ls_plantdata-iss_st_loc = &apos;6312&apos;.</item><item>        ls_plantdata-determ_grp = &apos;Z001&apos;.</item><item>        ls_plantdata-prodprof = &apos;Z00001&apos;.</item><item>        ls_plantdata-mrp_ctrler = &apos;001&apos;.  &quot; provvisorio, da definire reg</item><item>      ENDIF.</item><item>      IF ( ls_plantdata-mrp_group = &apos;ZMTS&apos; ).</item><item>        ls_plantdata-dep_req_id = &apos;2&apos;.</item><item>      ELSEIF ( ls_plantdata-mrp_group = &apos;ZMTO&apos; ).</item><item>        ls_plantdata-dep_req_id = &apos;1&apos;.</item><item>      ENDIF.</item><item>      ls_plantdata-auto_p_ord = &apos;X&apos;.</item><item>      ls_plantdata-sm_key = &apos;000&apos;.</item><item>      ls_plantdata-comm_code    = is_data_mat-filler18.</item><item>*      ls_plantdata-profit_ctr = &apos;639901&apos;.</item><item>      zcl_bc_conversion_exit=&gt;conversion_input( EXPORTING iv_field = &apos;63</item><item>                                                CHANGING cv_field = ls_p</item><item>*   --------------------------------------------------------------------</item><item/><item>      ls_plantdatax-plant      = &apos;6301&apos;.</item><item>      ls_plantdatax-abc_id     = abap_true.</item><item>      ls_plantdatax-availcheck = abap_true.</item><item>      ls_plantdatax-loadinggrp = abap_true.</item><item>      ls_plantdatax-countryori = abap_true.</item><item>      ls_plantdatax-regionorig = abap_true.</item><item>      ls_plantdatax-pur_group  = abap_true.</item><item>      ls_plantdatax-gr_pr_time = abap_true.</item><item>      ls_plantdatax-inhseprodt = abap_true.</item><item>      ls_plantdatax-plnd_delry = abap_true.</item><item>      ls_plantdatax-proc_type  = abap_true.</item><item>      ls_plantdatax-spproctype = abap_true.</item><item>      ls_plantdatax-mrp_type   = abap_true.</item><item>      ls_plantdatax-lotsizekey = abap_true.</item><item>      ls_plantdatax-sloc_exprc = abap_true.</item><item>      ls_plantdatax-period_ind = abap_true.</item><item>      ls_plantdatax-backflush  = abap_true.</item><item>      ls_plantdatax-mrp_group  = abap_true.</item><item>      ls_plantdatax-iss_st_loc = abap_true.</item><item>      ls_plantdatax-determ_grp = abap_true.</item><item>      ls_plantdatax-prodprof   = abap_true.</item><item>      ls_plantdatax-mrp_ctrler = abap_true.</item><item>      ls_plantdatax-dep_req_id = abap_true.</item><item>      ls_plantdatax-auto_p_ord = abap_true.</item><item>      ls_plantdatax-sm_key     = abap_true.</item><item>      ls_plantdatax-comm_code  = abap_true.</item><item/><item>      ls_storagelocationdata-plant = &apos;6301&apos;.</item><item>      IF ( is_data_mat-matnr(1) = &apos;5&apos; ).</item><item>        ls_storagelocationdata-stge_loc = &apos;6332&apos;.</item><item>      ELSEIF ( is_data_mat-matnr(1) = &apos;8&apos; ).</item><item>        ls_storagelocationdata-stge_loc = &apos;6312&apos;.</item><item>      ENDIF.</item><item/><item>      ls_storagelocationdatax-plant = &apos;6301&apos;.</item><item>      ls_storagelocationdatax-stge_loc = ls_storagelocationdata-stge_loc</item><item/><item>      ls_valuationdata-val_area = &apos;6301&apos;.</item><item>      IF ( is_data_mat-matnr(1) = &apos;5&apos; ).</item><item>        ls_valuationdata-val_class = &apos;MP02&apos;.</item><item>      ELSEIF ( is_data_mat-matnr(1) = &apos;8&apos; ).</item><item>        ls_valuationdata-val_class = &apos;MP03&apos;.</item><item>      ENDIF.</item><item>      ls_valuationdata-qty_struct  = abap_true.</item><item>      ls_valuationdata-orig_mat    = abap_true.</item><item>      ls_valuationdata-moving_pr   = &apos;0.01&apos;.  &quot;DP-07_10_2016</item><item>      ls_valuationdata-price_unit  = &apos;1&apos;.  &quot;SB. 20170124</item><item/><item>      ls_valuationdatax-val_area   = &apos;6301&apos;.</item><item>      ls_valuationdatax-val_class  = abap_true.</item><item>      ls_valuationdatax-qty_struct = abap_true.</item><item>      ls_valuationdatax-orig_mat   = abap_true.</item><item>      ls_plantdatax-profit_ctr     = abap_true.</item><item>      ls_valuationdatax-moving_pr  = abap_true. &quot;DP-07_10_2016</item><item>      ls_valuationdatax-price_unit = abap_true. &quot;DP-07_10_2016</item><item/><item>      CALL FUNCTION &apos;BAPI_MATERIAL_SAVEDATA&apos;</item><item>        EXPORTING</item><item>          headdata             = ls_headdata</item><item>          clientdata           = ls_clientdata</item><item>          clientdatax          = ls_clientdatax</item><item>          plantdata            = ls_plantdata</item><item>          plantdatax           = ls_plantdatax</item><item>*         FORECASTPARAMETERS   =</item><item>*         FORECASTPARAMETERSX  =</item><item>*         PLANNINGDATA         =</item><item>*         PLANNINGDATAX        =</item><item>          storagelocationdata  = ls_storagelocationdata</item><item>          storagelocationdatax = ls_storagelocationdatax</item><item>          valuationdata        = ls_valuationdata</item><item>          valuationdatax       = ls_valuationdatax</item><item>*         WAREHOUSENUMBERDATA  =</item><item>*         WAREHOUSENUMBERDATAX =</item><item>          salesdata            = ls_salesdata</item><item>          salesdatax           = ls_salesdatax</item><item>*         STORAGETYPEDATA      =</item><item>*         STORAGETYPEDATAX     =</item><item>*         FLAG_ONLINE          = &apos; &apos;</item><item>*         FLAG_CAD_CALL        = &apos; &apos;</item><item>*         NO_DEQUEUE           = &apos; &apos;</item><item>*         NO_ROLLBACK_WORK     = &apos; &apos;</item><item>        IMPORTING</item><item>          return               = ls_return</item><item>        TABLES</item><item>          materialdescription  = lt_materialdescription</item><item>*         UNITSOFMEASURE       =</item><item>*         UNITSOFMEASUREX      =</item><item>*         INTERNATIONALARTNOS  =</item><item>          materiallongtext     = lt_materiallongtext</item><item>          taxclassifications   = lt_taxclassifications</item><item>          returnmessages       = lt_returnmessages</item><item>*         PRTDATA              =</item><item>*         PRTDATAX             =</item><item>*         EXTENSIONIN          =</item><item>*         EXTENSIONINX         =</item><item>*         NFMCHARGEWEIGHTS     =</item><item>*         NFMCHARGEWEIGHTSX    =</item><item>*         NFMSTRUCTURALWEIGHTS =</item><item>*         NFMSTRUCTURALWEIGHTSX       =</item><item>        .</item><item/><item>      IF ( ls_return-type = &apos;E&apos; OR ls_return-type = &apos;A&apos; ).</item><item>        ls_pdm_am-anamat_flg = &apos;E&apos;.</item><item>        ls_pdm_am-anamat_log = ls_return-message.</item><item>      ENDIF.</item><item/><item>      APPEND ls_pdm_am TO ct_pdm_am.</item><item>*    READ TABLE ct_pdm_am INTO DATA(ls_pdm_am_tmp) WITH KEY matnr = is_d</item><item>*    IF ( sy-subrc = 0 ).</item><item>*      ls_pdm_am_tmp-anamat_flg = ls_pdm_am-anamat_flg.</item><item>*      ls_pdm_am_tmp-anamat_flg = ls_pdm_am-anamat_flg.</item><item>*      MODIFY ct_pdm_am FROM ls_pdm_am_tmp INDEX sy-tabix.</item><item>*      RETURN.</item><item>*    ELSE.</item><item>*      APPEND ls_pdm_am TO ct_pdm_am.</item><item>*      RETURN.</item><item>*    ENDIF.</item><item>* identifico ZMM_MATERIAL-ZZMATERIAL dalla descrizione che si trova</item><item>* nel filler15</item><item>      DATA: va_zz_material_t TYPE zmm_material_t.</item><item>      IF is_data_mat-filler15 IS NOT INITIAL.</item><item>        SELECT SINGLE * FROM zmm_material_t INTO va_zz_material_t</item><item>           WHERE zzmaterial_descr = is_data_mat-filler15</item><item>             AND spras = &apos;I&apos;.</item><item>        IF sy-subrc = 0.</item><item>        ELSE.</item><item>          CLEAR va_zz_material_t-zzmaterial_descr.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>      UPDATE mara SET zzcartiglio = is_data_mat-cartiglio</item><item>                      zzcaratt    = is_data_mat-charact</item><item>                      zzmaterial  = va_zz_material_t-zzmaterial</item><item>                  WHERE matnr = is_data_mat-matnr.</item><item>      COMMIT WORK.</item><item>*DP-23_01_2017 Inizio</item><item>      IF ( ls_return-type NE &apos;E&apos; AND ls_return-type NE &apos;A&apos; ).</item><item>        CALL FUNCTION &apos;ZPP_SET_FLAG_MRP&apos;</item><item>          EXPORTING</item><item>            i_matnr = is_data_mat-matnr</item><item>            i_berid = &apos;6301&apos;</item><item>            i_werks = &apos;6301&apos;</item><item>            i_gsaen = &apos;X&apos;</item><item>* IMPORTING</item><item>*           E_ESITO =</item><item>*           E_DESCR_ESITO       =</item><item>          .</item><item>        COMMIT WORK.</item><item>      ENDIF.</item><item>*DP-23_01_2017 Fine</item><item/><item>    ELSE.</item><item>      ls_pdm_am-anamat_flg = &apos;N&apos;.</item><item>      ls_pdm_am-anamat_log = &apos;Da non creare (vedi parametrizzazione)&apos;(02</item><item>    ENDIF.</item><item>    READ TABLE ct_pdm_am INTO DATA(ls_pdm_am_tmp) WITH KEY matnr = is_da</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_am_tmp-anamat_flg = ls_pdm_am-anamat_flg.</item><item>      ls_pdm_am_tmp-anamat_log = ls_pdm_am-anamat_log.</item><item>      MODIFY ct_pdm_am FROM ls_pdm_am_tmp INDEX sy-tabix.</item><item>      RETURN.</item><item>    ELSE.</item><item>      APPEND ls_pdm_am TO ct_pdm_am.</item><item>      RETURN.</item><item>    ENDIF.</item><item/><item>  ENDMETHOD.</item></CREATE_MATERIAL><GET_SAP_UM><item>  METHOD get_sap_um.</item><item>    CLEAR: ev_meins.</item><item>    SELECT SINGLE um_sap INTO ev_meins FROM ztmm_um WHERE um_pdm = iv_pd</item><item>    IF ( sy-subrc &lt;&gt; 0 ).</item><item>      zcl_bc_conversion_exit=&gt;conversion_input( EXPORTING iv_field = iv_</item><item>                                                CHANGING  cv_field = ev_</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></GET_SAP_UM><CREATE_BOM><item>  METHOD create_bom.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_marc       TYPE marc,</item><item>          ls_mast       TYPE mast,</item><item>          lv_err        TYPE bool,</item><item>          w_err_p       TYPE bool,</item><item>          ls_ztbc000004 TYPE ztbc000004,</item><item>          lo_lock       TYPE REF TO zcl_bc_lock_handler.</item><item/><item>    DATA: lv_change_no     TYPE csap_mbom-aennr,</item><item>          lv_change_del_no TYPE csap_mbom-aennr,</item><item>          lv_padre         TYPE matnr.</item><item/><item>    rv_ret = 8.</item><item>*    zcl_bc_conversion_exit=&gt;conversion_output( EXPORTING iv_field  = is</item><item>*                                               CHANGING cv_field = lv_p</item><item>    lv_padre = is_data_bom-padre.</item><item/><item>    DATA: lv_garg TYPE seqg3-garg,</item><item>          lv_str  TYPE string.</item><item>    CLEAR: lv_garg.</item><item>*    CONCATENATE sy-mandt lv_padre &apos;6301&apos; &apos;2&apos; INTO lv_garg RESPECTING BL</item><item>    CONCATENATE sy-mandt lv_padre INTO lv_garg RESPECTING BLANKS.</item><item>    lv_str = lv_garg.</item><item/><item>    lo_lock = NEW #( iv_gname = &apos;MARA&apos;</item><item>                     iv_time = 10</item><item>                     iv_garg = lv_str ).</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    REFRESH: gt_ztpp_cicli.</item><item/><item>    CLEAR: ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    w_err_p = abap_false.</item><item>    lv_err = abap_false.</item><item>    IF ( ls_ztbc000004-crea_bom = abap_true ).</item><item>      DATA: ls_marc_2 TYPE marc.</item><item>*      break kosmedev.</item><item/><item>      IF ( get_marc( EXPORTING iv_matnr = is_data_bom-padre IMPORTING es</item><item>        LOOP AT it_data_bom INTO DATA(ls_data_bom_tmp) WHERE padre    =</item><item>                                                       AND   tipofile =</item><item>                                                       AND   data     =</item><item>                                                       AND   ora      =</item><item>          IF ( get_marc( EXPORTING iv_matnr = ls_data_bom_tmp-componente</item><item>            ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>*            ls_pdm_bom-bom_log = &apos;Codice componente non aperto su divis</item><item>            lv_err = abap_true.</item><item>            EXIT.</item><item>          ENDIF.</item><item>        ENDLOOP.</item><item/><item>        IF ( lv_err = abap_false ).</item><item>          lv_change_no = &apos;BOM-&apos; &amp;&amp; is_data_bom-data. &quot;sy-datum.</item><item>          IF ( get_diba( EXPORTING iv_matnr = is_data_bom-padre IMPORTIN</item><item>          ELSE.   &quot;non esiste la diba</item><item>            DATA: ls_stko  TYPE stko_api01,</item><item>                  lv_datum TYPE datum,</item><item>                  lv_datuv TYPE csap_mbom-datuv.</item><item>            lv_change_no = &apos;BOM-&apos; &amp;&amp; is_data_bom-data. &quot;sy-datum.</item><item>*        WRITE sy-datum TO lv_datuv.</item><item>            lv_datum = is_data_bom-data.</item><item>            WRITE lv_datum TO lv_datuv.</item><item>            CLEAR: ls_stko.</item><item>            IF ( lo_lock-&gt;wait_lock( ) = 0 ).</item><item>              CALL FUNCTION &apos;CSAP_MAT_BOM_CREATE&apos;</item><item>                EXPORTING</item><item>                  material           = ls_marc-matnr</item><item>                  plant              = ls_marc-werks</item><item>                  bom_usage          = &apos;2&apos;</item><item>                  valid_from         = lv_datuv   &quot;sy-datum</item><item>                  change_no          = lv_change_no</item><item>                  i_stko             = ls_stko</item><item>                  fl_commit_and_wait = &apos;X&apos;</item><item>                  fl_default_values  = &apos;X&apos;</item><item>                EXCEPTIONS</item><item>                  error              = 1</item><item>                  OTHERS             = 2.</item><item>              IF sy-subrc &lt;&gt; 0.</item><item>                ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>                ls_pdm_bom-bom_log = &apos;Errore creazione testata diba&apos;(014</item><item>                lv_err = abap_true.</item><item>              ENDIF.</item><item>            ELSE.</item><item>              ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>              ls_pdm_bom-bom_log = &apos;Materiale lockato&apos;(020).</item><item>              lv_err = abap_true.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ELSE.   &quot;materiale non aperto su divisione</item><item>        ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>        ls_pdm_bom-bom_log = &apos;Codice padre non aperto su divisione&apos;(013)</item><item>        w_err_p = abap_true.</item><item>        lv_err = abap_true.</item><item>      ENDIF.</item><item/><item>      IF ( lv_err = abap_false ).</item><item>        rv_ret = 0.</item><item>        DATA: lv_esito       TYPE zdbc_esito,</item><item>              lv_descr_esito TYPE zdbc_descr_esito.</item><item>        lv_change_del_no = &apos;DEL-&apos; &amp;&amp; is_data_bom-data. &quot;sy-datum.</item><item>        &quot; cancellare tutti i componenti</item><item>        IF ( lo_lock-&gt;wait_lock( ) = 0 ).</item><item>          CALL FUNCTION &apos;ZPP_PDM_CS02_DEL_COMP&apos;</item><item>            EXPORTING</item><item>              iv_matnr      = ls_marc-matnr</item><item>              iv_werks      = ls_marc-werks</item><item>*             IV_STLAN      = &apos;2&apos;</item><item>              iv_aennr      = lv_change_no</item><item>              iv_aennr_del  = lv_change_del_no</item><item>*             IT_STPO       =</item><item>            IMPORTING</item><item>              e_esito       = lv_esito</item><item>              e_descr_esito = lv_descr_esito</item><item>*             ET_MESSTAB    =</item><item>            .</item><item>          IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>            ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-bom_log = lv_descr_esito.</item><item>            lv_err = abap_true.</item><item>          ELSE.</item><item>            &quot; crea componenti</item><item>            get_material( EXPORTING iv_matnr = ls_marc-matnr IMPORTING e</item><item>            CLEAR: ls_stko.</item><item>*        lv_change_no = &apos;BOM-&apos; &amp;&amp; sy-datum.</item><item>            lv_change_no = &apos;BOM-&apos; &amp;&amp; is_data_bom-data.</item><item>            CLEAR: ls_stko.</item><item>            ls_stko-base_quan = 1.</item><item>*        ls_stko-base_unit = ls_mara-meins.</item><item>            DATA: lt_stpo    TYPE t_stpo_api03,</item><item>                  ls_stpo    TYPE stpo_api03,</item><item>                  lv_item_no TYPE n LENGTH 4,</item><item>                  lv_menge   TYPE menge_d..</item><item>            REFRESH: lt_stpo.</item><item>            lv_item_no = 10.</item><item>*        LOOP AT it_data_bom INTO DATA(ls_data_bom) WHERE padre = is_dat</item><item>            LOOP AT it_data_bom INTO DATA(ls_data_bom) WHERE padre    =</item><item>                                                       AND   tipofile =</item><item>                                                       AND   data  = is_</item><item>                                                       AND   ora   = is_</item><item>              CLEAR: ls_stpo.</item><item>              ls_stpo-item_no    = lv_item_no.</item><item>              ls_stpo-item_categ = &apos;L&apos;.</item><item>              ls_stpo-component  = ls_data_bom-componente.</item><item>              lv_menge = ls_data_bom-menge.</item><item>              WRITE lv_menge TO ls_stpo-comp_qty.</item><item>              ls_stpo-sortstring = ls_data_bom-rev_figlio.</item><item>              APPEND ls_stpo TO lt_stpo.</item><item>              ADD 10 TO lv_item_no.</item><item>            ENDLOOP.</item><item>            IF ( lo_lock-&gt;wait_lock( ) = 0 ).</item><item>              CALL FUNCTION &apos;CSAP_MAT_BOM_MAINTAIN&apos;</item><item>                EXPORTING</item><item>                  material           = ls_marc-matnr</item><item>                  plant              = ls_marc-werks</item><item>                  bom_usage          = &apos;2&apos;</item><item>*                 ALTERNATIVE        =</item><item>*                 VALID_FROM         =</item><item>                  change_no          = lv_change_no</item><item>*                 REVISION_LEVEL     =</item><item>                  i_stko             = ls_stko</item><item>*                 FL_NO_CHANGE_DOC   = &apos; &apos;</item><item>                  fl_commit_and_wait = &apos;X&apos;</item><item>*                 FL_CAD             = &apos; &apos;</item><item>*                 FL_BOM_CREATE      = &apos; &apos;</item><item>*                 FL_NEW_ITEM        = &apos; &apos;</item><item>*                 FL_COMPLETE        = &apos; &apos;</item><item>                  fl_default_values  = &apos;X&apos;</item><item>*                 FL_IDENTIFY_BY_GUID       = &apos; &apos;</item><item>*                 FL_RECURSIVE       = &apos; &apos;</item><item>*       IMPORTING</item><item>*                 FL_WARNING         =</item><item>*                 O_STKO             =</item><item>                TABLES</item><item>                  t_stpo             = lt_stpo</item><item>*                 T_DEP_DATA         =</item><item>*                 T_DEP_DESCR        =</item><item>*                 T_DEP_ORDER        =</item><item>*                 T_DEP_SOURCE       =</item><item>*                 T_DEP_DOC          =</item><item>*                 T_DOC_LINK         =</item><item>*                 T_DMU_TMX          =</item><item>*                 T_LTX_LINE         =</item><item>*                 T_STPU             =</item><item>*                 T_SGT_BOMC         =</item><item>                EXCEPTIONS</item><item>                  error              = 1</item><item>                  OTHERS             = 2.</item><item>              IF sy-subrc &lt;&gt; 0.</item><item>                ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>                MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH s</item><item>                lv_err = abap_true.</item><item>              ENDIF.</item><item>            ELSE.</item><item>              ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>              ls_pdm_bom-bom_log = &apos;Materiale lockato&apos;(020).</item><item>              lv_err = abap_true.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ELSE.</item><item>          ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>          ls_pdm_bom-bom_log = &apos;Materiale lockato&apos;(020).</item><item>          lv_err = abap_true.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>    ELSE.</item><item>      rv_ret = 0.</item><item>      ls_pdm_bom-bom_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-bom_log = &apos;Da non creare (vedi parametrizzazione)&apos;(020)</item><item>    ENDIF.</item><item/><item>*    READ TABLE ct_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>*                                                             componente</item><item>    READ TABLE ct_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             componente</item><item>                                                             tipofile</item><item>                                                             data</item><item>                                                             ora</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-bom_flg = ls_pdm_bom-bom_flg.</item><item>      ls_pdm_bom_tmp-bom_flg = ls_pdm_bom-bom_flg.</item><item>      MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>    ENDIF.</item><item>*    LOOP AT it_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom</item><item>*                                         AND   componente &lt;&gt; ls_pdm_bom</item><item>    LOOP AT it_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>*      READ TABLE ct_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = l</item><item>*                                                         componente = l</item><item>      READ TABLE ct_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-bom_flg = ls_pdm_bom-bom_flg.</item><item>        ls_pdm_bom_tmp-bom_log = ls_pdm_bom-bom_log.</item><item>*DP-12_10_2016 Inizio</item><item>        IF ( get_marc( EXPORTING iv_matnr = ls_data_bom-componente IMPOR</item><item>          CLEAR ls_pdm_bom-bom_log.</item><item>          ls_pdm_bom_tmp-bom_flg = &apos;E&apos;.</item><item>          ls_pdm_bom_tmp-bom_log = &apos;Codice componente non aperto su divi</item><item>        ENDIF.</item><item>*DP-12_10_2016 Fine</item><item>        MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio = ls_data_bom-rev_figlio.</item><item>*DP-12_10_2016 Inizio</item><item>        IF w_err_p EQ abap_false.</item><item>          CLEAR ls_pdm_bom-bom_log.</item><item>          IF ( get_marc( EXPORTING iv_matnr = ls_data_bom-componente IMP</item><item>            ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-bom_log = &apos;Codice componente non aperto su divisi</item><item>          ENDIF.</item><item>        ENDIF.</item><item>*DP-12_10_2016 Fine</item><item>        APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_BOM><PROCESS_FILES><item>  METHOD process_files.</item><item>    DATA: lo_pdm_file TYPE REF TO zcl_pp_pdm_file,</item><item>          lv_padre    TYPE matnr,</item><item>          lv_datum    TYPE datum,</item><item>          lv_uzeit    TYPE uzeit,</item><item>          lt_data_bom TYPE ty_t_data_bom,</item><item>          lv_number   TYPE zpp_pdm_numero,</item><item>          lv_time     TYPE uzeit.</item><item/><item>    REFRESH: gt_pdm_bom, gt_pdm_am.</item><item/><item>    lo_pdm_file = NEW #( iv_werks = &apos;6301&apos; ).</item><item>    IF ( gs_sel-p_dfill = abap_true AND gs_sel-p_err = abap_false ).</item><item>      lo_pdm_file-&gt;backup( iv_type = zcl_pp_pdm_file=&gt;c_bom_pdm_to_sap_f</item><item>    ENDIF.</item><item>    IF ( gs_sel-p_dlabl = abap_true AND gs_sel-p_err = abap_false ).</item><item>      lo_pdm_file-&gt;backup( iv_type = zcl_pp_pdm_file=&gt;c_bom_pdm_to_sap_l</item><item>    ENDIF.</item><item>    IF ( gs_sel-p_dpack = abap_true AND gs_sel-p_err = abap_false ).</item><item>      lo_pdm_file-&gt;backup( iv_type = zcl_pp_pdm_file=&gt;c_bom_pdm_to_sap_p</item><item>    ENDIF.</item><item>    IF ( gs_sel-p_mfill = abap_true AND gs_sel-p_err = abap_false ).</item><item>      lo_pdm_file-&gt;backup( iv_type = zcl_pp_pdm_file=&gt;c_mat_pdm_to_sap_f</item><item>    ENDIF.</item><item>    IF ( gs_sel-p_mlabl = abap_true AND gs_sel-p_err = abap_false ).</item><item>      lo_pdm_file-&gt;backup( iv_type = zcl_pp_pdm_file=&gt;c_mat_pdm_to_sap_l</item><item>    ENDIF.</item><item>    IF ( gs_sel-p_mpack = abap_true AND gs_sel-p_err = abap_false ).</item><item>      lo_pdm_file-&gt;backup( iv_type = zcl_pp_pdm_file=&gt;c_mat_pdm_to_sap_p</item><item>    ENDIF.</item><item/><item>    IF ( gs_sel-p_err = abap_false AND</item><item>         ( gs_sel-p_dfill = abap_true OR gs_sel-p_dlabl = abap_true OR g</item><item>           gs_sel-p_mfill = abap_true OR gs_sel-p_mlabl = abap_true OR g</item><item>      get_next_number( EXPORTING iv_range_no = &apos;01&apos; iv_object = &apos;ZRANGE_</item><item>                       CHANGING cv_number = lv_number ).</item><item>    ENDIF.</item><item/><item>    DATA: lv_ret    TYPE i,</item><item>          lv_count  TYPE i,</item><item>          lv_commit TYPE abap_bool,</item><item>          lv_index  TYPE i.</item><item>*    lv_time = sy-uzeit.</item><item>    CLEAR: lv_padre, lv_datum.</item><item/><item>    LOOP AT gt_data_bom INTO DATA(ls_data_bom).</item><item>      lv_index = sy-tabix.</item><item>      lv_commit = abap_false.</item><item>      IF ( lv_padre &lt;&gt; ls_data_bom-padre OR</item><item>           lv_datum &lt;&gt; ls_data_bom-data OR</item><item>           lv_uzeit &lt;&gt; ls_data_bom-ora ).</item><item>        REFRESH: lt_data_bom. &quot;, gt_pdm_bom.</item><item>*        lv_ret = create_bom( EXPORTING is_data_bom = ls_data_bom it_dat</item><item>*                             CHANGING ct_pdm_bom = gt_pdm_bom ).</item><item>        lv_ret = create_bom2( is_data_bom = ls_data_bom ).</item><item>        IF ( lv_padre &lt;&gt; ls_data_bom-padre ).  &quot;OR</item><item>          lv_time = sy-uzeit.</item><item>          IF ( lv_ret = 0 ).</item><item>*            create_cicli_lav( EXPORTING is_data_bom = ls_data_bom it_da</item><item>*                              CHANGING ct_pdm_bom = gt_pdm_bom ).</item><item>            create_cicli_lav2( is_data_bom = ls_data_bom ).</item><item>*            create_rev_level_bom( EXPORTING is_data_bom = ls_data_bom i</item><item>*                                  CHANGING ct_pdm_bom = gt_pdm_bom ).</item><item>            create_rev_level_bom2( is_data_bom = ls_data_bom ).</item><item>*            create_prod_ver( EXPORTING is_data_bom = ls_data_bom it_dat</item><item>*                             CHANGING ct_pdm_bom = gt_pdm_bom ).</item><item>            create_prod_ver2( is_data_bom = ls_data_bom ).</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>*      write_log2( EXPORTING iv_number = lv_number iv_time = lv_time iv_</item><item>*                  CHANGING ct_pdm_data = gt_pdm_bom ).</item><item>      APPEND ls_data_bom TO lt_data_bom.   &quot;&lt;------</item><item>*      AT END OF padre.</item><item>*        lv_commit = abap_true.</item><item>*      ENDAT.</item><item>*      write_log3( iv_number = lv_number iv_time = lv_time iv_index = lv</item><item/><item>*     Scrive log per tipo file - Tab: ZPP_PDM_AM e ZPP_PDM_BOM</item><item>      write_log4( EXPORTING iv_number = lv_number iv_time = lv_time</item><item>                  CHANGING ct_pdm_data = gt_pdm_bom ).</item><item/><item>      lv_padre = ls_data_bom-padre.</item><item>      lv_datum = ls_data_bom-data.</item><item>      lv_uzeit = ls_data_bom-ora.</item><item>    ENDLOOP.   &quot;LOOP AT gt_data_bom INTO DATA(ls_data_bom).</item><item/><item>    LOOP AT gt_data_mat INTO DATA(ls_data_mat).</item><item>      create_material( EXPORTING is_data_mat = ls_data_mat CHANGING ct_p</item><item>      create_revision_level( EXPORTING is_data_mat = ls_data_mat CHANGIN</item><item>      insert_draw_paths( EXPORTING is_data_mat = ls_data_mat CHANGING ct</item><item>      lv_time = sy-uzeit.</item><item/><item>*     Scrive log per tipo file - Tab: ZPP_PDM_AM e ZPP_PDM_BOM</item><item>      write_log2( EXPORTING iv_number = lv_number iv_time = lv_time it_d</item><item>                  CHANGING ct_pdm_data = gt_pdm_am ).</item><item>    ENDLOOP.   &quot;LOOP AT gt_data_mat INTO DATA(ls_data_mat).</item><item/><item>    IF ( sy-batch = abap_false ).</item><item>      DATA: lv_title TYPE lvc_title.</item><item>      CASE abap_true.</item><item>        WHEN gs_sel-p_mat.</item><item>          lv_title = &apos;Log trasmissione Anagrafica Materiale&apos;(017).</item><item>        WHEN gs_sel-p_bom.</item><item>          lv_title = &apos;Log trasmissione BOM&apos;(016).</item><item>      ENDCASE.</item><item>      alv_show( EXPORTING iv_type = c_alv_view_log</item><item>                          iv_title = lv_title</item><item>                CHANGING  ct_data = gt_pdm_am ).</item><item>      alv_show( EXPORTING iv_type = c_alv_view_log</item><item>                          iv_title = lv_title</item><item>                CHANGING  ct_data = gt_pdm_bom ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></PROCESS_FILES><READ_FILES><item>  METHOD read_files.</item><item>    DATA: lref_sel      TYPE REF TO data,</item><item>          lv_meins      TYPE meins,</item><item>          lv_language   TYPE sy-langu,</item><item>          lv_ps_psp_pnr TYPE vbap-ps_psp_pnr,</item><item>          lv_disgr      TYPE marc-disgr,</item><item>          lv_ersda      TYPE mara-ersda.</item><item/><item>    REFRESH: ct_data_bom, ct_data_mat.</item><item/><item>    lref_sel = get_selections( ).</item><item>    DATA: ls_data TYPE ty_s_data_mat.</item><item>    lv_language = get_language( ).</item><item/><item>    DATA: lo_pdm_file TYPE REF TO zcl_pp_pdm_file,</item><item>          lt_file     TYPE zcl_pp_pdm_file=&gt;ty_t_file.</item><item/><item>    lo_pdm_file = NEW #( iv_werks = &apos;6301&apos; ).</item><item>    IF ( NOT is_sel-p_mat IS INITIAL ).          &quot;P_MAT Ricezione anagra</item><item>      IF ( NOT is_sel-p_mfill IS INITIAL ).      &quot;P_MFILL Anagrafica mat</item><item>        lo_pdm_file-&gt;read( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_mat_pd</item><item>                           CHANGING  ct_data = lt_file ).</item><item>*       Nota: Il valore di ritono del METHOD read. value( EV_RET ) non è</item><item>        set_sap_table( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_mat_pdm_to</item><item>                                 it_file = lt_file</item><item>                       CHANGING  ct_data = ct_data_mat_fill ).</item><item>      ENDIF.</item><item>      IF ( NOT is_sel-p_mlabl IS INITIAL ).      &quot;P_MLABL Anagrafica mat</item><item>        lo_pdm_file-&gt;read( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_mat_pd</item><item>                           CHANGING  ct_data = lt_file ).</item><item>        set_sap_table( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_mat_pdm_to</item><item>                                 it_file = lt_file</item><item>                       CHANGING ct_data = ct_data_mat_labe ).</item><item>      ENDIF.</item><item>      IF ( NOT is_sel-p_mpack IS INITIAL ).      &quot;P_MPACK Anagrafica mat</item><item>        lo_pdm_file-&gt;read( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_mat_pd</item><item>                           CHANGING  ct_data = lt_file ).</item><item>        set_sap_table( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_mat_pdm_to</item><item>                                 it_file = lt_file</item><item>                       CHANGING  ct_data = ct_data_mat_pack ).</item><item>      ENDIF.</item><item>    ELSEIF ( NOT is_sel-p_bom IS INITIAL ).      &quot;P_BOM Ricezione distin</item><item>      IF ( NOT is_sel-p_dfill IS INITIAL ).      &quot;P_DFILL Distinte base</item><item>        lo_pdm_file-&gt;read( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_bom_pd</item><item>                           CHANGING  ct_data = lt_file ).</item><item>        set_sap_table( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_bom_pdm_to</item><item>                                 it_file = lt_file</item><item>                       CHANGING  ct_data = ct_data_bom_fill ).</item><item>      ENDIF.</item><item>      IF ( NOT is_sel-p_dlabl IS INITIAL ).      &quot;P_DLABL Distinte base</item><item>        lo_pdm_file-&gt;read( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_bom_pd</item><item>                           CHANGING  ct_data = lt_file ).</item><item>        set_sap_table( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_bom_pdm_to</item><item>                                 it_file = lt_file</item><item>                       CHANGING  ct_data = ct_data_bom_labe ).</item><item>      ENDIF.</item><item>      IF ( NOT is_sel-p_dpack IS INITIAL ).      &quot;P_DPACK Distinte base</item><item>        lo_pdm_file-&gt;read( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_bom_pd</item><item>                           CHANGING  ct_data = lt_file ).</item><item>        set_sap_table( EXPORTING iv_type = zcl_pp_pdm_file=&gt;c_bom_pdm_to</item><item>                                 it_file = lt_file</item><item>                       CHANGING  ct_data = ct_data_bom_pack ).</item><item>      ENDIF.</item><item>    ENDIF.</item><item/><item>    APPEND LINES OF ct_data_bom_fill TO ct_data_bom.</item><item>    APPEND LINES OF ct_data_bom_labe TO ct_data_bom.</item><item>    APPEND LINES OF ct_data_bom_pack TO ct_data_bom.</item><item>*    APPEND LINES OF ct_data_mat_fill TO ct_data_mat. &quot;DP-07_10_2016</item><item>*    APPEND LINES OF ct_data_mat_labe TO ct_data_mat. &quot;DP-07_10_2016</item><item>*    APPEND LINES OF ct_data_mat_pack TO ct_data_mat. &quot;DP-07_10_2016</item><item/><item>*DP-07_10_2016 Inizio</item><item>    DATA: ln_data_mat_fill TYPE ty_s_data_mat.</item><item>    DATA: ln_data_mat_labe TYPE ty_s_data_mat.</item><item>    DATA: ln_data_mat_pack TYPE ty_s_data_mat.</item><item/><item>    IF is_sel-s_matnr1[] IS NOT INITIAL.</item><item/><item>      LOOP AT ct_data_mat_fill INTO ln_data_mat_fill</item><item>                              WHERE matnr IN is_sel-s_matnr1.</item><item>        APPEND ln_data_mat_fill TO ct_data_mat.</item><item>      ENDLOOP.</item><item>      LOOP AT ct_data_mat_labe INTO ln_data_mat_labe</item><item>                              WHERE matnr IN is_sel-s_matnr1.</item><item>        APPEND ln_data_mat_labe TO ct_data_mat.</item><item>      ENDLOOP.</item><item>      LOOP AT ct_data_mat_pack INTO ln_data_mat_pack</item><item>                              WHERE matnr IN is_sel-s_matnr1.</item><item>        APPEND ln_data_mat_pack TO ct_data_mat.</item><item>      ENDLOOP.</item><item/><item>    ELSE.</item><item/><item>      APPEND LINES OF ct_data_mat_fill TO ct_data_mat.</item><item>      APPEND LINES OF ct_data_mat_labe TO ct_data_mat.</item><item>      APPEND LINES OF ct_data_mat_pack TO ct_data_mat.</item><item/><item>    ENDIF.</item><item>*DP-07_10_2016 Fine</item><item/><item>  ENDMETHOD.</item></READ_FILES><READ_ERR_RECORDS><item>  METHOD read_err_records.</item><item>    DATA: lref_sel      TYPE REF TO data,</item><item>          lv_meins      TYPE meins,</item><item>          lv_language   TYPE sy-langu,</item><item>          lv_ps_psp_pnr TYPE vbap-ps_psp_pnr,</item><item>          lv_disgr      TYPE marc-disgr,</item><item>          lv_ersda      TYPE mara-ersda,</item><item>          ls_data_mat   TYPE ty_s_data_mat,</item><item>          ls_data_bom   TYPE ty_s_data_bom,</item><item>          lv_tabix      TYPE i,</item><item>          lv_tabix_2    TYPE i.</item><item/><item>    DATA: lt_zpp_pdm_bom   TYPE TABLE OF zpp_pdm_bom,</item><item>          ls_zpp_pdm_bom   TYPE zpp_pdm_bom,</item><item>          ls_zpp_pdm_bom_2 TYPE zpp_pdm_bom.</item><item/><item>    REFRESH: lt_zpp_pdm_bom.</item><item/><item>    REFRESH: ct_data_bom, ct_data_mat, ct_data_mat_fill, ct_data_mat_lab</item><item>             ct_data_bom_fill, ct_data_bom_labe, ct_data_bom_pack.</item><item/><item>    DATA: ls_data TYPE ty_s_data_mat.</item><item>    lv_language = get_language( ).</item><item/><item>    IF ( NOT is_sel-p_mat IS INITIAL ).</item><item>      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE ct_data_</item><item>               WHERE datum        IN is_sel-s_datum</item><item>               AND   uzeit        IN is_sel-s_uzeit</item><item>               AND   matnr        IN is_sel-s_matnr</item><item>               AND   tipofile     =  zcl_pp_pdm_file=&gt;c_mat_pdm_to_sap_f</item><item>               AND ( anamat_flg   = &apos;E&apos; OR</item><item>                     revlv_flg    = &apos;E&apos; OR</item><item>                     pathdis_flg  = &apos;E&apos; )</item><item>               AND   complete_flg = space</item><item>                     ORDER BY matnr ASCENDING counter DESCENDING.</item><item>      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE ct_data_</item><item>               WHERE datum        IN is_sel-s_datum</item><item>               AND   uzeit        IN is_sel-s_uzeit</item><item>               AND   matnr        IN is_sel-s_matnr</item><item>               AND   tipofile     =  zcl_pp_pdm_file=&gt;c_mat_pdm_to_sap_l</item><item>               AND ( anamat_flg   = &apos;E&apos; OR</item><item>                     revlv_flg    = &apos;E&apos; OR</item><item>                     pathdis_flg  = &apos;E&apos; )</item><item>               AND   complete_flg = space</item><item>                     ORDER BY matnr ASCENDING counter DESCENDING.</item><item>      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE ct_data_</item><item>               WHERE datum        IN is_sel-s_datum</item><item>               AND   uzeit        IN is_sel-s_uzeit</item><item>               AND   matnr        IN is_sel-s_matnr</item><item>               AND   tipofile     =  zcl_pp_pdm_file=&gt;c_mat_pdm_to_sap_p</item><item>               AND ( anamat_flg   = &apos;E&apos; OR</item><item>                     revlv_flg    = &apos;E&apos; OR</item><item>                     pathdis_flg  = &apos;E&apos; )</item><item>               AND   complete_flg = space</item><item>                     ORDER BY matnr ASCENDING counter DESCENDING.</item><item>    ELSEIF ( NOT is_sel-p_bom IS INITIAL ).</item><item>*      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE ct_data</item><item>      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE lt_zpp_p</item><item>               WHERE datum        IN is_sel-s_datum</item><item>               AND   uzeit        IN is_sel-s_uzeit</item><item>               AND   padre        IN is_sel-s_matnr</item><item>               AND   tipofile      =  zcl_pp_pdm_file=&gt;c_bom_pdm_to_sap_</item><item>               AND ( bom_flg       = &apos;E&apos; OR</item><item>                     cicli_flg     = &apos;E&apos; OR</item><item>                     revpadre_flg  = &apos;E&apos; OR</item><item>                     revfiglio_flg = &apos;E&apos; OR</item><item>                     verprod_flg   = &apos;E&apos; )</item><item>               AND   complete_flg  = space</item><item>*                     ORDER BY padre ASCENDING counter DESCENDING.</item><item>                     ORDER BY padre ASCENDING datum DESCENDING uzeit DES</item><item>*      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE ct_data</item><item>      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE lt_zpp_p</item><item>               WHERE datum        IN is_sel-s_datum</item><item>               AND   uzeit        IN is_sel-s_uzeit</item><item>               AND   padre        IN is_sel-s_matnr</item><item>               AND   tipofile      =  zcl_pp_pdm_file=&gt;c_bom_pdm_to_sap_</item><item>               AND ( bom_flg       = &apos;E&apos; OR</item><item>                     cicli_flg     = &apos;E&apos; OR</item><item>                     revpadre_flg  = &apos;E&apos; OR</item><item>                     revfiglio_flg = &apos;E&apos; OR</item><item>                     verprod_flg   = &apos;E&apos; )</item><item>               AND   complete_flg  = space</item><item>*                     ORDER BY padre ASCENDING counter DESCENDING.</item><item>                     ORDER BY padre ASCENDING datum DESCENDING uzeit DES</item><item>*      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE ct_data</item><item>      SELECT DISTINCT * APPENDING CORRESPONDING FIELDS OF TABLE lt_zpp_p</item><item>               WHERE datum        IN is_sel-s_datum</item><item>               AND   uzeit        IN is_sel-s_uzeit</item><item>               AND   padre        IN is_sel-s_matnr</item><item>               AND   tipofile      =  zcl_pp_pdm_file=&gt;c_bom_pdm_to_sap_</item><item>               AND ( bom_flg       = &apos;E&apos; OR</item><item>                     cicli_flg     = &apos;E&apos; OR</item><item>                     revpadre_flg  = &apos;E&apos; OR</item><item>                     revfiglio_flg = &apos;E&apos; OR</item><item>                     verprod_flg   = &apos;E&apos; )</item><item>               AND   complete_flg  = space</item><item>*                     ORDER BY padre ASCENDING counter DESCENDING.</item><item>                     ORDER BY padre ASCENDING datum DESCENDING uzeit DES</item><item>    ENDIF.</item><item/><item>    LOOP AT ct_data_mat INTO ls_data_mat.</item><item>      lv_tabix = sy-tabix + 1.</item><item>      LOOP AT ct_data_mat INTO DATA(ls_data_mat_2) FROM lv_tabix WHERE m</item><item>        lv_tabix_2 = sy-tabix.</item><item>        DELETE ct_data_mat INDEX lv_tabix_2.</item><item>        CONTINUE.</item><item>      ENDLOOP.</item><item>    ENDLOOP.</item><item/><item>    LOOP AT lt_zpp_pdm_bom INTO ls_zpp_pdm_bom.</item><item>      DELETE lt_zpp_pdm_bom WHERE ( datum &lt;&gt; ls_zpp_pdm_bom-datum OR</item><item>                                    uzeit &lt;&gt; ls_zpp_pdm_bom-uzeit )</item><item>                            AND   padre  = ls_zpp_pdm_bom-padre.</item><item>      CONTINUE.</item><item>    ENDLOOP.</item><item>    LOOP AT lt_zpp_pdm_bom INTO ls_zpp_pdm_bom.</item><item>      MOVE-CORRESPONDING ls_zpp_pdm_bom TO ls_data_bom.</item><item>      APPEND ls_data_bom TO ct_data_bom.</item><item>    ENDLOOP.</item><item/><item>  ENDMETHOD.</item></READ_ERR_RECORDS><CREATE_CICLI_LAV><item>  METHOD create_cicli_lav.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_ztpp_cicli TYPE ztpp_cicli,</item><item>          ls_ztbc000004 TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    CLEAR: ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    IF ( ls_ztbc000004-crea_cicli = abap_true ).</item><item>      ls_ztpp_cicli = get_par_cicli_ref( iv_matnr = is_data_bom-padre ).</item><item>      IF ( ls_ztpp_cicli IS INITIAL ).</item><item>        ls_pdm_bom-cicli_flg = &apos;Y&apos;.</item><item>        ls_pdm_bom-cicli_log = &apos;Nessuna parametrizzazione per materiale&apos;</item><item>      ELSE.</item><item>        DATA: ls_mapl TYPE mapl.</item><item>        SELECT SINGLE * INTO CORRESPONDING FIELDS OF ls_mapl FROM mapl W</item><item>                                                                       A</item><item>                                                                       A</item><item>        IF ( sy-subrc = 0 ).</item><item>          ls_pdm_bom-cicli_flg = &apos;Y&apos;.</item><item>          ls_pdm_bom-cicli_log = &apos;Ciclo già esistente&apos;(019).</item><item>        ELSE.</item><item>          DATA: lv_esito       TYPE zdbc_esito,</item><item>                lv_descr_esito TYPE zdbc_descr_esito.</item><item>          CALL FUNCTION &apos;ZPP_CREA_CICLO&apos;</item><item>            EXPORTING</item><item>              iv_matnr      = is_data_bom-padre</item><item>*             IV_WERKS      = &apos;6301&apos;</item><item>              iv_plnnr      = ls_ztpp_cicli-plnnr</item><item>*             IV_STATU      = &apos;4&apos;</item><item>            IMPORTING</item><item>              e_esito       = lv_esito</item><item>              e_descr_esito = lv_descr_esito</item><item>*             ET_MESSTAB    =</item><item>            .</item><item/><item>          IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>            ls_pdm_bom-cicli_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-cicli_log = lv_descr_esito.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>    ELSE.</item><item>      ls_pdm_bom-cicli_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-cicli_log = &apos;Da non creare (vedi parametrizzazione)&apos;(02</item><item>    ENDIF.</item><item>    READ TABLE ct_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             data</item><item>                                                             ora</item><item>                                                             componente</item><item>                                                             tipofile</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-cicli_flg = ls_pdm_bom-cicli_flg.</item><item>      ls_pdm_bom_tmp-cicli_log = ls_pdm_bom-cicli_log.</item><item>      MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>    ENDIF.</item><item>    DATA: ls_data_bom TYPE ty_s_data_bom.</item><item>    LOOP AT it_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>      READ TABLE ct_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-cicli_flg = ls_pdm_bom-cicli_flg.</item><item>        ls_pdm_bom_tmp-cicli_log = ls_pdm_bom-cicli_log.</item><item>        MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio  = ls_data_bom-rev_figlio.</item><item>        APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_CICLI_LAV><CREATE_PROD_VER><item>  METHOD create_prod_ver.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_ztbc000004 TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    CLEAR: ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    IF ( ls_ztbc000004-crea_prod_ver = abap_true ).</item><item/><item>      DATA: lr_matnr TYPE RANGE OF matnr,</item><item>            ls_matnr LIKE LINE OF lr_matnr.</item><item>      REFRESH: lr_matnr.</item><item>      CLEAR: ls_matnr.</item><item>      ls_matnr-sign = &apos;I&apos;.</item><item>      ls_matnr-option = &apos;EQ&apos;.</item><item>      ls_matnr-low = is_data_bom-padre.</item><item>      APPEND ls_matnr TO lr_matnr.</item><item/><item>      SUBMIT zpp_load_vers_prod WITH s_matnr  IN lr_matnr[]</item><item>                                WITH p_werks  =  &apos;6301&apos;</item><item>                                WITH p_test   =  space</item><item>                                WITH p_submit = &apos;X&apos;</item><item>                                AND RETURN.</item><item/><item>    ELSE.</item><item>      ls_pdm_bom-verprod_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-verprod_log = &apos;Da non creare (vedi parametrizzazione)&apos;(</item><item>    ENDIF.</item><item>    DATA: ls_data_bom TYPE ty_s_data_bom.</item><item>    READ TABLE ct_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             data</item><item>                                                             ora</item><item>                                                             componente</item><item>                                                             tipofile</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-verprod_flg = ls_pdm_bom-verprod_flg.</item><item>      ls_pdm_bom_tmp-verprod_log = ls_pdm_bom-verprod_log.</item><item>      MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>    ENDIF.</item><item>    LOOP AT it_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>      READ TABLE ct_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-verprod_flg = ls_pdm_bom-verprod_flg.</item><item>        ls_pdm_bom_tmp-verprod_log = ls_pdm_bom-verprod_log.</item><item>        MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio = ls_data_bom-rev_figlio.</item><item>        APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_PROD_VER><CREATE_REVISION_LEVEL><item>  METHOD create_revision_level.</item><item>    DATA: ls_pdm_am     TYPE ty_s_pdm_am,</item><item>          ls_ztbc000004 TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_mat-tipofile ).</item><item/><item>    CLEAR ls_pdm_am.</item><item>    MOVE-CORRESPONDING is_data_mat TO ls_pdm_am.</item><item/><item>    IF ( ls_ztbc000004-crea_rev_bom = abap_true ).</item><item>      IF ( get_material( iv_matnr = is_data_mat-matnr ) = 0 ).</item><item>        IF ( get_revision_level( iv_matnr = is_data_mat-matnr iv_revlv =</item><item>          DATA: lv_ecm         TYPE zdpp_ecm,</item><item>                lv_esito       TYPE zdbc_esito,</item><item>                lv_descr_esito TYPE zdbc_descr_esito.</item><item>          lv_ecm = &apos;MAT-&apos; &amp;&amp; sy-datum.</item><item>          CALL FUNCTION &apos;ZPP_CREA_REV&apos;</item><item>            EXPORTING</item><item>              i_matnr       = is_data_mat-matnr</item><item>              i_revlv       = is_data_mat-revisione</item><item>              i_ecm         = lv_ecm</item><item>            IMPORTING</item><item>              e_esito       = lv_esito</item><item>              e_descr_esito = lv_descr_esito.</item><item>          IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>            ls_pdm_am-revlv_flg = &apos;E&apos;.</item><item>            ls_pdm_am-revlv_log =  lv_descr_esito.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ELSE.   &quot;il materiale non esiste</item><item>        ls_pdm_am-revlv_flg = &apos;E&apos;.</item><item>        ls_pdm_am-revlv_log = &apos;Livello non creato per mancanza codice ma</item><item>      ENDIF.</item><item>*    TRY.</item><item>*        DATA(ls_pdm_am_tmp) = ct_pdm_am[ matnr = is_data_mat-matnr ].</item><item>*        ls_pdm_am_tmp-revlv_flg = ls_pdm_am-revlv_flg.</item><item>*        ls_pdm_am_tmp-revlv_log = ls_pdm_am-revlv_log.</item><item>*        MODIFY ct_pdm_am FROM ls_pdm_am_tmp INDEX sy-tabix.</item><item>*      CATCH cx_sy_itab_line_not_found.</item><item>*        APPEND ls_pdm_am TO ct_pdm_am.</item><item>*        RETURN.</item><item>*    ENDTRY.</item><item>    ELSE.</item><item>      ls_pdm_am-revlv_flg = &apos;N&apos;.</item><item>      ls_pdm_am-revlv_log = &apos;Da non creare (vedi parametrizzazione)&apos;(020</item><item>    ENDIF.</item><item>    READ TABLE ct_pdm_am INTO DATA(ls_pdm_am_tmp) WITH KEY matnr = is_da</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_am_tmp-revlv_flg = ls_pdm_am-revlv_flg.</item><item>      ls_pdm_am_tmp-revlv_log = ls_pdm_am-revlv_log.</item><item>      MODIFY ct_pdm_am FROM ls_pdm_am_tmp INDEX sy-tabix.</item><item>      RETURN.</item><item>    ELSE.</item><item>      APPEND ls_pdm_am TO ct_pdm_am.</item><item>      RETURN.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CREATE_REVISION_LEVEL><GET_DIBA><item>  METHOD get_diba.</item><item>    CLEAR: es_mast.</item><item>    SELECT SINGLE * INTO CORRESPONDING FIELDS OF es_mast FROM mast WHERE</item><item>                                                                   AND</item><item>                                                                   AND</item><item>    ev_ret = sy-subrc.</item><item>  ENDMETHOD.</item></GET_DIBA><GET_MARC><item>  METHOD get_marc.</item><item>    CLEAR: es_marc.</item><item>    SELECT SINGLE * INTO CORRESPONDING FIELDS OF es_marc FROM marc WHERE</item><item>                                                                   AND</item><item>    ev_ret = sy-subrc.</item><item>  ENDMETHOD.</item></GET_MARC><GET_MATERIAL><item>  METHOD get_material.</item><item>    CLEAR: es_mara.</item><item>    SELECT SINGLE * INTO CORRESPONDING FIELDS OF es_mara FROM mara WHERE</item><item>    ev_ret = sy-subrc.</item><item>  ENDMETHOD.</item></GET_MATERIAL><GET_REVISION_LEVEL><item>  METHOD get_revision_level.</item><item>    CLEAR: es_aeoi.</item><item>    SELECT SINGLE * INTO CORRESPONDING FIELDS OF es_aeoi FROM aeoi WHERE</item><item>                                                                   AND</item><item>                                                                   AND</item><item>    ev_ret = sy-subrc.</item><item>  ENDMETHOD.</item></GET_REVISION_LEVEL><INSERT_DRAW_PATHS><item>  METHOD insert_draw_paths.</item><item>    DATA: lt_disegno     TYPE zpp_file_disegno_t,</item><item>          ls_disegno     TYPE zpp_file_disegno,</item><item>          lt_disegno_sap TYPE zpp_file_disegno_t,</item><item>          ls_disegno_sap TYPE zpp_file_disegno,</item><item>          lv_esito       TYPE zdbc_esito,</item><item>          lv_descr_esito TYPE zdbc_descr_esito,</item><item>          ls_pdm_am      TYPE ty_s_pdm_am,</item><item>          lv_doknr       TYPE draw-doknr,</item><item>          lv_dokvr       TYPE draw-dokvr,</item><item>          lt_ztbc000003  TYPE TABLE OF ztbc000003,</item><item>          ls_ztbc000003  TYPE ztbc000003,</item><item>          lv_path_pdm    TYPE string,</item><item>          lv_file_pdm    TYPE string,</item><item>          lv_file        TYPE string,</item><item>          lv_file_lan    TYPE string,</item><item>          ls_ztbc000004  TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_mat-tipofile ).</item><item/><item>    CHECK is_data_mat-path IS NOT INITIAL.</item><item/><item>    REFRESH: lt_disegno.</item><item/><item>    lv_doknr = is_data_mat-matnr.</item><item>    zcl_bc_conversion_exit=&gt;conversion_input( EXPORTING iv_field = is_da</item><item>                                              CHANGING cv_field = lv_dok</item><item>    lv_dokvr = is_data_mat-revisione.</item><item/><item>    CLEAR: ls_pdm_am.</item><item/><item>    DATA: lt_split_path TYPE TABLE OF string,</item><item>          ls_split_path TYPE string,</item><item>          lt_split_file TYPE TABLE OF string,</item><item>          ls_split_file TYPE string,</item><item>          lv_tabix      TYPE i,</item><item>          lv_count      TYPE i.</item><item/><item>* estrae nome file pdm senza estensione</item><item>    DATA: lv_path_sep TYPE string.</item><item>    CLEAR lv_path_sep.</item><item>    IF ( is_data_mat-path CA &apos;\&apos; ).</item><item>      lv_path_sep = &apos;\&apos;.</item><item>    ELSEIF is_data_mat-path CA &apos;/&apos;.</item><item>      lv_path_sep = &apos;/&apos;.</item><item>    ENDIF.</item><item/><item>    REFRESH: lt_split_path, lt_split_file.</item><item>*    SPLIT is_data_mat-path AT &apos;\&apos; INTO TABLE lt_split_path.</item><item>    SPLIT is_data_mat-path AT lv_path_sep INTO TABLE lt_split_path.</item><item>    CLEAR: lv_path_pdm.</item><item>    lv_count = 0.</item><item>    LOOP AT lt_split_path INTO ls_split_path.</item><item>      ADD 1 TO lv_count.</item><item>    ENDLOOP.</item><item>    IF ( sy-subrc = 0 ).</item><item>      DELETE lt_split_path INDEX lv_count.</item><item>    ENDIF.</item><item>    SPLIT ls_split_path AT &apos;.&apos; INTO TABLE lt_split_file.</item><item>    CLEAR ls_split_file.</item><item>    READ TABLE lt_split_file INTO ls_split_file INDEX 1.</item><item>    lv_file_pdm = ls_split_file.</item><item>    CLEAR lv_path_pdm.</item><item>    LOOP AT lt_split_path INTO ls_split_path.</item><item>      lv_path_pdm = lv_path_pdm &amp;&amp; ls_split_path &amp;&amp; &apos;\&apos;.</item><item>    ENDLOOP.</item><item/><item>    SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_ztbc000003 FROM ztbc0</item><item>             WHERE path = lv_path_pdm.</item><item>*      break-point.</item><item>    LOOP AT lt_ztbc000003 INTO ls_ztbc000003.</item><item>      &quot; TIF</item><item>      lv_file = ls_ztbc000003-path_tif &amp;&amp; lv_file_pdm &amp;&amp; &apos;.tif&apos;.</item><item>      lv_file_lan = ls_ztbc000003-path_tif_lan &amp;&amp; lv_file_pdm &amp;&amp; &apos;.tif&apos;.</item><item>      IF ( NOT ls_ztbc000003-path_tif IS INITIAL ).</item><item>        IF ( check_file( EXPORTING iv_file = lv_file ) = 0 ).</item><item>          &quot; append tabella lt_disegno</item><item>          CLEAR: ls_disegno.</item><item>          ls_disegno-wsapplication = &apos;TIF&apos;.</item><item>*         ls_disegno-docfile = lv_file_lan.  &quot;S.B. 20170203</item><item>          ls_disegno-docfile = lv_file.      &quot;S.B. 20170203</item><item>          ls_disegno-description = is_data_mat-orientamento.</item><item>          ls_disegno-filename = lv_file_pdm.</item><item>          APPEND ls_disegno TO lt_disegno.</item><item>        ELSE.</item><item>          ls_pdm_am-pathdis_flg = &apos;E&apos;.</item><item>          ls_pdm_am-pathdis_log = ` TIF non trovato`.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>      &quot; ZIF</item><item>      lv_file = ls_ztbc000003-path_zif &amp;&amp; lv_file_pdm &amp;&amp; &apos;.tif&apos;.</item><item>      lv_file_lan = ls_ztbc000003-path_zif_lan &amp;&amp; lv_file_pdm &amp;&amp; &apos;.tif&apos;.</item><item>      IF ( NOT ls_ztbc000003-path_zif IS INITIAL ).</item><item>        IF ( check_file( EXPORTING iv_file = lv_file ) = 0 ).</item><item>          &quot; append tabella lt_disegno</item><item>          CLEAR: ls_disegno.</item><item>          ls_disegno-wsapplication = &apos;ZIF&apos;.</item><item>*         ls_disegno-docfile = lv_file_lan.  &quot;S.B. 20170203</item><item>          ls_disegno-docfile = lv_file.      &quot;S.B. 20170203</item><item>          ls_disegno-description = is_data_mat-orientamento.</item><item>          ls_disegno-filename = lv_file_pdm.</item><item>          APPEND ls_disegno TO lt_disegno.</item><item>        ELSE.</item><item>          ls_pdm_am-pathdis_flg = &apos;E&apos;.</item><item>          ls_pdm_am-pathdis_log = ls_pdm_am-pathdis_log &amp;&amp; ` ZIF non tro</item><item>        ENDIF.</item><item>      ENDIF.</item><item>      &quot; DXF</item><item>      lv_file = ls_ztbc000003-path_dxf &amp;&amp; lv_file_pdm &amp;&amp; &apos;.dxf&apos;.</item><item>      lv_file_lan = ls_ztbc000003-path_dxf_lan &amp;&amp; lv_file_pdm &amp;&amp; &apos;.dxf&apos;.</item><item>      IF ( NOT ls_ztbc000003-path_dxf IS INITIAL ).</item><item>        IF ( check_file( EXPORTING iv_file = lv_file ) = 0 ).</item><item>          &quot; append tabella lt_disegno</item><item>          CLEAR: ls_disegno.</item><item>          ls_disegno-wsapplication = &apos;DXF&apos;.</item><item>*         ls_disegno-docfile = lv_file_lan.  &quot;S.B. 20170203</item><item>          ls_disegno-docfile = lv_file.      &quot;S.B. 20170203</item><item>          ls_disegno-description = is_data_mat-orientamento.</item><item>          ls_disegno-filename = lv_file_pdm.</item><item>          APPEND ls_disegno TO lt_disegno.</item><item>        ELSE.</item><item>          ls_pdm_am-pathdis_flg = &apos;E&apos;.</item><item>          ls_pdm_am-pathdis_log = ls_pdm_am-pathdis_log &amp;&amp; ` DXF non tro</item><item>        ENDIF.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item/><item>    IF ( ls_ztbc000004-crea_dis = abap_true ).</item><item>      DATA: lv_changed TYPE bool.</item><item>      CLEAR lv_changed.</item><item>      CALL FUNCTION &apos;ZPP_ESTRAI_DISEGNI&apos;</item><item>        EXPORTING</item><item>          i_doknr       = lv_doknr</item><item>*         i_dokar       = &apos;KPR&apos;</item><item>          i_dokvr       = lv_dokvr</item><item>*         i_doktl       = &apos;000&apos;</item><item>        IMPORTING</item><item>          e_esito       = lv_esito</item><item>          e_descr_esito = lv_descr_esito</item><item>          et_disegno    = lt_disegno_sap.</item><item>*      read table lt_disegno with key wsapplication = &apos;TIF&apos;</item><item>*                                     docfile       = is_data_mat-path.</item><item>*    TRY.</item><item>*        DATA(ls_disegno) = lt_disegno[ wsapplication = &apos;TIF&apos; docfile =</item><item>*      CATCH cx_sy_itab_line_not_found.</item><item>*        lt_disegno = VALUE #( ( wsapplication = &apos;TIF&apos; docfile = is_data</item><item>      IF ( lv_esito = &apos;000&apos; ).</item><item>        DATA: lv_lines_1 TYPE i,</item><item>              lv_lines_2 TYPE i.</item><item>        CLEAR: lv_lines_1, lv_lines_2.</item><item>        DESCRIBE TABLE lt_disegno LINES lv_lines_1.</item><item>        DESCRIBE TABLE lt_disegno_sap LINES lv_lines_2.</item><item>        IF ( lv_lines_1 &lt;&gt; lv_lines_2 ).</item><item>          lv_changed = abap_true.</item><item>        ENDIF.</item><item>        LOOP AT lt_disegno INTO ls_disegno.</item><item>          READ TABLE lt_disegno_sap INTO ls_disegno_sap WITH KEY wsappli</item><item>                                                                 docfile</item><item>                                                                 descrip</item><item>          IF ( sy-subrc &lt;&gt; 0 ).</item><item>            lv_changed = abap_true.</item><item>          ENDIF.</item><item>        ENDLOOP.</item><item>      ELSE.</item><item>        lv_changed = abap_true.</item><item>      ENDIF.</item><item>      IF ( lv_changed = abap_true ).</item><item>        CALL FUNCTION &apos;ZPP_GESTIONE_DISEGNI&apos;</item><item>          EXPORTING</item><item>            i_doknr       = lv_doknr</item><item>*           i_dokar       = &apos;KPR&apos;</item><item>            i_dokvr       = lv_dokvr</item><item>*           i_doktl       = &apos;000&apos;</item><item>            it_disegno    = lt_disegno</item><item>          IMPORTING</item><item>            e_esito       = lv_esito</item><item>            e_descr_esito = lv_descr_esito.</item><item>        IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>          ls_pdm_am-pathdis_flg = &apos;E&apos;.</item><item>          ls_pdm_am-pathdis_log = ls_pdm_am-pathdis_log &amp;&amp; ` / ` &amp;&amp; lv_d</item><item/><item>*        READ TABLE ct_pdm_am INTO DATA(ls_pdm_am_tmp) WITH KEY matnr =</item><item>*        IF ( sy-subrc = 0 ).</item><item>*          ls_pdm_am_tmp-pathdis_flg = ls_pdm_am-pathdis_flg.</item><item>*          ls_pdm_am_tmp-pathdis_log = ls_pdm_am-pathdis_log.</item><item>*          MODIFY ct_pdm_am FROM ls_pdm_am_tmp INDEX sy-tabix.</item><item>*          RETURN.</item><item>*        ELSE.</item><item>*          APPEND ls_pdm_am TO ct_pdm_am.</item><item>*          RETURN.</item><item>*        ENDIF.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>*    ENDTRY.</item><item>    ELSE.</item><item>      ls_pdm_am-pathdis_flg = &apos;N&apos;.</item><item>      ls_pdm_am-pathdis_log = &apos;Da non creare (vedi parametrizzazione)&apos;(0</item><item>    ENDIF.</item><item>    READ TABLE ct_pdm_am INTO DATA(ls_pdm_am_tmp) WITH KEY matnr = is_da</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_am_tmp-pathdis_flg = ls_pdm_am-pathdis_flg.</item><item>      ls_pdm_am_tmp-pathdis_log = ls_pdm_am-pathdis_log.</item><item>      MODIFY ct_pdm_am FROM ls_pdm_am_tmp INDEX sy-tabix.</item><item>      RETURN.</item><item>    ELSE.</item><item>      APPEND ls_pdm_am TO ct_pdm_am.</item><item>      RETURN.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></INSERT_DRAW_PATHS><GET_PAR_CICLI_REF><item>  METHOD get_par_cicli_ref.</item><item>    DATA: ls_mara          TYPE mara,</item><item>          lv_maktx         TYPE maktx,</item><item>          ls_par_cicli_ref TYPE ztpp_cicli,</item><item>          lr_matnr         TYPE RANGE OF matnr,</item><item>          lr_maktx         TYPE RANGE OF maktx,</item><item>          ls_matnr         LIKE LINE OF lr_matnr,</item><item>          ls_maktx         LIKE LINE OF lr_maktx.</item><item/><item>    get_material(    EXPORTING iv_matnr = iv_matnr IMPORTING es_mara = l</item><item>    CLEAR: lv_maktx.</item><item>    SELECT SINGLE maktx INTO lv_maktx FROM makt WHERE matnr = iv_matnr</item><item>                                                AND   spras = sy-langu.</item><item>    IF ( gt_ztpp_cicli[] IS INITIAL ).</item><item>      SELECT * INTO CORRESPONDING FIELDS OF TABLE gt_ztpp_cicli FROM ztp</item><item>    ENDIF.</item><item>    CLEAR: es_par_cicli_ref.</item><item>    LOOP AT gt_ztpp_cicli INTO ls_par_cicli_ref.</item><item>      REFRESH: lr_maktx, lr_matnr.</item><item>      ls_matnr-sign = &apos;I&apos;.</item><item>      ls_matnr-option = &apos;CP&apos;.</item><item>      ls_matnr-low = ls_par_cicli_ref-matnr.</item><item>      APPEND ls_matnr TO lr_matnr.</item><item>      CLEAR: ls_maktx.</item><item>      ls_maktx-sign = &apos;I&apos;.</item><item>      ls_maktx-option = &apos;CP&apos;.</item><item>      ls_maktx-low = ls_par_cicli_ref-maktx.</item><item>      APPEND ls_maktx TO lr_maktx.</item><item>      IF ( iv_matnr                      IN lr_matnr AND</item><item>*           ls_par_cicli_ref-zemmm_caratt =  ls_mara-zzcaratt AND  &quot;S.B.</item><item>*           ls_par_cicli_ref-matkl        =  ls_mara-matkl  AND    &quot;S.B.</item><item>           lv_maktx                      IN lr_maktx ).</item><item>        es_par_cicli_ref = ls_par_cicli_ref.</item><item>        EXIT.</item><item>      ENDIF.</item><item>      IF ( iv_matnr                      IN lr_matnr AND</item><item>           ls_par_cicli_ref-zemmm_caratt =  ls_mara-zzcaratt AND</item><item>           ls_par_cicli_ref-matkl        =  ls_mara-matkl  AND</item><item>           ls_par_cicli_ref-maktx        =  space ).</item><item>        es_par_cicli_ref = ls_par_cicli_ref.</item><item>        EXIT.</item><item>      ENDIF.</item><item>      IF ( iv_matnr                      IN lr_matnr AND</item><item>           ls_par_cicli_ref-zemmm_caratt =  ls_mara-zzcaratt AND</item><item>           ls_par_cicli_ref-matkl        =  space  AND</item><item>           ls_par_cicli_ref-maktx        =  space ).</item><item>        es_par_cicli_ref = ls_par_cicli_ref.</item><item>        EXIT.</item><item>      ENDIF.</item><item>      IF ( iv_matnr                      IN lr_matnr AND</item><item>           ls_par_cicli_ref-zemmm_caratt =  space AND</item><item>           ls_par_cicli_ref-matkl        =  ls_mara-matkl   AND</item><item>           ls_par_cicli_ref-maktx        =  space ).</item><item>        es_par_cicli_ref = ls_par_cicli_ref.</item><item>        EXIT.</item><item>      ENDIF.</item><item>      IF ( iv_matnr                      IN lr_matnr AND</item><item>           ls_par_cicli_ref-zemmm_caratt =  space AND</item><item>           ls_par_cicli_ref-matkl        =  space  AND</item><item>           ls_par_cicli_ref-maktx        =  space ).</item><item>        es_par_cicli_ref = ls_par_cicli_ref.</item><item>        EXIT.</item><item>      ENDIF.</item><item>    ENDLOOP..</item><item>  ENDMETHOD.</item></GET_PAR_CICLI_REF><GET_SALV><item>  METHOD get_salv.</item><item>    eo_salv = go_salv.</item><item>  ENDMETHOD.</item></GET_SALV><GET_ZTMM_EKGRP><item>  METHOD get_ztmm_ekgrp.</item><item>    DATA: lt_ztmm_ekgrp TYPE TABLE OF ztmm_ekgrp,</item><item>          lr_matnr      TYPE RANGE OF matnr,</item><item>          ls_matnr      LIKE LINE OF lr_matnr.</item><item>    REFRESH lt_ztmm_ekgrp.</item><item>    IF ( lt_ztmm_ekgrp[] IS INITIAL ).</item><item>      SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_ztmm_ekgrp FROM ztm</item><item>    ENDIF.</item><item>    CLEAR es_ztmm_ekgrp.</item><item>    LOOP AT lt_ztmm_ekgrp INTO DATA(ls_ztmm_ekgrp).</item><item>      REFRESH: lr_matnr.</item><item>      ls_matnr-sign = &apos;I&apos;.</item><item>      ls_matnr-option = &apos;CP&apos;.</item><item>      ls_matnr-low = ls_ztmm_ekgrp-matnr.</item><item>      APPEND ls_matnr TO lr_matnr.</item><item>      IF ( iv_matnr IN lr_matnr ).</item><item>        es_ztmm_ekgrp = ls_ztmm_ekgrp.</item><item>        EXIT.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>    IF ( es_ztmm_ekgrp IS INITIAL ).</item><item>      SELECT SINGLE * INTO CORRESPONDING FIELDS OF es_ztmm_ekgrp FROM zt</item><item>             WHERE matnr = space.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></GET_ZTMM_EKGRP><SET_SALV><item>  METHOD set_salv.</item><item>    go_salv = io_salv.</item><item>  ENDMETHOD.</item></SET_SALV><EXECUTE><item>  METHOD execute.</item><item>    create_selections( ).</item><item>*   Esegue acquisizione del file vincolato alla presenza dello specifico</item><item>    get_data( EXPORTING is_sel = gs_sel CHANGING ct_data_bom      = gt_d</item><item>                                                 ct_data_mat      = gt_d</item><item>    IF ( NOT sy-batch IS INITIAL ).</item><item>*     Esegue il backup dei file (IN TEXT MODE ENCODING DEFAULT) e li ela</item><item>*     Nota: Nel caso di elaborazioni on-line il metodo process_files è e</item><item>      process_files( ).</item><item>    ELSE.</item><item>      DATA: lv_title TYPE lvc_title.</item><item>      lv_title = &apos;Anagrafica Materiale&apos;(008).</item><item>      alv_show( EXPORTING iv_type = c_alv_view_data</item><item>                          iv_title = lv_title</item><item>                CHANGING  ct_data = gt_data_mat ).</item><item>      lv_title = &apos;Distinte base&apos;(009).</item><item>      alv_show( EXPORTING iv_type = c_alv_view_data</item><item>                          iv_title = lv_title</item><item>                CHANGING  ct_data = gt_data_bom ).</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></EXECUTE><CREATE_REV_LEVEL_BOM><item>  METHOD create_rev_level_bom.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_ztbc000004 TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    CLEAR ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    IF ( ls_ztbc000004-crea_rev_bom = abap_true ).</item><item>*    BREAK kosmedev.</item><item>      IF ( get_material( iv_matnr = is_data_bom-padre ) = 0 ).</item><item>        IF ( get_revision_level( iv_matnr = is_data_bom-padre iv_revlv =</item><item>          DATA: lv_ecm         TYPE zdpp_ecm,</item><item>                lv_esito       TYPE zdbc_esito,</item><item>                lv_descr_esito TYPE zdbc_descr_esito.</item><item>          lv_ecm = &apos;MAT-&apos; &amp;&amp; is_data_bom-data.  &quot;sy-datum.</item><item>          CALL FUNCTION &apos;ZPP_CREA_REV&apos;</item><item>            EXPORTING</item><item>              i_matnr       = is_data_bom-padre</item><item>              i_revlv       = is_data_bom-rev_padre</item><item>              i_ecm         = lv_ecm</item><item>            IMPORTING</item><item>              e_esito       = lv_esito</item><item>              e_descr_esito = lv_descr_esito.</item><item>          IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>            ls_pdm_bom-revpadre_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-revpadre_log =  lv_descr_esito.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ELSE.   &quot;il materiale non esiste</item><item>        ls_pdm_bom-revpadre_flg = &apos;E&apos;.</item><item>        ls_pdm_bom-revpadre_log = &apos;Livello non creato per mancanza codic</item><item>      ENDIF.</item><item/><item>      LOOP AT it_data_bom INTO DATA(ls_data_bom) WHERE padre = ls_pdm_bo</item><item>                                                 AND   data  = ls_pdm_bo</item><item>                                                 AND   ora   = ls_pdm_bo</item><item>                                                 AND   tipofile = ls_pdm</item><item>        IF ( get_material( iv_matnr = ls_data_bom-componente ) = 0 ).</item><item>          IF ( get_revision_level( iv_matnr = ls_data_bom-componente iv_</item><item>            lv_ecm = &apos;MAT-&apos; &amp;&amp; is_data_bom-data.  &quot;sy-datum.</item><item>            IF ls_data_bom-rev_figlio IS NOT INITIAL.</item><item>              CALL FUNCTION &apos;ZPP_CREA_REV&apos;</item><item>                EXPORTING</item><item>                  i_matnr       = ls_data_bom-componente</item><item>                  i_revlv       = ls_data_bom-rev_figlio</item><item>                  i_ecm         = lv_ecm</item><item>                IMPORTING</item><item>                  e_esito       = lv_esito</item><item>                  e_descr_esito = lv_descr_esito.</item><item>              IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>                ls_pdm_bom-revfiglio_flg = &apos;E&apos;.</item><item>                ls_pdm_bom-revfiglio_log =  lv_descr_esito.</item><item>              ENDIF.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ELSE.   &quot;il materiale non esiste</item><item>          ls_pdm_bom-revfiglio_flg = &apos;E&apos;.</item><item>          ls_pdm_bom-revfiglio_log = &apos;Livello non creato per mancanza co</item><item>        ENDIF.</item><item>      ENDLOOP.</item><item>    ELSE.</item><item>      ls_pdm_bom-revpadre_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-revpadre_log = &apos;Da non creare (vedi parametrizzazione)&apos;</item><item>      ls_pdm_bom-revfiglio_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-revfiglio_log = &apos;Da non creare (vedi parametrizzazione)</item><item>    ENDIF.</item><item/><item>    READ TABLE ct_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             data</item><item>                                                             ora</item><item>                                                             componente</item><item>                                                             tipofile</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-revpadre_flg = ls_pdm_bom-revpadre_flg.</item><item>      ls_pdm_bom_tmp-revpadre_log = ls_pdm_bom-revpadre_log.</item><item>      ls_pdm_bom_tmp-revfiglio_flg = ls_pdm_bom-revfiglio_flg.</item><item>      ls_pdm_bom_tmp-revfiglio_log = ls_pdm_bom-revfiglio_log.</item><item>      MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>    ENDIF.</item><item>*    DATA: ls_data_bom TYPE ty_s_data_bom.</item><item>    LOOP AT it_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>      READ TABLE ct_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-revpadre_flg = ls_pdm_bom-revpadre_flg.</item><item>        ls_pdm_bom_tmp-revpadre_log = ls_pdm_bom-revpadre_log.</item><item>        ls_pdm_bom_tmp-revfiglio_flg = ls_pdm_bom-revfiglio_flg.</item><item>        ls_pdm_bom_tmp-revfiglio_log = ls_pdm_bom-revfiglio_log.</item><item>        MODIFY ct_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio  = ls_data_bom-rev_figlio.</item><item>        APPEND ls_pdm_bom TO ct_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_REV_LEVEL_BOM><WRITE_LOG2><item>  METHOD write_log2.</item><item>    DATA: lo_pdm_file TYPE REF TO zcl_pp_pdm_file,</item><item>          lv_counter  TYPE zpp_counter.</item><item>    FIELD-SYMBOLS: &lt;ls_pdm_data&gt; TYPE any,</item><item>                   &lt;ls_data&gt;     TYPE any,</item><item>                   &lt;tipofile&gt;    TYPE zinter_tipofile,</item><item>                   &lt;counter&gt;     TYPE zpp_counter.</item><item>    ev_ret = 0.</item><item>    lo_pdm_file = NEW #( iv_werks = &apos;6301&apos; ).</item><item/><item>    IF ( NOT gs_sel-p_mat IS INITIAL ).</item><item>      DATA: ls_pdm_am TYPE ty_s_pdm_am,</item><item>            lt_pdm_am TYPE ty_t_pdm_am.</item><item>      REFRESH: lt_pdm_am.</item><item>      LOOP AT ct_pdm_data ASSIGNING &lt;ls_pdm_data&gt;.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE it_data ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_pdm_data&gt;-counter&apos;) TO &lt;counter&gt;.</item><item>        CHECK &lt;counter&gt; IS INITIAL.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_am           = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_am-mandt     = sy-mandt.</item><item>        ls_pdm_am-numeratore = iv_number.</item><item>        ls_pdm_am-datum     = sy-datum.</item><item>        ls_pdm_am-uzeit     = iv_time.</item><item>        ls_pdm_am-tipofile  = &lt;tipofile&gt;.</item><item>        ls_pdm_am-counter   = lv_counter.</item><item>        ls_pdm_am-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;tip</item><item>        ls_pdm_am-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tipo</item><item>        IF ( ls_pdm_am-anamat_flg &lt;&gt; &apos;E&apos; AND ls_pdm_am-pathdis_flg &lt;&gt; &apos;E</item><item>          ls_pdm_am-complete_flg = abap_true.</item><item>          UPDATE zpp_pdm_am SET complete_flg = abap_true WHERE matnr = l</item><item>        ENDIF.</item><item>        APPEND ls_pdm_am TO lt_pdm_am.</item><item>        MODIFY ct_pdm_data FROM ls_pdm_am INDEX lv_counter.</item><item>        EXIT.</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_am[] IS INITIAL ).</item><item>        INSERT zpp_pdm_am FROM TABLE lt_pdm_am.</item><item>        COMMIT WORK AND WAIT.</item><item>*        ct_pdm_data[] = lt_pdm_am[].</item><item>      ENDIF.</item><item>    ELSEIF ( NOT gs_sel-p_bom IS INITIAL ).</item><item>      DATA: ls_pdm_bom TYPE ty_s_pdm_bom,</item><item>            lt_pdm_bom TYPE ty_t_pdm_bom.</item><item>      REFRESH: lt_pdm_bom.</item><item>      LOOP AT ct_pdm_data ASSIGNING &lt;ls_pdm_data&gt;.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE it_data ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_pdm_data&gt;-counter&apos;) TO &lt;counter&gt;.</item><item>        CHECK &lt;counter&gt; IS INITIAL.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_bom = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_bom-mandt     = sy-mandt.</item><item>        ls_pdm_bom-numeratore = iv_number.</item><item>        ls_pdm_bom-datum     = sy-datum.</item><item>        ls_pdm_bom-uzeit     = iv_time.</item><item>        ls_pdm_bom-tipofile  = &lt;tipofile&gt;.</item><item>        ls_pdm_bom-counter   = lv_counter.</item><item>        ls_pdm_bom-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;ti</item><item>        ls_pdm_bom-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tip</item><item>        IF ( ls_pdm_bom-cicli_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-bom_flg &lt;&gt; &apos;E&apos; A</item><item>             ls_pdm_bom-revpadre_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-revfiglio_flg</item><item>          ls_pdm_bom-complete_flg = abap_true.</item><item>          UPDATE zpp_pdm_bom SET complete_flg = abap_true WHERE padre</item><item>        ENDIF.</item><item>        APPEND ls_pdm_bom TO lt_pdm_bom.</item><item>        MODIFY ct_pdm_data FROM ls_pdm_bom INDEX lv_counter.</item><item>        EXIT.</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_bom[] IS INITIAL ).</item><item>        INSERT zpp_pdm_bom FROM TABLE lt_pdm_bom.</item><item>        COMMIT WORK AND WAIT.</item><item>*        ct_pdm_data[] = lt_pdm_bom[].</item><item>      ENDIF.</item><item>    ENDIF.</item><item>    FREE lo_pdm_file.</item><item>  ENDMETHOD.</item></WRITE_LOG2><CHECK_FILE><item>  METHOD check_file.</item><item>    rv_ret = 4.</item><item>    OPEN DATASET iv_file FOR INPUT IN TEXT MODE ENCODING DEFAULT IGNORIN</item><item>    IF ( sy-subrc = 0 ).</item><item>      rv_ret = 0.</item><item>      CLOSE DATASET iv_file.</item><item>    ENDIF.</item><item>  ENDMETHOD.</item></CHECK_FILE><GET_CREATE_PARAM><item>  METHOD get_create_param.</item><item>    CLEAR: rs_ztbc000004.</item><item>    IF ( gt_ztbc000004[] IS INITIAL ).</item><item>      SELECT * INTO CORRESPONDING FIELDS OF TABLE gt_ztbc000004 FROM ztb</item><item>    ENDIF.</item><item>    READ TABLE gt_ztbc000004 INTO rs_ztbc000004 WITH KEY tipofile = iv_t</item><item>  ENDMETHOD.</item></GET_CREATE_PARAM><GET_NEXT_NUMBER><item>  METHOD get_next_number.</item><item>    CALL FUNCTION &apos;NUMBER_GET_NEXT&apos;</item><item>      EXPORTING</item><item>        nr_range_nr             = iv_range_no</item><item>        object                  = iv_object</item><item>*       QUANTITY                = &apos;1&apos;</item><item>*       SUBOBJECT               = &apos; &apos;</item><item>*       TOYEAR                  = &apos;0000&apos;</item><item>*       IGNORE_BUFFER           = &apos; &apos;</item><item>      IMPORTING</item><item>        number                  = cv_number</item><item>*       QUANTITY                =</item><item>*       RETURNCODE              =</item><item>      EXCEPTIONS</item><item>        interval_not_found      = 1</item><item>        number_range_not_intern = 2</item><item>        object_not_found        = 3</item><item>        quantity_is_0           = 4</item><item>        quantity_is_not_1       = 5</item><item>        interval_overflow       = 6</item><item>        buffer_overflow         = 7</item><item>        OTHERS                  = 8.</item><item>    IF sy-subrc &lt;&gt; 0.</item><item>* Implement suitable error handling here</item><item>    ENDIF.</item><item/><item>  ENDMETHOD.</item></GET_NEXT_NUMBER><CREATE_BOM2><item>  METHOD create_bom2.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_marc       TYPE marc,</item><item>          ls_mast       TYPE mast,</item><item>          lv_err        TYPE bool,</item><item>          w_err_p       TYPE bool, &quot;DP-12_10_2016</item><item>          ls_ztbc000004 TYPE ztbc000004,</item><item>          lo_lock       TYPE REF TO zcl_bc_lock_handler.</item><item/><item>    DATA: lv_change_no     TYPE csap_mbom-aennr,</item><item>          lv_change_del_no TYPE csap_mbom-aennr,</item><item>          lv_padre         TYPE matnr.</item><item/><item>    rv_ret = 8.</item><item>*    zcl_bc_conversion_exit=&gt;conversion_output( EXPORTING iv_field  = is</item><item>*                                               CHANGING cv_field = lv_p</item><item>    lv_padre = is_data_bom-padre.</item><item/><item>    DATA: lv_garg     TYPE seqg3-garg,</item><item>          lv_str      TYPE string,</item><item>          lv_complete TYPE zpp_pdm_bom-complete_flg.</item><item/><item>    CLEAR: lv_garg.</item><item>*    CONCATENATE sy-mandt lv_padre &apos;6301&apos; &apos;2&apos; INTO lv_garg RESPECTING BL</item><item>    CONCATENATE sy-mandt lv_padre INTO lv_garg RESPECTING BLANKS.</item><item>    lv_str = lv_garg.</item><item/><item>    lo_lock = NEW #( iv_gname = &apos;MARA&apos;</item><item>                     iv_time = 10</item><item>                     iv_garg = lv_str ).</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    REFRESH: gt_ztpp_cicli.</item><item/><item>    CLEAR: ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    w_err_p = abap_false. &quot;DP-12_10_2016</item><item>    lv_err = abap_false.</item><item>    IF ( ls_ztbc000004-crea_bom = abap_true ).</item><item>      DATA: ls_marc_2 TYPE marc.</item><item>*      select SINGLE complete_flg into lv_complete from zpp_pdm_bom wher</item><item>*                                                                   and</item><item>*      if ( sy-subrc = 0 ).</item><item>*      endif.</item><item>*      break kosmedev.</item><item>      IF ( get_marc( EXPORTING iv_matnr = is_data_bom-padre IMPORTING es</item><item>        LOOP AT gt_data_bom INTO DATA(ls_data_bom_tmp) WHERE padre    =</item><item>                                                       AND   tipofile =</item><item>                                                       AND   data     =</item><item>                                                       AND   ora      =</item><item>          IF ( get_marc( EXPORTING iv_matnr = ls_data_bom_tmp-componente</item><item>            ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>*            ls_pdm_bom-bom_log = &apos;Codice componente non aperto su divis</item><item>            lv_err = abap_true.</item><item>            EXIT.</item><item>          ENDIF.</item><item>        ENDLOOP.</item><item>        IF ( lv_err = abap_false ).</item><item>          lv_change_no = &apos;BOM-&apos; &amp;&amp; is_data_bom-data. &quot;sy-datum.</item><item>          IF ( get_diba( EXPORTING iv_matnr = is_data_bom-padre IMPORTIN</item><item>          ELSE.   &quot;non esiste la diba</item><item>            DATA: ls_stko  TYPE stko_api01,</item><item>                  lv_datum TYPE datum,</item><item>                  lv_datuv TYPE csap_mbom-datuv.</item><item>            lv_change_no = &apos;BOM-&apos; &amp;&amp; is_data_bom-data. &quot;sy-datum.</item><item>*        WRITE sy-datum TO lv_datuv.</item><item>            lv_datum = is_data_bom-data.</item><item>            WRITE lv_datum TO lv_datuv.</item><item>            CLEAR: ls_stko.</item><item>            IF ( lo_lock-&gt;wait_lock( ) = 0 ).</item><item>              CALL FUNCTION &apos;CSAP_MAT_BOM_CREATE&apos;</item><item>                EXPORTING</item><item>                  material           = ls_marc-matnr</item><item>                  plant              = ls_marc-werks</item><item>                  bom_usage          = &apos;2&apos;</item><item>                  valid_from         = lv_datuv   &quot;sy-datum</item><item>                  change_no          = lv_change_no</item><item>                  i_stko             = ls_stko</item><item>                  fl_commit_and_wait = &apos;X&apos;</item><item>                  fl_default_values  = &apos;X&apos;</item><item>                EXCEPTIONS</item><item>                  error              = 1</item><item>                  OTHERS             = 2.</item><item>              IF sy-subrc &lt;&gt; 0.</item><item>                ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>                ls_pdm_bom-bom_log = &apos;Errore creazione testata diba&apos;(014</item><item>                lv_err = abap_true.</item><item>              ENDIF.</item><item>            ELSE.</item><item>              ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>              ls_pdm_bom-bom_log = &apos;Materiale lockato&apos;(020).</item><item>              lv_err = abap_true.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ELSE.   &quot;materiale non aperto su divisione</item><item>        ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>        ls_pdm_bom-bom_log = &apos;Codice padre non aperto su divisione&apos;(013)</item><item>        w_err_p = abap_true.</item><item>        lv_err = abap_true.</item><item>      ENDIF.</item><item/><item>      IF ( lv_err = abap_false ).</item><item>        rv_ret = 0.</item><item>        DATA: lv_esito       TYPE zdbc_esito,</item><item>              lv_descr_esito TYPE zdbc_descr_esito.</item><item>        lv_change_del_no = &apos;DEL-&apos; &amp;&amp; is_data_bom-data. &quot;sy-datum.</item><item>        &quot; cancellare tutti i componenti</item><item>        IF ( lo_lock-&gt;wait_lock( ) = 0 ).</item><item>          CALL FUNCTION &apos;ZPP_PDM_CS02_DEL_COMP&apos;</item><item>            EXPORTING</item><item>              iv_matnr      = ls_marc-matnr</item><item>              iv_werks      = ls_marc-werks</item><item>*             IV_STLAN      = &apos;2&apos;</item><item>              iv_aennr      = lv_change_no</item><item>              iv_aennr_del  = lv_change_del_no</item><item>*             IT_STPO       =</item><item>            IMPORTING</item><item>              e_esito       = lv_esito</item><item>              e_descr_esito = lv_descr_esito</item><item>*             ET_MESSTAB    =</item><item>            .</item><item>          IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>            ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-bom_log = lv_descr_esito.</item><item>            lv_err = abap_true.</item><item>          ELSE.</item><item>            &quot; crea componenti</item><item>            get_material( EXPORTING iv_matnr = ls_marc-matnr IMPORTING e</item><item>            CLEAR: ls_stko.</item><item>*        lv_change_no = &apos;BOM-&apos; &amp;&amp; sy-datum.</item><item>            lv_change_no = &apos;BOM-&apos; &amp;&amp; is_data_bom-data.</item><item>            CLEAR: ls_stko.</item><item>            ls_stko-base_quan = 1.</item><item>*        ls_stko-base_unit = ls_mara-meins.</item><item>            DATA: lt_stpo    TYPE t_stpo_api03,</item><item>                  ls_stpo    TYPE stpo_api03,</item><item>                  lv_item_no TYPE n LENGTH 4,</item><item>                  lv_menge   TYPE menge_d..</item><item>            REFRESH: lt_stpo.</item><item>            lv_item_no = 10.</item><item>*        LOOP AT it_data_bom INTO DATA(ls_data_bom) WHERE padre = is_dat</item><item>            LOOP AT gt_data_bom INTO DATA(ls_data_bom) WHERE padre    =</item><item>                                                       AND   tipofile =</item><item>                                                       AND   data  = is_</item><item>                                                       AND   ora   = is_</item><item>              CLEAR: ls_stpo.</item><item>              ls_stpo-item_no    = lv_item_no.</item><item>              ls_stpo-item_categ = &apos;L&apos;.</item><item>              ls_stpo-component  = ls_data_bom-componente.</item><item>              lv_menge = ls_data_bom-menge.</item><item>              WRITE lv_menge TO ls_stpo-comp_qty.</item><item>              ls_stpo-sortstring = ls_data_bom-rev_figlio.</item><item>              APPEND ls_stpo TO lt_stpo.</item><item>              ADD 10 TO lv_item_no.</item><item>            ENDLOOP.</item><item>            IF ( lo_lock-&gt;wait_lock( ) = 0 ).</item><item>              CALL FUNCTION &apos;CSAP_MAT_BOM_MAINTAIN&apos;</item><item>                EXPORTING</item><item>                  material           = ls_marc-matnr</item><item>                  plant              = ls_marc-werks</item><item>                  bom_usage          = &apos;2&apos;</item><item>*                 ALTERNATIVE        =</item><item>*                 VALID_FROM         =</item><item>                  change_no          = lv_change_no</item><item>*                 REVISION_LEVEL     =</item><item>                  i_stko             = ls_stko</item><item>*                 FL_NO_CHANGE_DOC   = &apos; &apos;</item><item>                  fl_commit_and_wait = &apos;X&apos;</item><item>*                 FL_CAD             = &apos; &apos;</item><item>*                 FL_BOM_CREATE      = &apos; &apos;</item><item>*                 FL_NEW_ITEM        = &apos; &apos;</item><item>*                 FL_COMPLETE        = &apos; &apos;</item><item>                  fl_default_values  = &apos;X&apos;</item><item>*                 FL_IDENTIFY_BY_GUID       = &apos; &apos;</item><item>*                 FL_RECURSIVE       = &apos; &apos;</item><item>*       IMPORTING</item><item>*                 FL_WARNING         =</item><item>*                 O_STKO             =</item><item>                TABLES</item><item>                  t_stpo             = lt_stpo</item><item>*                 T_DEP_DATA         =</item><item>*                 T_DEP_DESCR        =</item><item>*                 T_DEP_ORDER        =</item><item>*                 T_DEP_SOURCE       =</item><item>*                 T_DEP_DOC          =</item><item>*                 T_DOC_LINK         =</item><item>*                 T_DMU_TMX          =</item><item>*                 T_LTX_LINE         =</item><item>*                 T_STPU             =</item><item>*                 T_SGT_BOMC         =</item><item>                EXCEPTIONS</item><item>                  error              = 1</item><item>                  OTHERS             = 2.</item><item>              IF sy-subrc &lt;&gt; 0.</item><item>                ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>                MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH s</item><item>                lv_err = abap_true.</item><item>              ENDIF.</item><item>            ELSE.</item><item>              ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>              ls_pdm_bom-bom_log = &apos;Materiale lockato&apos;(020).</item><item>              lv_err = abap_true.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ELSE.</item><item>          ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>          ls_pdm_bom-bom_log = &apos;Materiale lockato&apos;(020).</item><item>          lv_err = abap_true.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>    ELSE.</item><item>      rv_ret = 0.</item><item>      w_err_p = abap_true. &quot;DP-12_10_2016</item><item>      ls_pdm_bom-bom_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-bom_log = &apos;Da non creare (vedi parametrizzazione)&apos;(020)</item><item>    ENDIF.</item><item/><item>*    READ TABLE ct_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>*                                                             componente</item><item>    READ TABLE gt_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             componente</item><item>                                                             tipofile</item><item>                                                             data</item><item>                                                             ora</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-bom_flg = ls_pdm_bom-bom_flg.</item><item>      ls_pdm_bom_tmp-bom_flg = ls_pdm_bom-bom_flg.</item><item>      MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>    ENDIF.</item><item>*    LOOP AT it_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom</item><item>*                                         AND   componente &lt;&gt; ls_pdm_bom</item><item>    LOOP AT gt_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>*      READ TABLE ct_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = l</item><item>*                                                         componente = l</item><item>      READ TABLE gt_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-bom_flg = ls_pdm_bom-bom_flg.</item><item>        ls_pdm_bom_tmp-bom_log = ls_pdm_bom-bom_log.</item><item>*DP-12_10_2016 Inizio</item><item>        IF ( get_marc( EXPORTING iv_matnr = ls_data_bom-componente IMPOR</item><item>          CLEAR ls_pdm_bom-bom_log.</item><item>          ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>          ls_pdm_bom-bom_log = &apos;Codice componente non aperto su division</item><item>        ENDIF.</item><item>*DP-12_10_2016 Fine</item><item>        MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio = ls_data_bom-rev_figlio.</item><item>*DP-12_10_2016 Inizio</item><item>        IF w_err_p EQ abap_false. &quot;DP-12_10_2016.</item><item>          CLEAR ls_pdm_bom-bom_log.</item><item>          IF ( get_marc( EXPORTING iv_matnr = ls_data_bom-componente IMP</item><item>            ls_pdm_bom-bom_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-bom_log = &apos;Codice componente non aperto su divisi</item><item>          ENDIF.</item><item>        ENDIF.</item><item>*DP-12_10_2016 Fine</item><item>        APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_BOM2><CREATE_CICLI_LAV2><item>  METHOD create_cicli_lav2.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_ztpp_cicli TYPE ztpp_cicli,</item><item>          ls_ztbc000004 TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    CLEAR: ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    IF ( ls_ztbc000004-crea_cicli = abap_true ).</item><item>      ls_ztpp_cicli = get_par_cicli_ref( iv_matnr = is_data_bom-padre ).</item><item>      IF ( ls_ztpp_cicli IS INITIAL ).</item><item>        ls_pdm_bom-cicli_flg = &apos;Y&apos;.</item><item>        ls_pdm_bom-cicli_log = &apos;Nessuna parametrizzazione per materiale&apos;</item><item>      ELSE.</item><item>        DATA: ls_mapl TYPE mapl.</item><item>        SELECT SINGLE * INTO CORRESPONDING FIELDS OF ls_mapl FROM mapl W</item><item>                                                                       A</item><item>                                                                       A</item><item>        IF ( sy-subrc = 0 ).</item><item>          ls_pdm_bom-cicli_flg = &apos;Y&apos;.</item><item>          ls_pdm_bom-cicli_log = &apos;Ciclo già esistente&apos;(019).</item><item>        ELSE.</item><item>          DATA: lv_esito       TYPE zdbc_esito,</item><item>                lv_descr_esito TYPE zdbc_descr_esito.</item><item>          CALL FUNCTION &apos;ZPP_CREA_CICLO&apos;</item><item>            EXPORTING</item><item>              iv_matnr      = is_data_bom-padre</item><item>*             IV_WERKS      = &apos;6301&apos;</item><item>              iv_plnnr      = ls_ztpp_cicli-plnnr</item><item>*             IV_STATU      = &apos;4&apos;</item><item>            IMPORTING</item><item>              e_esito       = lv_esito</item><item>              e_descr_esito = lv_descr_esito</item><item>*             ET_MESSTAB    =</item><item>            .</item><item/><item>          IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>            ls_pdm_bom-cicli_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-cicli_log = lv_descr_esito.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ENDIF.</item><item>    ELSE.</item><item>      ls_pdm_bom-cicli_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-cicli_log = &apos;Da non creare (vedi parametrizzazione)&apos;(02</item><item>    ENDIF.</item><item>    READ TABLE gt_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             data</item><item>                                                             ora</item><item>                                                             componente</item><item>                                                             tipofile</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-cicli_flg = ls_pdm_bom-cicli_flg.</item><item>      ls_pdm_bom_tmp-cicli_log = ls_pdm_bom-cicli_log.</item><item>      MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>    ENDIF.</item><item>    DATA: ls_data_bom TYPE ty_s_data_bom.</item><item>    LOOP AT gt_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>      READ TABLE gt_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-cicli_flg = ls_pdm_bom-cicli_flg.</item><item>        ls_pdm_bom_tmp-cicli_log = ls_pdm_bom-cicli_log.</item><item>        MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio  = ls_data_bom-rev_figlio.</item><item>        APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_CICLI_LAV2><CREATE_PROD_VER2><item>  METHOD create_prod_ver2.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_ztbc000004 TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    CLEAR: ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    IF ( ls_ztbc000004-crea_prod_ver = abap_true ).</item><item/><item>      DATA: lr_matnr TYPE RANGE OF matnr,</item><item>            ls_matnr LIKE LINE OF lr_matnr.</item><item>      REFRESH: lr_matnr.</item><item>      CLEAR: ls_matnr.</item><item>      ls_matnr-sign = &apos;I&apos;.</item><item>      ls_matnr-option = &apos;EQ&apos;.</item><item>      ls_matnr-low = is_data_bom-padre.</item><item>      APPEND ls_matnr TO lr_matnr.</item><item/><item>      SUBMIT zpp_load_vers_prod WITH s_matnr  IN lr_matnr[]</item><item>                                WITH p_werks  =  &apos;6301&apos;</item><item>                                WITH p_test   =  space</item><item>                                WITH p_submit = &apos;X&apos;</item><item>                                AND RETURN.</item><item/><item>    ELSE.</item><item>      ls_pdm_bom-verprod_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-verprod_log = &apos;Da non creare (vedi parametrizzazione)&apos;(</item><item>    ENDIF.</item><item>    DATA: ls_data_bom TYPE ty_s_data_bom.</item><item>    READ TABLE gt_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             data</item><item>                                                             ora</item><item>                                                             componente</item><item>                                                             tipofile</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-verprod_flg = ls_pdm_bom-verprod_flg.</item><item>      ls_pdm_bom_tmp-verprod_log = ls_pdm_bom-verprod_log.</item><item>      MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>    ENDIF.</item><item>    LOOP AT gt_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>      READ TABLE gt_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-verprod_flg = ls_pdm_bom-verprod_flg.</item><item>        ls_pdm_bom_tmp-verprod_log = ls_pdm_bom-verprod_log.</item><item>        MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio = ls_data_bom-rev_figlio.</item><item>        APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_PROD_VER2><CREATE_REV_LEVEL_BOM2><item>  METHOD create_rev_level_bom2.</item><item>    DATA: ls_pdm_bom    TYPE ty_s_pdm_bom,</item><item>          ls_ztbc000004 TYPE ztbc000004.</item><item/><item>    ls_ztbc000004 = get_create_param( iv_type = is_data_bom-tipofile ).</item><item/><item>    CLEAR ls_pdm_bom.</item><item>    MOVE-CORRESPONDING is_data_bom TO ls_pdm_bom.</item><item/><item>    IF ( ls_ztbc000004-crea_rev_bom = abap_true ).</item><item>*    BREAK kosmedev.</item><item>      IF ( get_material( iv_matnr = is_data_bom-padre ) = 0 ).</item><item>        IF ( get_revision_level( iv_matnr = is_data_bom-padre iv_revlv =</item><item>          DATA: lv_ecm         TYPE zdpp_ecm,</item><item>                lv_esito       TYPE zdbc_esito,</item><item>                lv_descr_esito TYPE zdbc_descr_esito.</item><item>          lv_ecm = &apos;MAT-&apos; &amp;&amp; is_data_bom-data.  &quot;sy-datum.</item><item>          CALL FUNCTION &apos;ZPP_CREA_REV&apos;</item><item>            EXPORTING</item><item>              i_matnr       = is_data_bom-padre</item><item>              i_revlv       = is_data_bom-rev_padre</item><item>              i_ecm         = lv_ecm</item><item>            IMPORTING</item><item>              e_esito       = lv_esito</item><item>              e_descr_esito = lv_descr_esito.</item><item>          IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>            ls_pdm_bom-revpadre_flg = &apos;E&apos;.</item><item>            ls_pdm_bom-revpadre_log =  lv_descr_esito.</item><item>          ENDIF.</item><item>        ENDIF.</item><item>      ELSE.   &quot;il materiale non esiste</item><item>        ls_pdm_bom-revpadre_flg = &apos;E&apos;.</item><item>        ls_pdm_bom-revpadre_log = &apos;Livello non creato per mancanza codic</item><item>      ENDIF.</item><item/><item>      LOOP AT gt_data_bom INTO DATA(ls_data_bom) WHERE padre = ls_pdm_bo</item><item>                                                 AND   data  = ls_pdm_bo</item><item>                                                 AND   ora   = ls_pdm_bo</item><item>                                                 AND   tipofile = ls_pdm</item><item>        IF ( get_material( iv_matnr = ls_data_bom-componente ) = 0 ).</item><item>          IF ( get_revision_level( iv_matnr = ls_data_bom-componente iv_</item><item>            lv_ecm = &apos;MAT-&apos; &amp;&amp; is_data_bom-data.  &quot;sy-datum.</item><item>            IF ls_data_bom-rev_figlio IS NOT INITIAL.</item><item>              CALL FUNCTION &apos;ZPP_CREA_REV&apos;</item><item>                EXPORTING</item><item>                  i_matnr       = ls_data_bom-componente</item><item>                  i_revlv       = ls_data_bom-rev_figlio</item><item>                  i_ecm         = lv_ecm</item><item>                IMPORTING</item><item>                  e_esito       = lv_esito</item><item>                  e_descr_esito = lv_descr_esito.</item><item>              IF ( lv_esito &lt;&gt; &apos;000&apos; ).</item><item>                ls_pdm_bom-revfiglio_flg = &apos;E&apos;.</item><item>                ls_pdm_bom-revfiglio_log =  lv_descr_esito.</item><item>              ENDIF.</item><item>            ENDIF.</item><item>          ENDIF.</item><item>        ELSE.   &quot;il materiale non esiste</item><item>          ls_pdm_bom-revfiglio_flg = &apos;E&apos;.</item><item>          ls_pdm_bom-revfiglio_log = &apos;Livello non creato per mancanza co</item><item>        ENDIF.</item><item>      ENDLOOP.</item><item>    ELSE.</item><item>      ls_pdm_bom-revpadre_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-revpadre_log = &apos;Da non creare (vedi parametrizzazione)&apos;</item><item>      ls_pdm_bom-revfiglio_flg = &apos;N&apos;.</item><item>      ls_pdm_bom-revfiglio_log = &apos;Da non creare (vedi parametrizzazione)</item><item>    ENDIF.</item><item/><item>    READ TABLE gt_pdm_bom INTO DATA(ls_pdm_bom_tmp) WITH KEY padre</item><item>                                                             data</item><item>                                                             ora</item><item>                                                             componente</item><item>                                                             tipofile</item><item>    IF ( sy-subrc = 0 ).</item><item>      ls_pdm_bom_tmp-revpadre_flg = ls_pdm_bom-revpadre_flg.</item><item>      ls_pdm_bom_tmp-revpadre_log = ls_pdm_bom-revpadre_log.</item><item>      ls_pdm_bom_tmp-revfiglio_flg = ls_pdm_bom-revfiglio_flg.</item><item>      ls_pdm_bom_tmp-revfiglio_log = ls_pdm_bom-revfiglio_log.</item><item>      MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>    ELSE.</item><item>      APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>    ENDIF.</item><item>*    DATA: ls_data_bom TYPE ty_s_data_bom.</item><item>    LOOP AT gt_data_bom INTO ls_data_bom WHERE padre      =  ls_pdm_bom-</item><item>                                         AND   data       =  ls_pdm_bom-</item><item>                                         AND   ora        =  ls_pdm_bom-</item><item>                                         AND   componente &lt;&gt; ls_pdm_bom-</item><item>                                         AND   tipofile   =  ls_pdm_bom-</item><item>      READ TABLE gt_pdm_bom INTO ls_pdm_bom_tmp WITH KEY padre      = ls</item><item>                                                         data       = ls</item><item>                                                         ora        = ls</item><item>                                                         componente = ls</item><item>                                                         tipofile   = ls</item><item>      IF ( sy-subrc = 0 ).</item><item>        ls_pdm_bom_tmp-revpadre_flg = ls_pdm_bom-revpadre_flg.</item><item>        ls_pdm_bom_tmp-revpadre_log = ls_pdm_bom-revpadre_log.</item><item>        ls_pdm_bom_tmp-revfiglio_flg = ls_pdm_bom-revfiglio_flg.</item><item>        ls_pdm_bom_tmp-revfiglio_log = ls_pdm_bom-revfiglio_log.</item><item>        MODIFY gt_pdm_bom FROM ls_pdm_bom_tmp INDEX sy-tabix.</item><item>      ELSE.</item><item>        ls_pdm_bom-componente = ls_data_bom-componente.</item><item>        ls_pdm_bom-menge      = ls_data_bom-menge.</item><item>        ls_pdm_bom-data       = ls_data_bom-data.</item><item>        ls_pdm_bom-rev_padre  = ls_data_bom-rev_padre.</item><item>        ls_pdm_bom-rev_figlio  = ls_data_bom-rev_figlio.</item><item>        APPEND ls_pdm_bom TO gt_pdm_bom.</item><item>      ENDIF.</item><item>    ENDLOOP.</item><item>  ENDMETHOD.</item></CREATE_REV_LEVEL_BOM2><WRITE_LOG3><item>  METHOD write_log3.</item><item>    DATA: lo_pdm_file TYPE REF TO zcl_pp_pdm_file,</item><item>          lv_counter  TYPE zpp_counter.</item><item>    FIELD-SYMBOLS: &lt;ls_pdm_data&gt; TYPE any,</item><item>                   &lt;ls_data&gt;     TYPE any,</item><item>                   &lt;tipofile&gt;    TYPE zinter_tipofile,</item><item>                   &lt;counter&gt;     TYPE zpp_counter.</item><item>    ev_ret = 0.</item><item>    lo_pdm_file = NEW #( iv_werks = &apos;6301&apos; ).</item><item/><item>    IF ( NOT gs_sel-p_mat IS INITIAL ).</item><item>      DATA: ls_pdm_am TYPE ty_s_pdm_am,</item><item>            lt_pdm_am TYPE ty_t_pdm_am.</item><item>      REFRESH: lt_pdm_am.</item><item>      LOOP AT gt_pdm_am  ASSIGNING &lt;ls_pdm_data&gt; FROM iv_index.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE gt_data_mat ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_pdm_data&gt;-counter&apos;) TO &lt;counter&gt;.</item><item>        CHECK &lt;counter&gt; IS INITIAL.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_am           = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_am-mandt     = sy-mandt.</item><item>        ls_pdm_am-numeratore = iv_number.</item><item>        ls_pdm_am-datum     = sy-datum.</item><item>        ls_pdm_am-uzeit     = iv_time.</item><item>        ls_pdm_am-tipofile  = &lt;tipofile&gt;.</item><item>        ls_pdm_am-counter   = lv_counter.</item><item>        ls_pdm_am-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;tip</item><item>        ls_pdm_am-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tipo</item><item>        IF ( ls_pdm_am-anamat_flg &lt;&gt; &apos;E&apos; AND ls_pdm_am-pathdis_flg &lt;&gt; &apos;E</item><item>          ls_pdm_am-complete_flg = abap_true.</item><item>          UPDATE zpp_pdm_am SET complete_flg = abap_true WHERE matnr = l</item><item>        ENDIF.</item><item>        APPEND ls_pdm_am TO lt_pdm_am.</item><item>        MODIFY gt_pdm_am FROM ls_pdm_am INDEX lv_counter.</item><item>        EXIT.</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_am[] IS INITIAL ).</item><item>        INSERT zpp_pdm_am FROM TABLE lt_pdm_am.</item><item>        COMMIT WORK AND WAIT.</item><item>*        ct_pdm_data[] = lt_pdm_am[].</item><item>      ENDIF.</item><item>    ELSEIF ( NOT gs_sel-p_bom IS INITIAL ).</item><item>      DATA: ls_pdm_bom TYPE ty_s_pdm_bom,</item><item>            lt_pdm_bom TYPE ty_t_pdm_bom.</item><item>      REFRESH: lt_pdm_bom.</item><item>      LOOP AT gt_pdm_bom  ASSIGNING &lt;ls_pdm_data&gt; FROM iv_index.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE gt_data_bom ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_pdm_data&gt;-counter&apos;) TO &lt;counter&gt;.</item><item>        CHECK &lt;counter&gt; IS INITIAL.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_bom = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_bom-mandt     = sy-mandt.</item><item>        ls_pdm_bom-numeratore = iv_number.</item><item>        ls_pdm_bom-datum     = sy-datum.</item><item>        ls_pdm_bom-uzeit     = iv_time.</item><item>        ls_pdm_bom-tipofile  = &lt;tipofile&gt;.</item><item>        ls_pdm_bom-counter   = lv_counter.</item><item>        ls_pdm_bom-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;ti</item><item>        ls_pdm_bom-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tip</item><item>        IF ( ls_pdm_bom-cicli_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-bom_flg &lt;&gt; &apos;E&apos; A</item><item>             ls_pdm_bom-revpadre_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-revfiglio_flg</item><item>          ls_pdm_bom-complete_flg = abap_true.</item><item>          UPDATE zpp_pdm_bom SET complete_flg = abap_true WHERE padre =</item><item>        ENDIF.</item><item>        APPEND ls_pdm_bom TO lt_pdm_bom.</item><item>        MODIFY gt_pdm_bom FROM ls_pdm_bom INDEX lv_counter.</item><item>        EXIT.</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_bom[] IS INITIAL ).</item><item>        INSERT zpp_pdm_bom FROM TABLE lt_pdm_bom.</item><item>        COMMIT WORK AND WAIT.</item><item>*        ct_pdm_data[] = lt_pdm_bom[].</item><item>      ENDIF.</item><item>    ENDIF.</item><item>    FREE lo_pdm_file.</item><item>  ENDMETHOD.</item></WRITE_LOG3><WRITE_LOG4><item>  METHOD write_log4.</item><item>    DATA: lo_pdm_file TYPE REF TO zcl_pp_pdm_file,</item><item>          lv_counter  TYPE zpp_counter.</item><item>    FIELD-SYMBOLS: &lt;ls_pdm_data&gt; TYPE any,</item><item>                   &lt;ls_data&gt;     TYPE any,</item><item>                   &lt;tipofile&gt;    TYPE zinter_tipofile,</item><item>                   &lt;counter&gt;     TYPE zpp_counter.</item><item>    ev_ret = 0.</item><item>    lo_pdm_file = NEW #( iv_werks = &apos;6301&apos; ).</item><item/><item>    IF ( NOT gs_sel-p_mat IS INITIAL ).</item><item>      DATA: ls_pdm_am TYPE ty_s_pdm_am,</item><item>            lt_pdm_am TYPE ty_t_pdm_am.</item><item>      REFRESH: lt_pdm_am.</item><item>      LOOP AT ct_pdm_data ASSIGNING &lt;ls_pdm_data&gt;.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE gt_data_mat ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_pdm_data&gt;-counter&apos;) TO &lt;counter&gt;.</item><item>        CHECK &lt;counter&gt; IS INITIAL.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_am           = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_am-mandt     = sy-mandt.</item><item>        ls_pdm_am-numeratore = iv_number.</item><item>        ls_pdm_am-datum     = sy-datum.</item><item>        ls_pdm_am-uzeit     = iv_time.</item><item>        ls_pdm_am-tipofile  = &lt;tipofile&gt;.</item><item>        ls_pdm_am-counter   = lv_counter.</item><item>        ls_pdm_am-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;tip</item><item>        ls_pdm_am-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tipo</item><item>        IF ( ls_pdm_am-anamat_flg &lt;&gt; &apos;E&apos; AND ls_pdm_am-pathdis_flg &lt;&gt; &apos;E</item><item>          ls_pdm_am-complete_flg = abap_true.</item><item>          UPDATE zpp_pdm_am SET complete_flg = abap_true WHERE matnr = l</item><item>        ENDIF.</item><item>        APPEND ls_pdm_am TO lt_pdm_am.</item><item>        MODIFY ct_pdm_data FROM ls_pdm_am INDEX lv_counter.</item><item>        EXIT.</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_am[] IS INITIAL ).</item><item>        INSERT zpp_pdm_am FROM TABLE lt_pdm_am.</item><item>        COMMIT WORK AND WAIT.</item><item>*        ct_pdm_data[] = lt_pdm_am[].</item><item>      ENDIF.</item><item>    ELSEIF ( NOT gs_sel-p_bom IS INITIAL ).</item><item>      DATA: ls_pdm_bom TYPE ty_s_pdm_bom,</item><item>            lt_pdm_bom TYPE ty_t_pdm_bom.</item><item>      REFRESH: lt_pdm_bom.</item><item>      LOOP AT ct_pdm_data  ASSIGNING &lt;ls_pdm_data&gt;.</item><item>        lv_counter = sy-tabix.</item><item>        READ TABLE gt_data_bom ASSIGNING &lt;ls_data&gt; INDEX lv_counter.</item><item>        ASSIGN (&apos;&lt;ls_pdm_data&gt;-counter&apos;) TO &lt;counter&gt;.</item><item>        CHECK &lt;counter&gt; IS INITIAL.</item><item>        ASSIGN (&apos;&lt;ls_data&gt;-tipofile&apos;) TO &lt;tipofile&gt;.</item><item>        ls_pdm_bom = &lt;ls_pdm_data&gt;.</item><item>        ls_pdm_bom-mandt     = sy-mandt.</item><item>        ls_pdm_bom-numeratore = iv_number.</item><item>        ls_pdm_bom-datum     = sy-datum.</item><item>        ls_pdm_bom-uzeit     = iv_time.</item><item>        ls_pdm_bom-tipofile  = &lt;tipofile&gt;.</item><item>        ls_pdm_bom-counter   = lv_counter.</item><item>        ls_pdm_bom-directory = lo_pdm_file-&gt;get_directory( iv_type = &lt;ti</item><item>        ls_pdm_bom-filename  = lo_pdm_file-&gt;get_filename( iv_type = &lt;tip</item><item>        IF ( ls_pdm_bom-cicli_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-bom_flg &lt;&gt; &apos;E&apos; A</item><item>             ls_pdm_bom-revpadre_flg &lt;&gt; &apos;E&apos; AND ls_pdm_bom-revfiglio_flg</item><item>          ls_pdm_bom-complete_flg = abap_true.</item><item>          UPDATE zpp_pdm_bom SET complete_flg = abap_true WHERE padre =</item><item>        ENDIF.</item><item>        APPEND ls_pdm_bom TO lt_pdm_bom.</item><item>        MODIFY ct_pdm_data FROM ls_pdm_bom INDEX lv_counter.</item><item>        EXIT.</item><item>      ENDLOOP.</item><item>      IF ( NOT lt_pdm_bom[] IS INITIAL ).</item><item>        INSERT zpp_pdm_bom FROM TABLE lt_pdm_bom.</item><item>        COMMIT WORK AND WAIT.</item><item>*        ct_pdm_data[] = lt_pdm_bom[].</item><item>      ENDIF.</item><item>    ENDIF.</item><item>    FREE lo_pdm_file.</item><item>  ENDMETHOD.</item></WRITE_LOG4></METHOD_SOURCE></CLASS_ROOT>