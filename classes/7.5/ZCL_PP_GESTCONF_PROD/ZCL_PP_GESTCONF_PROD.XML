<?xml version="1.0"?>
  <CLASS_ROOT>
    <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
    <VERSION>1</VERSION>
    <LANGU>I</LANGU>
    <DESCRIPT>Classe Tool acquisizione conferme di produzione</DESCRIPT>
    <UUID>AFBWoCPaHuaTsX7Dz8eMaw==</UUID>
    <CATEGORY>00</CATEGORY>
    <EXPOSURE>2</EXPOSURE>
    <STATE>1</STATE>
    <RELEASE>0</RELEASE>
    <AUTHOR>KOSMEDEV</AUTHOR>
    <CREATEDON>2016-07-19</CREATEDON>
    <CHANGEDON>2016-10-04</CHANGEDON>
    <CHGDANYON>0000-00-00</CHGDANYON>
    <CLSFINAL>X</CLSFINAL>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <R3RELEASE>750</R3RELEASE>
    <CLSBCCAT>00</CLSBCCAT>
    <DURATION_TYPE>0</DURATION_TYPE>
    <RISK_LEVEL>0</RISK_LEVEL>
    <ATTRIBUTES>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GS_SEL</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Parametri di selezione</DESCRIPT>
        <EXPOSURE>0</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>1</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <ATTDECLTYP>0</ATTDECLTYP>
        <ATTEXPVIRT>0</ATTEXPVIRT>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_S_SEL</TYPE>
        <SRCROW1>0</SRCROW1>
        <SRCCOLUMN1>0</SRCCOLUMN1>
        <SRCROW2>0</SRCROW2>
        <SRCCOLUMN2>0</SRCCOLUMN2>
        <TYPESRC_LENG>0</TYPESRC_LENG>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GO_SALV</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Classe gestione alv grid</DESCRIPT>
        <EXPOSURE>0</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>2</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <ATTDECLTYP>0</ATTDECLTYP>
        <ATTEXPVIRT>0</ATTEXPVIRT>
        <TYPTYPE>3</TYPTYPE>
        <TYPE>ZCL_BC_ALV_BASE</TYPE>
        <SRCROW1>0</SRCROW1>
        <SRCCOLUMN1>0</SRCCOLUMN1>
        <SRCROW2>0</SRCROW2>
        <SRCCOLUMN2>0</SRCCOLUMN2>
        <TYPESRC_LENG>0</TYPESRC_LENG>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GT_DATA</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>0</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>3</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <ATTDECLTYP>0</ATTDECLTYP>
        <ATTEXPVIRT>0</ATTEXPVIRT>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_T_DATA</TYPE>
        <SRCROW1>0</SRCROW1>
        <SRCCOLUMN1>0</SRCCOLUMN1>
        <SRCROW2>0</SRCROW2>
        <SRCCOLUMN2>0</SRCCOLUMN2>
        <TYPESRC_LENG>0</TYPESRC_LENG>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GT_ALV</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>0</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>4</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <ATTDECLTYP>0</ATTDECLTYP>
        <ATTEXPVIRT>0</ATTEXPVIRT>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_T_ALV</TYPE>
        <SRCROW1>0</SRCROW1>
        <SRCCOLUMN1>0</SRCCOLUMN1>
        <SRCROW2>0</SRCROW2>
        <SRCCOLUMN2>0</SRCCOLUMN2>
        <TYPESRC_LENG>0</TYPESRC_LENG>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GV_PFSTATUS2</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Stato GUI</DESCRIPT>
        <EXPOSURE>0</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>5</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-09-15</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <ATTDECLTYP>0</ATTDECLTYP>
        <ATTEXPVIRT>0</ATTEXPVIRT>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SYPFKEY</TYPE>
        <SRCROW1>0</SRCROW1>
        <SRCCOLUMN1>0</SRCCOLUMN1>
        <SRCROW2>0</SRCROW2>
        <SRCCOLUMN2>0</SRCCOLUMN2>
        <TYPESRC_LENG>0</TYPESRC_LENG>
      </item>
    </ATTRIBUTES>
    <METHODS>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONSTRUCTOR</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Costruttore</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-10-04</CHANGEDON>
        <MTDTYPE>2</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>EXECUTE</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Esegue programma</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>2</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_DATA</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Estrazione dati</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>3</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>SET_SALV</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>4</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-12-07</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_SALV</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>5</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-12-07</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>ALV_SHOW</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Mostra alv</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>6</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-12-07</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>SAVE</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Effettua conferma delle posizioni selezionate</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>7</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-09-28</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-01-04</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONFIRM</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Effettua conferma delle posizioni selezionate</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>8</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-01-04</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>DELETE</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Cancella posizioni selezionate</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>9</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-20</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-01-04</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>BATCH_CONFIRM</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Effettua conferma delle posizioni non elaborate in BATCH</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>10</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-11-23</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-01-04</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_SEL</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Recupero selezione</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>11</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-12-07</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-01-04</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_TAB</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Recupero tabella</DESCRIPT>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>12</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-12-07</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-01-04</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CREATE_SELECTIONS</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Crea parametri di selezione</DESCRIPT>
        <EXPOSURE>0</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-11-23</CHANGEDON>
        <MTDTYPE>0</MTDTYPE>
        <MTDDECLTYP>0</MTDDECLTYP>
        <BCMTDCAT>00</BCMTDCAT>
        <BCMTDSYN>0</BCMTDSYN>
      </item>
    </METHODS>
    <EVENTS>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>ON_USER_COMMAND</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>1</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-10-04</CHANGEDON>
        <EVTDECLTYP>0</EVTDECLTYP>
        <BCEVTCAT>00</BCEVTCAT>
      </item>
    </EVENTS>
    <TYPES>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>TY_S_ALV</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>1</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2017-01-04</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-06-09</CHANGEDON>
        <TYPTYPE>4</TYPTYPE>
        <SRCROW1>10</SRCROW1>
        <SRCCOLUMN1>4</SRCCOLUMN1>
        <SRCROW2>20</SRCROW2>
        <SRCCOLUMN2>20</SRCCOLUMN2>
        <TYPESRC_LENG>346</TYPESRC_LENG>
        <TYPESRC>begin of ty_s_alv. types: ligth type icon-id. include type zpp_bufconf_prod. types: cognome type pad_nachn. types: nome type pad_vorna. types: cdl type arbpl. types: dispo type afko-dispo. types: esito type zdbc_esito. types: descr_esito type zdbc_descr_esito. types: end of ty_s_alv
        </TYPESRC>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>TY_S_DATA</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>2</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2017-01-04</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-01-04</CHANGEDON>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>ZPP_BUFCONF_PROD</TYPE>
        <SRCROW1>0</SRCROW1>
        <SRCCOLUMN1>0</SRCCOLUMN1>
        <SRCROW2>0</SRCROW2>
        <SRCCOLUMN2>0</SRCCOLUMN2>
        <TYPESRC_LENG>0</TYPESRC_LENG>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>TY_T_ALV</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>3</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2017-01-04</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-06-09</CHANGEDON>
        <TYPTYPE>4</TYPTYPE>
        <SRCROW1>23</SRCROW1>
        <SRCCOLUMN1>4</SRCCOLUMN1>
        <SRCROW2>23</SRCROW2>
        <SRCCOLUMN2>34</SRCCOLUMN2>
        <TYPESRC_LENG>33</TYPESRC_LENG>
        <TYPESRC>ty_t_alv type table of ty_s_alv
        </TYPESRC>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>TY_T_DATA</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>4</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2017-01-04</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-06-09</CHANGEDON>
        <TYPTYPE>4</TYPTYPE>
        <SRCROW1>25</SRCROW1>
        <SRCCOLUMN1>4</SRCCOLUMN1>
        <SRCROW2>25</SRCROW2>
        <SRCCOLUMN2>36</SRCCOLUMN2>
        <TYPESRC_LENG>35</TYPESRC_LENG>
        <TYPESRC>ty_t_data type table of ty_s_data
        </TYPESRC>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>TY_S_SEL</CMPNAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <EXPOSURE>2</EXPOSURE>
        <STATE>1</STATE>
        <EDITORDER>5</EDITORDER>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2017-01-04</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2017-06-09</CHANGEDON>
        <TYPTYPE>4</TYPTYPE>
        <SRCROW1>27</SRCROW1>
        <SRCCOLUMN1>4</SRCCOLUMN1>
        <SRCROW2>56</SRCROW2>
        <SRCCOLUMN2>20</SRCCOLUMN2>
        <TYPESRC_LENG>2128</TYPESRC_LENG>
        <TYPESRC>begin of ty_s_sel, p_tp_n type zpp_bufconf_prod-tipo_record, &quot;Nesting manuale p_tp_w type zpp_bufconf_prod-tipo_record, &quot;Nesting Wicam p_tp_m type zpp_bufconf_prod-tipo_record, &quot;Manufacturing p_tp_a type zpp_bufconf_prod-tipo_record, &quot;Assembly p_tp_p type zpp_bufconf_prod-tipo_record, &quot;Conferme s_tprec type range of zpp_bufconf_prod-tipo_record, &quot;Tipo record s_rueck type range of zpp_bufconf_prod-rueck, &quot;Conferma s_aufnr type range of zpp_bufconf_prod-aufnr, &quot;Ordine di produzione s_projn type range of prps-posid, &quot;WBS Tonolli_G - 09/06/2017 - Ins s_vornr type range of zpp_bufconf_prod-vornr, &quot;Operazione s_auart type range of zpp_bufconf_prod-auart, &quot;Tipo ordine s_budat type range of zpp_bufconf_prod-budat, &quot;Data registrazione s_n_nest type range of zpp_bufconf_nest-n_nesting, &quot;Numero nesting s_dispo type range of afko-dispo, &quot;Responsabile MRP ordine * s_n_vorn TYPE RANGE OF zpp_bufconf_nest-n_vornr, &quot;Operazione Nesting s_event type range of zpp_bufconf_prod-event, &quot;Evento s_isdd type range of zpp_bufconf_prod-isdd, &quot;Tempo s_isdz type range of zpp_bufconf_prod-isdz, &quot;Ora s_iedd type range of zpp_bufconf_prod-iedd, &quot;Teempo s_iedz type range of zpp_bufconf_prod-iedz, &quot;Tempo s_wausw type range of zpp_bufconf_prod-wausw, &quot;Badge s_pernr type range of zpp_bufconf_prod-pernr, &quot;CID s_utente type range of zpp_bufconf_prod-utente, &quot;Utente s_data type range of zpp_bufconf_prod-data, &quot;Data creazione s_ora type range of zpp_bufconf_prod-ora, &quot;Ora creazione s_cdl type range of rc68a-arbpl, &quot;Centro di lavoro s_elab type range of zpp_bufconf_prod-elaborato, &quot;Record elaborato p_layout type disvariant-variant, &quot;Layout alv end of ty_s_sel
        </TYPESRC>
      </item>
    </TYPES>
    <PARAMETERS>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>ALV_SHOW</CMPNAME>
        <SCONAME>IV_TITLE</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>ALV Control: testo della riga titolo</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>LVC_TITLE</TYPE>
        <PAROPTIONL>X</PAROPTIONL>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>ALV_SHOW</CMPNAME>
        <SCONAME>CT_DATA</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>2</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>2</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TABLE</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>BATCH_CONFIRM</CMPNAME>
        <SCONAME>IT_ROWS</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Tabella di bufferizzazione delle conferme di produzione</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-11-23</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_T_ALV</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>BATCH_CONFIRM</CMPNAME>
        <SCONAME>W_CONTR</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Indicatore a una posizione</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>2</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2017-02-10</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>CHAR1</TYPE>
        <PAROPTIONL>X</PAROPTIONL>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONFIRM</CMPNAME>
        <SCONAME>IT_ROWS</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Righe</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SALV_T_ROW</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONFIRM</CMPNAME>
        <SCONAME>W_CONTR</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Controllo Ore</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>2</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2017-01-03</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>CHAR1</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONSTRUCTOR</CMPNAME>
        <SCONAME>IV_PROGRAM</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Programma chiamante</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>2</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SY-REPID</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONSTRUCTOR</CMPNAME>
        <SCONAME>IV_LANGUAGE</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Campo sistema ABAP: chiave lingua dell&apos;ambiente testi</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>2</MTDTYPE>
        <EDITORDER>2</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SY-LANGU</TYPE>
        <PARVALUE>SY-LANGU</PARVALUE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONSTRUCTOR</CMPNAME>
        <SCONAME>IV_PFSTATUS</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Stato GUI</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>2</MTDTYPE>
        <EDITORDER>3</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SYPFKEY</TYPE>
        <PARVALUE>SPACE</PARVALUE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CONSTRUCTOR</CMPNAME>
        <SCONAME>IV_PFSTATUS2</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Stato GUI</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>2</MTDTYPE>
        <EDITORDER>4</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-09-15</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SYPFKEY</TYPE>
        <PARVALUE>SPACE</PARVALUE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>CREATE_SELECTIONS</CMPNAME>
        <SCONAME>RS_SEL</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-12-07</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>3</PARDECLTYP>
        <PARPASSTYP>0</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_S_SEL</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>DELETE</CMPNAME>
        <SCONAME>IT_ROWS</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Righe</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-20</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SALV_T_ROW</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_DATA</CMPNAME>
        <SCONAME>IS_SEL</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_S_SEL</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_DATA</CMPNAME>
        <SCONAME>CT_DATA</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>2</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-07-19</CHANGEDON>
        <PARDECLTYP>2</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_T_DATA</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_SALV</CMPNAME>
        <SCONAME>EO_SALV</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Classe gestione alv grid</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>3</PARDECLTYP>
        <PARPASSTYP>0</PARPASSTYP>
        <TYPTYPE>3</TYPTYPE>
        <TYPE>ZCL_BC_ALV_BASE</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_SEL</CMPNAME>
        <SCONAME>RS_SEL</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-12-07</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>3</PARDECLTYP>
        <PARPASSTYP>0</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_S_SEL</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>GET_TAB</CMPNAME>
        <SCONAME>RS_DATA</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Tabella di bufferizzazione delle conferme di produzione</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-12-07</CREATEDON>
        <CHANGEDBY>KOSMEDEV</CHANGEDBY>
        <CHANGEDON>2016-12-07</CHANGEDON>
        <PARDECLTYP>2</PARDECLTYP>
        <PARPASSTYP>0</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>TY_T_DATA</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>ON_USER_COMMAND</CMPNAME>
        <SCONAME>E_SALV_FUNCTION</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>General Events</DESCRIPT>
        <CMPTYPE>2</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>1</PARDECLTYP>
        <PARPASSTYP>0</PARPASSTYP>
        <TYPTYPE>3</TYPTYPE>
        <TYPE>CL_SALV_EVENTS</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>SAVE</CMPNAME>
        <SCONAME>IT_ROWS</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Righe</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-09-28</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>1</TYPTYPE>
        <TYPE>SALV_T_ROW</TYPE>
      </item>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <CMPNAME>SET_SALV</CMPNAME>
        <SCONAME>IO_SALV</SCONAME>
        <VERSION>1</VERSION>
        <LANGU>I</LANGU>
        <DESCRIPT>Classe gestione alv grid</DESCRIPT>
        <CMPTYPE>1</CMPTYPE>
        <MTDTYPE>0</MTDTYPE>
        <EDITORDER>1</EDITORDER>
        <DISPID>0</DISPID>
        <AUTHOR>KOSMEDEV</AUTHOR>
        <CREATEDON>2016-07-19</CREATEDON>
        <CHANGEDON>0000-00-00</CHANGEDON>
        <PARDECLTYP>0</PARDECLTYP>
        <PARPASSTYP>1</PARPASSTYP>
        <TYPTYPE>3</TYPTYPE>
        <TYPE>ZCL_BC_ALV_BASE</TYPE>
      </item>
    </PARAMETERS>
    <EXCEPTIONS/>
    <IMPLEMENTINGS/>
    <IMPL_DETAILS/>
    <FRIENDSHIPS/>
    <TYPEPUSAGES/>
    <CLSDEFERRDS>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <TYPEGROUP>ZCL_PP_PDM_FILE</TYPEGROUP>
        <VERSION>1</VERSION>
        <TPUTYPE>1</TPUTYPE>
        <IMPLICIT>X</IMPLICIT>
      </item>
    </CLSDEFERRDS>
    <INTDEFERRDS/>
    <ALIASES/>
    <INHERITANCE>
      <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
      <REFCLSNAME>ZCL_BC_PROGRAM_BASE</REFCLSNAME>
      <VERSION>1</VERSION>
      <STATE>1</STATE>
      <AUTHOR>KOSMEDEV</AUTHOR>
      <CREATEDON>2016-07-19</CREATEDON>
      <CHANGEDON>2016-10-04</CHANGEDON>
    </INHERITANCE>
    <INTERFACES/>
    <REDEFINITIONS>
      <item>
        <CLSNAME>ZCL_PP_GESTCONF_PROD</CLSNAME>
        <REFCLSNAME>ZCL_BC_PROGRAM_BASE</REFCLSNAME>
        <VERSION>1</VERSION>
        <MTDNAME>MODIFY_SCREEN</MTDNAME>
        <EXPOSURE>2</EXPOSURE>
      </item>
    </REDEFINITIONS>
    <TYPE_SOURCE/>
    <LOCALS_SRC/>
    <LOCALS_DEF>
      <item>*&quot;* use this source file for any type of declarations (class</item>
      <item>*&quot;* definitions, interfaces or type declarations) you need for</item>
      <item>*&quot;* components in the private section</item>
      <item/>
    </LOCALS_DEF>
    <LOCALS_IMP>
      <item>*&quot;* use this source file for the definition and implementation of</item>
      <item>*&quot;* local helper classes, interface definitions and type</item>
      <item>*&quot;* declarations</item>
      <item/>
      <item>CLASS lcl_alv DEFINITION INHERITING FROM cl_salv_controller_table ABSTRA</item>
      <item> PUBLIC SECTION.</item>
      <item> CLASS-METHODS: get_grid</item>
      <item> IMPORTING iref_salv TYPE REF TO cl_salv_table</item>
      <item> RETURNING VALUE(ret_grid) TYPE REF TO cl_gui_alv_grid.</item>
      <item/>
      <item/>
      <item>ENDCLASS. &quot;lcl_alv DEFINITION</item>
      <item/>
      <item>CLASS lcl_alv IMPLEMENTATION.</item>
      <item> METHOD get_grid. &quot; to get the ref. of the instance cl_gui_alv_grid in</item>
      <item> DATA: r_controller TYPE REF TO cl_salv_controller_table,</item>
      <item> r_adapter TYPE REF TO cl_salv_fullscreen_adapter.</item>
      <item/>
      <item/>
      <item> TRY.</item>
      <item> r_controller ?= iref_salv-&gt;r_controller.</item>
      <item> r_adapter ?= r_controller-&gt;r_adapter.</item>
      <item> ret_grid = r_adapter-&gt;get_grid( ).</item>
      <item/>
      <item/>
      <item> CATCH cx_root.</item>
      <item> &quot; ERROR HANDLER TO DO ( if you want )</item>
      <item> ENDTRY.</item>
      <item/>
      <item/>
      <item> ENDMETHOD. &quot;get_grid</item>
      <item>ENDCLASS. &quot;lcl_alv IMPLEMENTATION</item>
      <item/>
      <item>CLASS lcl_handle_events DEFINITION.</item>
      <item> PUBLIC SECTION.</item>
      <item> METHODS:</item>
      <item> constructor IMPORTING io_sender TYPE REF TO zcl_pp_gestconf_prod</item>
      <item> io_alv TYPE REF TO cl_salv_table</item>
      <item> io_sel TYPE REF TO cl_salv_selections,</item>
      <item> on_user_command FOR EVENT added_function OF cl_salv_events</item>
      <item> IMPORTING e_salv_function.</item>
      <item> PRIVATE SECTION.</item>
      <item> DATA: go_sender TYPE REF TO zcl_pp_gestconf_prod,</item>
      <item> go_alv TYPE REF TO cl_salv_table,</item>
      <item> go_sel TYPE REF TO cl_salv_selections.</item>
      <item> METHODS:</item>
      <item> edit.</item>
      <item/>
      <item>ENDCLASS.</item>
      <item/>
      <item>CLASS lcl_handle_events IMPLEMENTATION.</item>
      <item> METHOD constructor.</item>
      <item> go_sender = io_sender.</item>
      <item> go_alv = io_alv.</item>
      <item> go_sel = io_sel.</item>
      <item> ENDMETHOD.</item>
      <item> METHOD on_user_command.</item>
      <item/>
      <item> DATA: lo_selections TYPE REF TO cl_salv_selections,</item>
      <item> lo_salv TYPE REF TO cl_salv_table.</item>
      <item> DATA: lt_rows TYPE salv_t_row.</item>
      <item> DATA: ls_rows TYPE i.</item>
      <item> DATA: message TYPE string.</item>
      <item> BREAK kosmedev.</item>
      <item> CASE e_salv_function.</item>
      <item> WHEN &apos;SAVE&apos;.</item>
      <item> go_sender-&gt;save( EXPORTING it_rows = go_sel-&gt;get_selected_rows(</item>
      <item> go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item>
      <item> WHEN &apos;CONFIRM&apos;.</item>
      <item> go_sender-&gt;confirm( EXPORTING it_rows = go_sel-&gt;get_selected_row</item>
      <item> w_contr = &apos; &apos; ).</item>
      <item> go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item>
      <item> WHEN &apos;FORZAC&apos;.</item>
      <item> go_sender-&gt;confirm( EXPORTING it_rows = go_sel-&gt;get_selected_row</item>
      <item> w_contr = &apos;X&apos; ).</item>
      <item> go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item>
      <item> WHEN &apos;DELETE&apos;.</item>
      <item> go_sender-&gt;delete( EXPORTING it_rows = go_sel-&gt;get_selected_rows</item>
      <item> go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item>
      <item>*DP-06_12_2016 Inizio</item>
      <item> WHEN &apos;REFRESH&apos;.</item>
      <item> DATA lt_data TYPE zcl_pp_gestconf_prod=&gt;ty_t_data.</item>
      <item> go_sender-&gt;get_tab( CHANGING rs_data = lt_data ).</item>
      <item> go_sender-&gt;get_data( EXPORTING is_sel = go_sender-&gt;get_sel( )</item>
      <item> CHANGING ct_data = lt_data ).</item>
      <item> go_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item>
      <item>*DP-06_12_2016 Fine</item>
      <item> WHEN &apos;EDIT&apos;.</item>
      <item> edit( ).</item>
      <item> WHEN &apos;&amp;&amp;BACK&apos;.</item>
      <item> LEAVE TO SCREEN 0.</item>
      <item> ENDCASE.</item>
      <item> ENDMETHOD.</item>
      <item/>
      <item> METHOD edit.</item>
      <item> DATA: r_cl_gui TYPE REF TO cl_gui_alv_grid,</item>
      <item> lo_full_adap TYPE REF TO cl_salv_fullscreen_adapter,</item>
      <item> lt_fieldcatalog TYPE lvc_t_fcat,</item>
      <item> lv_select_date TYPE gkday,</item>
      <item> lv_bool TYPE abap_bool.</item>
      <item> IF r_cl_gui IS NOT BOUND.</item>
      <item> r_cl_gui = lcl_alv=&gt;get_grid( go_alv ).</item>
      <item> r_cl_gui-&gt;get_frontend_fieldcatalog( IMPORTING et_fieldcatalog = l</item>
      <item> LOOP AT lt_fieldcatalog INTO DATA(wa_fieldcatalog).</item>
      <item> IF ( wa_fieldcatalog-edit = abap_false ).</item>
      <item> lv_bool = abap_true.</item>
      <item> ELSE.</item>
      <item> lv_bool = abap_false.</item>
      <item> ENDIF.</item>
      <item> CASE wa_fieldcatalog-fieldname.</item>
      <item> WHEN &apos;BUDAT&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;ISDD&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;ISDZ&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;IEDD&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;IEDZ&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;LMNGA&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;XMNGA&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;GMNGA&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;ISM01&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;GRUND&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;WAUSW&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;PERNR&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;NOTA&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;ELABORATO&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;ARBPL&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> WHEN &apos;CDL&apos;.</item>
      <item> wa_fieldcatalog-edit = lv_bool.</item>
      <item> MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
      <item> ENDCASE.</item>
      <item> ENDLOOP.</item>
      <item/>
      <item> r_cl_gui-&gt;set_frontend_fieldcatalog( EXPORTING it_fieldcatalog = l</item>
      <item> r_cl_gui-&gt;register_edit_event( EXPORTING i_event_id = cl_gui_alv_g</item>
      <item> r_cl_gui-&gt;register_edit_event( EXPORTING i_event_id = cl_gui_alv_g</item>
      <item> r_cl_gui-&gt;refresh_table_display( ). &quot;must after cahnge the fieldca</item>
      <item> ENDIF.</item>
      <item> ENDMETHOD.</item>
      <item/>
      <item>ENDCLASS.</item>
      <item/>
      <item>CLASS lcl_alv_om_tool DEFINITION INHERITING FROM cl_salv_controller.</item>
      <item> PUBLIC SECTION.</item>
      <item> CLASS-METHODS set_editable IMPORTING io_alv TYPE REF TO cl_salv</item>
      <item> iv_editable TYPE abap_bool.</item>
      <item>ENDCLASS.</item>
      <item/>
      <item>CLASS lcl_alv_om_tool IMPLEMENTATION.</item>
      <item> METHOD set_editable.</item>
      <item> DATA ls_layout TYPE lvc_s_layo.</item>
      <item> DATA lo_full_adap TYPE REF TO cl_salv_fullscreen_adapter.</item>
      <item> DATA lo_grid TYPE REF TO cl_gui_alv_grid.</item>
      <item/>
      <item>* Fullscreen Adapter (Down Casting)</item>
      <item> lo_full_adap ?= io_alv-&gt;r_controller-&gt;r_adapter.</item>
      <item/>
      <item>* Get the Grid</item>
      <item> lo_grid = lo_full_adap-&gt;get_grid( ).</item>
      <item/>
      <item> IF lo_grid IS NOT BOUND.</item>
      <item> RETURN.</item>
      <item> ENDIF.</item>
      <item/>
      <item>* Editable ALV</item>
      <item> ls_layout-edit = &apos;X&apos;.</item>
      <item/>
      <item>* Set the front layout of ALV</item>
      <item> CALL METHOD lo_grid-&gt;set_frontend_layout</item>
      <item> EXPORTING</item>
      <item> is_layout = ls_layout.</item>
      <item/>
      <item>* refresh the table</item>
      <item> CALL METHOD lo_grid-&gt;refresh_table_display.</item>
      <item> ENDMETHOD. &quot;set_editable</item>
      <item>ENDCLASS.</item>
    </LOCALS_IMP>
    <LOCALS_MAC>
      <item>*&quot;* use this source file for any macro definitions you need</item>
      <item>*&quot;* in the implementation part of the class</item>
      <item/>
    </LOCALS_MAC>
    <TEXT_POOL>
      <I><item><ID>I</ID><KEY>001</KEY><ENTRY>Anagrafica Materiale Filling</ENTRY><LENGTH>56</LENGTH></item><item><ID>I</ID><KEY>002</KEY><ENTRY>Anagrafica Materiale Labelling</ENTRY><LENGTH>60</LENGTH></item><item><ID>I</ID><KEY>004</KEY><ENTRY>Anagrafica Materiale Packaging</ENTRY><LENGTH>60</LENGTH></item><item><ID>I</ID><KEY>005</KEY><ENTRY>Distinte base Filling</ENTRY><LENGTH>42</LENGTH></item><item><ID>I</ID><KEY>006</KEY><ENTRY>Distinte base Labelling</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>007</KEY><ENTRY>Distinte base Packaging</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>008</KEY><ENTRY>Anagrafica Materiale</ENTRY><LENGTH>40</LENGTH></item><item><ID>I</ID><KEY>009</KEY><ENTRY>Distinte base</ENTRY><LENGTH>23</LENGTH></item><item><ID>I</ID><KEY>010</KEY><ENTRY>Files elaborati!</ENTRY><LENGTH>26</LENGTH></item><item><ID>I</ID><KEY>011</KEY><ENTRY>Errori trasmissioni Anagrafica Materiale</ENTRY><LENGTH>80</LENGTH></item><item><ID>I</ID><KEY>012</KEY><ENTRY>Livello non creato per mancanza codice materiale</ENTRY><LENGTH>96</LENGTH></item><item><ID>I</ID><KEY>013</KEY><ENTRY>Codice padre non aperto su divisione</ENTRY><LENGTH>72</LENGTH></item><item><ID>I</ID><KEY>014</KEY><ENTRY>Errore creazione testata diba</ENTRY><LENGTH>42</LENGTH></item><item><ID>I</ID><KEY>015</KEY><ENTRY>Errore cancellazione componenti diba</ENTRY><LENGTH>72</LENGTH></item><item><ID>I</ID><KEY>016</KEY><ENTRY>Log trasmissione BOM</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>017</KEY><ENTRY>Log trasmissione Anagrafica Materiale</ENTRY><LENGTH>74</LENGTH></item><item><ID>I</ID><KEY>018</KEY><ENTRY>Nessuna parametrizzazione per materiale</ENTRY><LENGTH>78</LENGTH></item><item><ID>I</ID><KEY>019</KEY><ENTRY>Posizione già elaborata</ENTRY><LENGTH>46</LENGTH></item><item><ID>I</ID><KEY>020</KEY><ENTRY>Posizione cancellata</ENTRY><LENGTH>40</LENGTH></item><item><ID>I</ID><KEY>021</KEY><ENTRY>Posizione stornata</ENTRY><LENGTH>28</LENGTH></item><item><ID>I</ID><KEY>022</KEY><ENTRY>Qtà dichiarata eccedente alla qtà dell’operazione dell’ordine</ENTRY><LENGTH>122</LENGTH></item><item><ID>I</ID><KEY>023</KEY><ENTRY>Data / Ora in sovrapposizione tra gli ordini</ENTRY><LENGTH>88</LENGTH></item><item><ID>I</ID><KEY>024</KEY><ENTRY>Ore giornaliere dichiarate superano il limite consentito</ENTRY><LENGTH>112</LENGTH></item><item><ID>I</ID><KEY>025</KEY><ENTRY>Ora tot consuntivazione &amp;1 non corrisponde a &amp;2</ENTRY><LENGTH>94</LENGTH></item><item><ID>I</ID><KEY>026</KEY><ENTRY>Records salvati in tabella</ENTRY><LENGTH>52</LENGTH></item></I>
    </TEXT_POOL>
    <METHOD_SOURCE>
      <CONSTRUCTOR>
        <item> method constructor.</item>
        <item> super-&gt;constructor( iv_program = iv_program</item>
        <item> iv_language = iv_language</item>
        <item> iv_pfstatus = iv_pfstatus ).</item>
        <item> gv_pfstatus2 = iv_pfstatus2.</item>
        <item> endmethod.</item>
      </CONSTRUCTOR>
      <EXECUTE>
        <item> method execute.</item>
        <item> create_selections( ).</item>
        <item/>
        <item> get_data( exporting is_sel = gs_sel changing ct_data = gt_data ).</item>
        <item/>
        <item> alv_show( changing ct_data = gt_alv ).</item>
        <item> endmethod.</item>
      </EXECUTE>
      <GET_DATA>
        <item> METHOD get_data.</item>
        <item> DATA: lv_tipo_rec TYPE zpp_bufconf_prod-tipo_record.</item>
        <item/>
        <item> CLEAR: lv_tipo_rec.</item>
        <item>* CASE abap_true.</item>
        <item>* WHEN gs_sel-p_tp_a.</item>
        <item>* lv_tipo_rec = &apos;A&apos;.</item>
        <item>* WHEN gs_sel-p_tp_m.</item>
        <item>* lv_tipo_rec = &apos;M&apos;.</item>
        <item>* WHEN gs_sel-p_tp_n.</item>
        <item>* lv_tipo_rec = &apos;N&apos;.</item>
        <item>* WHEN gs_sel-p_tp_w.</item>
        <item>* lv_tipo_rec = &apos;W&apos;.</item>
        <item>* WHEN gs_sel-p_tp_p.</item>
        <item>* lv_tipo_rec = &apos;P&apos;.</item>
        <item>* ENDCASE.</item>
        <item/>
        <item> REFRESH: gt_data, gt_alv.</item>
        <item> SELECT * INTO CORRESPONDING FIELDS OF TABLE gt_data</item>
        <item> FROM zpp_bufconf_prod</item>
        <item> WHERE tipo_record IN is_sel-s_tprec</item>
        <item> AND n_nesting IN is_sel-s_n_nest</item>
        <item>* AND tipo_record EQ lv_tipo_rec</item>
        <item> AND rueck IN is_sel-s_rueck</item>
        <item> AND aufnr IN is_sel-s_aufnr</item>
        <item> AND vornr IN is_sel-s_vornr</item>
        <item> AND auart IN is_sel-s_auart</item>
        <item> AND budat IN is_sel-s_budat</item>
        <item> AND event IN is_sel-s_event</item>
        <item> AND isdd IN is_sel-s_isdd</item>
        <item> AND isdz IN is_sel-s_isdz</item>
        <item> AND iedd IN is_sel-s_iedd</item>
        <item> AND iedz IN is_sel-s_iedz</item>
        <item> AND wausw IN is_sel-s_wausw</item>
        <item> AND pernr IN is_sel-s_pernr</item>
        <item> AND utente IN is_sel-s_utente</item>
        <item> AND data IN is_sel-s_data</item>
        <item> AND ora IN is_sel-s_ora</item>
        <item> &quot;and s_cdl s_cdl</item>
        <item> AND elaborato IN is_sel-s_elab</item>
        <item> AND flag_canc EQ abap_false</item>
        <item> AND storno EQ abap_false.</item>
        <item/>
        <item> SORT gt_data BY n_nesting tipo_record rueck progr.</item>
        <item/>
        <item> DATA: ls_data TYPE ty_s_data,</item>
        <item> ls_alv TYPE ty_s_alv,</item>
        <item> ls_ztpp_nesting TYPE ztpp_nesting,</item>
        <item> ls_afko TYPE afko,</item>
        <item> lv_tabix TYPE i.</item>
        <item/>
        <item/>
        <item> &quot;add zkosme -&gt; riferimento elemento wbs riferimento per tipo_record</item>
        <item> LOOP AT gt_data INTO ls_data.</item>
        <item> lv_tabix = sy-tabix.</item>
        <item> DATA s_tmp(25) TYPE c.</item>
        <item> IF ( ls_data-tipo_record EQ &apos;A&apos; OR ls_data-tipo_record EQ &apos;M&apos; OR l</item>
        <item>* Estrazione WBS dall&apos;OdP</item>
        <item> SELECT SINGLE projn INTO ls_data-pspel</item>
        <item> FROM afpo</item>
        <item> WHERE aufnr EQ ls_data-aufnr.</item>
        <item> IF ls_data-pspel NE &apos;00000000&apos;.</item>
        <item> CLEAR s_tmp.</item>
        <item> CONCATENATE &apos;PR&apos; ls_data-pspel INTO ls_data-pspel.</item>
        <item> SELECT SINGLE posid INTO ls_data-pspel</item>
        <item> FROM prps</item>
        <item> WHERE objnr EQ ls_data-pspel.</item>
        <item>* Tonolli_G - 09/06/2017 - Start Ins - Gestione filtro</item>
        <item> IF ls_data-pspel IN is_sel-s_projn.</item>
        <item> MODIFY gt_data FROM ls_data INDEX lv_tabix TRANSPORTING pspe</item>
        <item> ELSE.</item>
        <item> DELETE gt_data INDEX lv_tabix.</item>
        <item> ENDIF.</item>
        <item>* Tonolli_G - 09/06/2017 - End Ins</item>
        <item> ELSE.</item>
        <item>* Tonolli_G - 09/06/2017 - Start Ins - Gestione filtro</item>
        <item> IF ls_data-pspel IN is_sel-s_projn.</item>
        <item> &quot;MODIFY gt_data FROM ls_data INDEX lv_tabix TRANSPORTING psp</item>
        <item> ELSE.</item>
        <item> DELETE gt_data INDEX lv_tabix.</item>
        <item> ENDIF.</item>
        <item>* Tonolli_G - 09/06/2017 - End Ins</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item> ENDLOOP.</item>
        <item> &quot;add zkosme -&gt; riferimento elemento wbs per tipo_record &apos;A&apos; || &apos;M&apos;</item>
        <item/>
        <item> LOOP AT gt_data INTO ls_data.</item>
        <item> lv_tabix = sy-tabix.</item>
        <item/>
        <item> SELECT SINGLE * FROM afko</item>
        <item> INTO CORRESPONDING FIELDS OF ls_afko</item>
        <item> WHERE aufnr EQ ls_data-aufnr</item>
        <item> AND dispo IN is_sel-s_dispo.</item>
        <item> IF sy-subrc EQ 0.</item>
        <item/>
        <item> CLEAR: ls_alv.</item>
        <item> MOVE-CORRESPONDING ls_data TO ls_alv.</item>
        <item> CLEAR ls_alv-dispo.</item>
        <item> ls_alv-dispo = ls_afko-dispo.</item>
        <item> SELECT SINGLE nachn vorna</item>
        <item> INTO (ls_alv-cognome, ls_alv-nome)</item>
        <item> FROM pa0002</item>
        <item> WHERE pernr = ls_alv-pernr.</item>
        <item> IF ( ls_alv-tipo_record = &apos;A&apos; OR ls_alv-tipo_record = &apos;M&apos; OR ls_</item>
        <item> SELECT SINGLE crhd~arbpl afvc~ltxa1 INTO ( ls_alv-cdl , ls_a</item>
        <item> FROM caufv INNER JOIN afvc ON afvc~aufpl = caufv~aufpl</item>
        <item> INNER JOIN crhd ON crhd~objty = &apos;A&apos; AND</item>
        <item> crhd~objid = afvc~arbid</item>
        <item> WHERE caufv~aufnr = ls_alv-aufnr</item>
        <item> AND afvc~vornr = ls_alv-vornr</item>
        <item> AND crhd~arbpl IN is_sel-s_cdl. .</item>
        <item> elseif ( ls_alv-tipo_record = &apos;W&apos; OR ls_alv-tipo_record = &apos;N&apos; ).</item>
        <item> SELECT SINGLE cdl INTO ls_alv-cdl FROM ztpp_nesting WHERE vorn</item>
        <item> AND werks = &apos;6301&apos;</item>
        <item> AND n_nesting = ls_alv-n_n</item>
        <item> AND cdl IN is_sel-s_</item>
        <item> ENDIF.</item>
        <item> IF ( sy-subrc = 0 ).</item>
        <item> MODIFY gt_alv FROM ls_alv INDEX lv_tabix TRANSPORTING cdl.</item>
        <item> ELSE.</item>
        <item> DELETE gt_data INDEX lv_tabix.</item>
        <item> CONTINUE.</item>
        <item> ENDIF.</item>
        <item> ls_alv-ligth = icon_yellow_light.</item>
        <item> IF ( ls_alv-elaborato = abap_true ).</item>
        <item> ls_alv-ligth = icon_cancel.</item>
        <item> ls_alv-descr_esito = &apos;Posizione già elaborata&apos;(019).</item>
        <item> ENDIF.</item>
        <item> IF ( ls_alv-flag_canc = abap_true ).</item>
        <item> ls_alv-ligth = icon_cancel.</item>
        <item> ls_alv-descr_esito = &apos;Posizione cancellata&apos;(020).</item>
        <item> ENDIF.</item>
        <item> IF ( ls_alv-storno = abap_true ).</item>
        <item> ls_alv-ligth = icon_cancel.</item>
        <item> ls_alv-descr_esito = &apos;Posizione stornata&apos;(021).</item>
        <item> ENDIF.</item>
        <item> APPEND ls_alv TO gt_alv.</item>
        <item/>
        <item> ENDIF.</item>
        <item/>
        <item> ENDLOOP.</item>
        <item> ENDMETHOD.</item>
      </GET_DATA>
      <GET_SALV>
        <item> method get_salv.</item>
        <item> eo_salv = go_salv.</item>
        <item> endmethod.</item>
      </GET_SALV>
      <SET_SALV>
        <item> method set_salv.</item>
        <item> go_salv = io_salv.</item>
        <item> endmethod.</item>
      </SET_SALV>
      <MODIFY_SCREEN>
        <item> method modify_screen.</item>
        <item> create_selections( ).</item>
        <item/>
        <item>* LOOP AT SCREEN INTO DATA(ls_screen).</item>
        <item>* IF ( ls_screen-group1 = &apos;MAT&apos; ).</item>
        <item>* CASE abap_true.</item>
        <item>* WHEN gs_sel-p_mat.</item>
        <item>* IF ( gs_sel-p_err = abap_false ).</item>
        <item>* ls_screen-active = 1.</item>
        <item>* ELSE.</item>
        <item>* ls_screen-active = 0.</item>
        <item>* ENDIF.</item>
        <item>* WHEN OTHERS.</item>
        <item>* ls_screen-active = 0.</item>
        <item>* ENDCASE.</item>
        <item>* MODIFY screen FROM ls_screen.</item>
        <item>* ENDIF.</item>
        <item>* IF ( ls_screen-group1 = &apos;BOM&apos; ).</item>
        <item>* CASE abap_true.</item>
        <item>* WHEN gs_sel-p_bom.</item>
        <item>* IF ( gs_sel-p_err = abap_false ).</item>
        <item>* ls_screen-active = 1.</item>
        <item>* ELSE.</item>
        <item>* ls_screen-active = 0.</item>
        <item>* ENDIF.</item>
        <item>* WHEN OTHERS.</item>
        <item>* ls_screen-active = 0.</item>
        <item>* ENDCASE.</item>
        <item>* MODIFY screen FROM ls_screen.</item>
        <item>* ENDIF.</item>
        <item>* IF ( ls_screen-group1 = &apos;ERR&apos; ).</item>
        <item>* CASE abap_true.</item>
        <item>* WHEN gs_sel-p_err.</item>
        <item>* ls_screen-active = 1.</item>
        <item>* WHEN OTHERS.</item>
        <item>* ls_screen-active = 0.</item>
        <item>* ENDCASE.</item>
        <item>* MODIFY screen FROM ls_screen.</item>
        <item>* ENDIF.</item>
        <item>* ENDLOOP.</item>
        <item> endmethod.</item>
      </MODIFY_SCREEN>
      <CREATE_SELECTIONS>
        <item> method create_selections.</item>
        <item> data: lref_sel type ref to data.</item>
        <item> create data lref_sel type ty_s_sel.</item>
        <item> set_selections( changing cref_sel = lref_sel ).</item>
        <item> field-symbols: &lt;sel&gt; type any.</item>
        <item> assign lref_sel-&gt;* to &lt;sel&gt;.</item>
        <item> if ( sy-subrc = 0 ).</item>
        <item> gs_sel = &lt;sel&gt;.</item>
        <item> endif.</item>
        <item> endmethod.</item>
      </CREATE_SELECTIONS>
      <ALV_SHOW>
        <item> method alv_show.</item>
        <item>* IF ( NOT ct_data[] IS INITIAL ).</item>
        <item> data: lt_fieldcat type slis_t_fieldcat_alv,</item>
        <item> is_print type slis_print_alv,</item>
        <item> lv_program type sy-repid.</item>
        <item> field-symbols &lt;ct_data&gt; type table.</item>
        <item/>
        <item> lv_program = get_program( ).</item>
        <item/>
        <item> assign (&apos;CT_DATA[]&apos;) to &lt;ct_data&gt;.</item>
        <item/>
        <item> data lo_alv type ref to cl_salv_table.</item>
        <item> data lo_display type ref to cl_salv_display_settings.</item>
        <item> data: lt_fcat type lvc_t_fcat.</item>
        <item/>
        <item> data: lv_lenght type i.</item>
        <item> data: lv_title type char70.</item>
        <item/>
        <item> lo_alv = get_alv( ).</item>
        <item/>
        <item> try.</item>
        <item> cl_salv_table=&gt;factory( importing r_salv_table = lo_alv</item>
        <item> changing t_table = &lt;ct_data&gt; ).</item>
        <item> data: lr_columns type ref to cl_salv_columns_list,</item>
        <item> lr_aggregations type ref to cl_salv_aggregations.</item>
        <item>* lt_fcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(</item>
        <item>* r_columns = lo_alv-&gt;get_columns( ) &quot; ALV Filte</item>
        <item>* r_aggregations = lo_alv-&gt;get_aggregations( ) ).&quot; AL</item>
        <item> lr_columns = lo_alv-&gt;get_columns( ).</item>
        <item> lr_aggregations = lo_alv-&gt;get_aggregations( ).</item>
        <item> lt_fcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(</item>
        <item> r_columns = lr_columns &quot; ALV Filter</item>
        <item> r_aggregations = lr_aggregations ).&quot; ALV Aggregation</item>
        <item> loop at lt_fcat into data(ls_fcat) where fieldname = &apos;BUDAT&apos; or</item>
        <item> fieldname = &apos;LMNGA&apos;.</item>
        <item> ls_fcat-edit = abap_true.</item>
        <item> modify lt_fcat from ls_fcat.</item>
        <item> endloop.</item>
        <item> cl_salv_controller_metadata=&gt;set_lvc_fieldcatalog( exporting t_f</item>
        <item> r_c</item>
        <item> r_a</item>
        <item> data: ls_layout type lvc_s_layo.</item>
        <item> cl_salv_controller_metadata=&gt;get_lvc_layout( exporting r_columns</item>
        <item> changing s_layout</item>
        <item> ls_layout-edit_mode = abap_true.</item>
        <item> cl_salv_controller_metadata=&gt;set_lvc_layout( r_columns = lr_colu</item>
        <item> s_layout = ls_layo</item>
        <item/>
        <item/>
        <item> &quot; lcl_alv_om_tool=&gt;set_editable( EXPORTING io_alv =</item>
        <item> &quot; iv_editable =</item>
        <item/>
        <item/>
        <item/>
        <item> catch cx_salv_msg.</item>
        <item> endtry.</item>
        <item/>
        <item> data: lo_functions type ref to cl_salv_functions_list,</item>
        <item> lo_sel type ref to cl_salv_selections.</item>
        <item/>
        <item> lo_functions = lo_alv-&gt;get_functions( ).</item>
        <item> lo_functions-&gt;set_all( abap_true ).</item>
        <item/>
        <item> lo_display = lo_alv-&gt;get_display_settings( ).</item>
        <item> lo_display-&gt;set_list_header( iv_title ).</item>
        <item> lo_display-&gt;set_striped_pattern( cl_salv_display_settings=&gt;false ).</item>
        <item/>
        <item> try.</item>
        <item> data: lv_text type string value &apos;nutton&apos;.</item>
        <item> lv_text = text-b01.</item>
        <item> lo_functions-&gt;add_function(</item>
        <item> name = &apos;GET_SEL&apos;</item>
        <item> icon = &apos;ICON_EXECUTE_OBJECT&apos;</item>
        <item> text = lv_text</item>
        <item> tooltip = lv_text</item>
        <item> position = if_salv_c_function_position=&gt;right_of_salv_function</item>
        <item> catch cx_salv_wrong_call cx_salv_existing cx_salv_method_not_suppo</item>
        <item> endtry.</item>
        <item/>
        <item> data: lo_columns type ref to cl_salv_columns_table,</item>
        <item> lo_column type ref to cl_salv_column.. &quot;cl_salv_columns.</item>
        <item> lo_columns = lo_alv-&gt;get_columns( ).</item>
        <item>* DATA: lo_column TYPE REF TO cl_salv_column.</item>
        <item> try.</item>
        <item> lo_columns-&gt;set_optimize( abap_true ).</item>
        <item> lo_column ?= lo_columns-&gt;get_column( &apos;BUDAT&apos; ).</item>
        <item/>
        <item>* Ticket 8498 - Start Ins - Tonolli_G - 02/08/2017</item>
        <item> lo_column-&gt;set_long_text( &apos;Data acquisizione&apos; ).</item>
        <item> lo_column-&gt;set_medium_text( &apos;Data acq.&apos; ).</item>
        <item> lo_column-&gt;set_short_text( &apos;Data acq.&apos; ).</item>
        <item>* Ticket 8498 - End Ins - Tonolli_G - 02/08/2017</item>
        <item/>
        <item> lo_column ?= lo_columns-&gt;get_column( &apos;UTENTE&apos; ).</item>
        <item> lo_column-&gt;set_long_text( &apos;Utente&apos; ). &quot;#EC NOTEXT</item>
        <item> lo_column-&gt;set_medium_text( &apos;Utente&apos; ). &quot;#EC NOTEXT</item>
        <item> lo_column-&gt;set_short_text( &apos;Utente&apos; ). &quot;#EC NOTEXT</item>
        <item/>
        <item>* Ticket 8498 - Start Ins - Tonolli_G - 02/08/2017</item>
        <item> lo_column ?= lo_columns-&gt;get_column( &apos;DATA&apos; ).</item>
        <item> lo_column-&gt;set_long_text( &apos;Data ultima modifica&apos; ).</item>
        <item> lo_column-&gt;set_medium_text( &apos;Data ult. mod.&apos; ).</item>
        <item> lo_column-&gt;set_short_text( &apos;Dt ult.mod&apos; ).</item>
        <item> lo_column ?= lo_columns-&gt;get_column( &apos;ORA&apos; ).</item>
        <item> lo_column-&gt;set_long_text( &apos;Ora ultima modifica&apos; ).</item>
        <item> lo_column-&gt;set_medium_text( &apos;Ora ult. mod.&apos; ).</item>
        <item> lo_column-&gt;set_short_text( &apos;Ora ult.m.&apos; ).</item>
        <item>* Ticket 8498 - End Ins - Tonolli_G - 02/08/2017</item>
        <item/>
        <item/>
        <item/>
        <item>* lo_column-&gt;set_</item>
        <item>* lo_columns-&gt;set_enabled_column( value = &apos;BUDAT&apos; ).</item>
        <item/>
        <item>* lo_columns-&gt;set_</item>
        <item>* lo_column = lo_cols-&gt;get_column( &apos;TYPE&apos; ).</item>
        <item>* lo_column-&gt;set_long_text( &apos;Avl Date&apos; ). &quot;#EC NOTEXT</item>
        <item>* lo_column-&gt;set_medium_text( &apos;Avl Date&apos; ). &quot;#EC NOTEXT</item>
        <item>* lo_column-&gt;set_short_text( &apos;Avl Date&apos; ). &quot;#EC NOTEXT</item>
        <item>* lo_column-&gt;set_output_length( 10 ).</item>
        <item> catch cx_salv_not_found. &quot;#EC NO_HANDLER</item>
        <item> endtry.</item>
        <item/>
        <item> data: lo_layout type ref to cl_salv_layout,</item>
        <item> ls_variant type slis_vari.</item>
        <item> lo_layout = lo_alv-&gt;get_layout( ).</item>
        <item> lo_layout-&gt;set_save_restriction( if_salv_c_layout=&gt;restrict_none ).</item>
        <item> lo_layout-&gt;set_key( go_salv-&gt;get_key( ) ).</item>
        <item> if ( not gs_sel-p_layout is initial ).</item>
        <item> lo_layout-&gt;set_initial_layout( gs_sel-p_layout ).</item>
        <item> endif.</item>
        <item/>
        <item>* IF ( iv_type = c_alv_view_data ).</item>
        <item>* IF ( gs_sel-p_tp_a = abap_true OR gs_sel-p_tp_m = abap_true</item>
        <item>* OR gs_sel-p_tp_p = abap_true ).</item>
        <item>* lo_alv-&gt;set_screen_status( report = get_program( )</item>
        <item>* pfstatus = get_pfstatus( )</item>
        <item>* set_functions = lo_alv-&gt;c_functions_al</item>
        <item>* ELSEIF ( gs_sel-p_tp_n = abap_true OR gs_sel-p_tp_w = abap_true ).</item>
        <item> lo_alv-&gt;set_screen_status( report = get_program( )</item>
        <item> pfstatus = gv_pfstatus2</item>
        <item> set_functions = lo_alv-&gt;c_functions_all )</item>
        <item>* ENDIF.</item>
        <item/>
        <item/>
        <item>* ELSEIF ( iv_type = c_alv_view_log ).</item>
        <item>* DATA: lo_layout TYPE REF TO cl_salv_layout,</item>
        <item>* ls_variant TYPE slis_vari.</item>
        <item>* lo_layout = lo_alv-&gt;get_layout( ).</item>
        <item>* lo_layout-&gt;set_save_restriction( if_salv_c_layout=&gt;restrict_non</item>
        <item>** ls_key-report = gv_program.</item>
        <item>* lo_layout-&gt;set_key( go_salv-&gt;get_key( ) ).</item>
        <item>* IF ( NOT go_salv-&gt;get_variant( ) IS INITIAL ).</item>
        <item>* lo_layout-&gt;set_initial_layout( ls_variant ).</item>
        <item>* ENDIF.</item>
        <item>* lo_alv-&gt;set_screen_status( report = get_program( )</item>
        <item>* pfstatus = gv_pfstatus_log</item>
        <item>* set_functions = lo_alv-&gt;c_functions_</item>
        <item>* ENDIF.</item>
        <item/>
        <item> data : lo_selections type ref to cl_salv_selections,</item>
        <item> lo_events type ref to cl_salv_events_table,</item>
        <item> lo_event_handler type ref to lcl_handle_events.</item>
        <item/>
        <item> lo_sel = lo_alv-&gt;get_selections( ).</item>
        <item> lo_sel-&gt;set_selection_mode( if_salv_c_selection_mode=&gt;multiple ).</item>
        <item/>
        <item> lo_events = lo_alv-&gt;get_event( ).</item>
        <item> lo_event_handler = new #( io_sender = me</item>
        <item> io_alv = lo_alv</item>
        <item> io_sel = lo_sel ).</item>
        <item/>
        <item> set handler lo_event_handler-&gt;on_user_command for lo_events.</item>
        <item/>
        <item>* DATA: r_cl_gui TYPE REF TO cl_gui_alv_grid,</item>
        <item>* lo_full_adap TYPE REF TO cl_salv_fullscreen_adapter,</item>
        <item>* lt_fieldcatalog TYPE lvc_t_fcat,</item>
        <item>* lv_select_date TYPE gkday.</item>
        <item>*</item>
        <item>* IF r_cl_gui IS NOT BOUND.</item>
        <item>* r_cl_gui = lcl_alv=&gt;get_grid( lo_alv ).</item>
        <item>* r_cl_gui-&gt;get_frontend_fieldcatalog( IMPORTING et_fieldcatalog =</item>
        <item>* LOOP AT lt_fieldcatalog INTO DATA(wa_fieldcatalog).</item>
        <item>* CASE wa_fieldcatalog-fieldname.</item>
        <item>* WHEN &apos;BUDAT&apos;.</item>
        <item>* wa_fieldcatalog-edit = &apos;X&apos;.</item>
        <item>* MODIFY lt_fieldcatalog FROM wa_fieldcatalog.</item>
        <item>* ENDCASE.</item>
        <item>* ENDLOOP.</item>
        <item>* r_cl_gui-&gt;set_frontend_fieldcatalog( EXPORTING it_fieldcatalog =</item>
        <item>* r_cl_gui-&gt;register_edit_event( EXPORTING i_event_id = cl_gui_alv_</item>
        <item>* r_cl_gui-&gt;register_edit_event( EXPORTING i_event_id = cl_gui_alv_</item>
        <item>* r_cl_gui-&gt;refresh_table_display( ). &quot;must after cahnge the fieldc</item>
        <item>* ENDIF.</item>
        <item/>
        <item>* lo_alv-&gt;refresh( refresh_mode = if_salv_c_refresh=&gt;full ).</item>
        <item> if sy-batch is initial.</item>
        <item> if lo_alv is bound.</item>
        <item> set_alv( changing co_alv = lo_alv ).</item>
        <item> lo_alv-&gt;display( ).</item>
        <item> endif.</item>
        <item> else.</item>
        <item> call method batch_confirm</item>
        <item> exporting</item>
        <item> it_rows = gt_alv</item>
        <item> w_contr = &apos; &apos;.</item>
        <item> endif.</item>
        <item/>
        <item>* ENDIF.</item>
        <item> endmethod.</item>
      </ALV_SHOW>
      <CONFIRM>
        <item> METHOD confirm.</item>
        <item/>
        <item> DATA: ls_row TYPE i,</item>
        <item> ls_data TYPE ty_s_data,</item>
        <item> ls_alv TYPE ty_s_alv,</item>
        <item> ls_alv1 TYPE ty_s_alv,</item>
        <item> lv_tabix TYPE i,</item>
        <item> lv_err TYPE abap_bool.</item>
        <item> BREAK kosmedev.</item>
        <item> lv_err = abap_false.</item>
        <item>* Tonolli_G - Attenzione se l&apos;utente ha sortato le righe verificare se</item>
        <item> LOOP AT it_rows INTO ls_row.</item>
        <item/>
        <item> READ TABLE gt_alv INTO ls_alv INDEX ls_row.</item>
        <item> IF ( sy-subrc = 0 ). &quot;READ TABLE gt_alv INTO ls_alv INDEX ls_row</item>
        <item/>
        <item>* REM: TIPO_RECORD:</item>
        <item>* A - ASSEMBLY</item>
        <item>* M - MANUFACTURING</item>
        <item>* N - NESTING MANUALE</item>
        <item>* P - WBS</item>
        <item>* W - NESTING WICAM</item>
        <item/>
        <item>************************************************************************</item>
        <item> IF ls_alv-tipo_record NE &apos;P&apos;. &quot;DP-11_01_2017</item>
        <item>************************************************************************</item>
        <item/>
        <item>*DP-14_10_2016 Inizio</item>
        <item>* ls_alv-isdd. &quot;Data inizio eff.</item>
        <item>* ls_alv-isdz. &quot;Inizio eff. (ora)</item>
        <item>* ls_alv-iedd. &quot;Data fine eff.</item>
        <item>* ls_alv-iedz. &quot;Ora fine eff.</item>
        <item> DATA: w_tot TYPE ty_s_alv-lmnga.</item>
        <item> DATA: r_iedd LIKE RANGE OF ls_alv-isdd.</item>
        <item> DATA: r_iedd_line LIKE LINE OF r_iedd.</item>
        <item> DATA: r_isdz LIKE RANGE OF ls_alv-isdz.</item>
        <item> DATA: r_isdz_line LIKE LINE OF r_isdz.</item>
        <item> DATA: r_iedd1 LIKE RANGE OF ls_alv-isdd.</item>
        <item> DATA: r_iedd1_line LIKE LINE OF r_iedd.</item>
        <item> DATA: r_isdz1 LIKE RANGE OF ls_alv-isdz.</item>
        <item> DATA: r_isdz1_line LIKE LINE OF r_isdz.</item>
        <item> DATA: w_err TYPE sy-tabix.</item>
        <item/>
        <item> DATA: ln_zpp_checkconf_og TYPE zpp_checkconf_og.</item>
        <item/>
        <item> REFRESH r_iedd.</item>
        <item> CLEAR r_iedd_line.</item>
        <item> r_iedd_line-sign = &apos;I&apos;.</item>
        <item> r_iedd_line-option = &apos;BT&apos;.</item>
        <item> r_iedd_line-low = ls_alv-isdd.</item>
        <item> r_iedd_line-high = ls_alv-iedd.</item>
        <item> APPEND r_iedd_line TO r_iedd.</item>
        <item/>
        <item> REFRESH r_isdz.</item>
        <item> CLEAR r_isdz_line.</item>
        <item> r_isdz_line-sign = &apos;I&apos;.</item>
        <item> r_isdz_line-option = &apos;BT&apos;.</item>
        <item> r_isdz_line-low = ls_alv-isdz.</item>
        <item> r_isdz_line-high = ls_alv-iedz.</item>
        <item> APPEND r_isdz_line TO r_isdz.</item>
        <item/>
        <item> CLEAR w_err.</item>
        <item/>
        <item> CLEAR w_tot.</item>
        <item> LOOP AT gt_alv INTO ls_alv1</item>
        <item> WHERE ligth EQ icon_yellow_light</item>
        <item> AND n_nesting EQ ls_alv-n_nesting</item>
        <item> AND tipo_record EQ ls_alv-tipo_record</item>
        <item> AND rueck EQ ls_alv-rueck</item>
        <item> AND progr NE ls_alv-progr</item>
        <item> AND wausw EQ ls_alv-wausw. &quot;DP-05_01_2</item>
        <item>* AND isdd eq ls_alv-isdd. &quot;DP-05_01_2</item>
        <item> lv_tabix = sy-tabix.</item>
        <item/>
        <item> w_tot = w_tot + ls_alv-lmnga + ls_alv-xmnga.</item>
        <item/>
        <item> REFRESH r_iedd1.</item>
        <item> CLEAR r_iedd1_line.</item>
        <item> r_iedd1_line-sign = &apos;I&apos;.</item>
        <item> r_iedd1_line-option = &apos;BT&apos;.</item>
        <item> r_iedd1_line-low = ls_alv1-isdd.</item>
        <item> r_iedd1_line-high = ls_alv1-iedd.</item>
        <item> APPEND r_iedd1_line TO r_iedd1.</item>
        <item/>
        <item> REFRESH r_isdz1.</item>
        <item> CLEAR r_isdz1_line.</item>
        <item> r_isdz1_line-sign = &apos;I&apos;.</item>
        <item> r_isdz1_line-option = &apos;BT&apos;.</item>
        <item> r_isdz1_line-low = ls_alv1-isdz.</item>
        <item> r_isdz1_line-high = ls_alv1-iedz.</item>
        <item> APPEND r_isdz1_line TO r_isdz1.</item>
        <item/>
        <item> IF ls_alv-tipo_record EQ &apos;A&apos;.</item>
        <item/>
        <item> IF ls_alv1-isdd IN r_iedd OR</item>
        <item> ls_alv1-iedd IN r_iedd.</item>
        <item> IF ls_alv1-isdz IN r_isdz OR</item>
        <item> ls_alv1-iedz IN r_isdz.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Data / Ora in sovrapposizione tra gli ordini&apos;(023).</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;D</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item> IF ls_alv-isdd IN r_iedd1 OR</item>
        <item> ls_alv-iedd IN r_iedd1.</item>
        <item> IF ls_alv-isdz IN r_isdz1 OR</item>
        <item> ls_alv-iedz IN r_isdz1.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Data / Ora in sovrapposizione tra gli ordini&apos;(023).</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;D</item>
        <item/>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item/>
        <item> ENDIF.</item>
        <item/>
        <item> ENDLOOP. &quot;LOOP AT gt_alv INTO ls_alv1</item>
        <item/>
        <item> DATA: w_ore TYPE hours.</item>
        <item> DATA: w_datediff TYPE p.</item>
        <item> DATA: w_timediff TYPE p.</item>
        <item> DATA: date_i TYPE d.</item>
        <item> DATA: time_i TYPE t.</item>
        <item> DATA: date_f TYPE d.</item>
        <item> DATA: time_f TYPE t.</item>
        <item/>
        <item> CLEAR: date_i, time_i, date_f, time_f.</item>
        <item> date_i = ls_alv-isdd.</item>
        <item> time_i = ls_alv-isdz.</item>
        <item> date_f = ls_alv-iedd.</item>
        <item> time_f = ls_alv-iedz.</item>
        <item/>
        <item> CLEAR w_datediff.</item>
        <item> CLEAR w_timediff.</item>
        <item> CALL FUNCTION &apos;SD_DATETIME_DIFFERENCE&apos;</item>
        <item> EXPORTING</item>
        <item> date1 = date_i</item>
        <item> time1 = time_i</item>
        <item> date2 = date_f</item>
        <item> time2 = time_f</item>
        <item> IMPORTING</item>
        <item> datediff = w_datediff</item>
        <item> timediff = w_timediff</item>
        <item>* earliest = w_earliest</item>
        <item> EXCEPTIONS</item>
        <item> invalid_datetime = 1</item>
        <item> OTHERS = 2.</item>
        <item/>
        <item> CLEAR w_ore.</item>
        <item> IF w_datediff GT 0.</item>
        <item> w_ore = ( w_datediff * 24 ) + w_timediff.</item>
        <item> ELSE.</item>
        <item> w_ore = w_timediff.</item>
        <item> ENDIF.</item>
        <item/>
        <item> CLEAR ln_zpp_checkconf_og.</item>
        <item>* Controllo Ore giornaliere per CDL reg. conf. produzione (al 16</item>
        <item> SELECT SINGLE * FROM zpp_checkconf_og</item>
        <item> INTO CORRESPONDING FIELDS OF ln_zpp_checkconf_</item>
        <item> WHERE tipo_record EQ &apos;A&apos;</item>
        <item> AND cdl EQ ls_alv-cdl.</item>
        <item/>
        <item> IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM zpp_checkconf_og</item>
        <item> IF ln_zpp_checkconf_og-oregiorno LT w_ore.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Ore giornaliere dichiarate superano il limite consentito&apos;</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;DP-09</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDIF. &quot;IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM zpp_checkc</item>
        <item/>
        <item> IF ls_alv-tipo_record EQ &apos;A&apos; OR</item>
        <item> ls_alv-tipo_record EQ &apos;P&apos; .</item>
        <item> IF w_tot GT ls_alv-mgvrg.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Qtà dichiarata eccedente alla qtà dell’operazione dell’or</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;DP-09</item>
        <item> EXIT.</item>
        <item> ELSE.</item>
        <item> CLEAR w_err.</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item/>
        <item> CHECK w_err EQ 0.</item>
        <item>*DP-14_10_2016 Fine</item>
        <item/>
        <item>*DP-14_10_2016 Inizio controllo ore</item>
        <item>* NB: Se l&apos;utente ha eseguito il comando &quot;Forzare conferma&quot; allo</item>
        <item> IF w_contr EQ &apos; &apos;.</item>
        <item/>
        <item> DATA: ls_zpp_checkconf_au TYPE zpp_checkconf_au.</item>
        <item> TYPES: BEGIN OF ty_alv_h,</item>
        <item> tipo_record TYPE zpp_tipo_rec,</item>
        <item> wausw TYPE wausw,</item>
        <item> budat TYPE buchdatum,</item>
        <item> ism01 TYPE zpp_ismng,</item>
        <item> END OF ty_alv_h.</item>
        <item> DATA: it_alv_h TYPE STANDARD TABLE OF ty_alv_h.</item>
        <item> DATA: ln_alv_h TYPE ty_alv_h.</item>
        <item> DATA: w_txt TYPE char18.</item>
        <item/>
        <item> REFRESH it_alv_h.</item>
        <item> CLEAR ls_alv1.</item>
        <item> LOOP AT gt_alv INTO ls_alv1.</item>
        <item> CLEAR ln_alv_h.</item>
        <item> MOVE-CORRESPONDING ls_alv1 TO ln_alv_h.</item>
        <item> COLLECT ln_alv_h INTO it_alv_h.</item>
        <item> ENDLOOP.</item>
        <item/>
        <item> CLEAR ls_zpp_checkconf_au.</item>
        <item>* Gestione automatismi in acquisizione conferme di produzione</item>
        <item> SELECT SINGLE *</item>
        <item> INTO CORRESPONDING FIELDS OF ls_zpp_checkconf_au</item>
        <item> FROM zpp_checkconf_au</item>
        <item> WHERE tipo_record EQ ls_alv-tipo_record</item>
        <item> AND limite_ore NE 0.</item>
        <item/>
        <item> IF sy-subrc = 0. &quot;SELECT SINGLE * ... FROM zpp_checkconf_a</item>
        <item> LOOP AT gt_alv INTO ls_alv1</item>
        <item> WHERE ligth = icon_yellow_light</item>
        <item> AND n_nesting = ls_alv-n_nesting</item>
        <item> AND tipo_record = ls_alv-tipo_record</item>
        <item> AND rueck = ls_alv-rueck</item>
        <item> AND wausw = ls_alv-wausw &quot;DP-05_01</item>
        <item> AND isdd = ls_alv-isdd. &quot;DP-05_01</item>
        <item/>
        <item> lv_tabix = sy-tabix.</item>
        <item> READ TABLE it_alv_h INTO ln_alv_h</item>
        <item>* WITH KEY tipo_record = ls_alv-tipo_record</item>
        <item>* wausw = ls_alv-wausw</item>
        <item>* budat = ls_alv-budat.</item>
        <item> WITH KEY tipo_record = ls_alv1-tipo_reco</item>
        <item> wausw = ls_alv1-wausw</item>
        <item> budat = ls_alv1-budat.</item>
        <item> IF ln_alv_h-ism01 NE ls_zpp_checkconf_au-limite_ore.</item>
        <item> ls_alv1-ligth = icon_red_light.</item>
        <item> w_err = 4.</item>
        <item> ls_alv1-esito = &apos;004&apos;.</item>
        <item> ls_alv1-descr_esito =</item>
        <item> &apos;Ora tot consuntivazione &amp;1 non corrisponde a &amp;2&apos;(025)</item>
        <item> CLEAR w_txt.</item>
        <item> WRITE ln_alv_h-ism01 TO w_txt.</item>
        <item> REPLACE &apos;&amp;1&apos; WITH w_txt INTO ls_alv1-descr_esito.</item>
        <item> CONDENSE ls_alv1-descr_esito.</item>
        <item> CLEAR w_txt.</item>
        <item> WRITE ls_zpp_checkconf_au-limite_ore TO w_txt.</item>
        <item> REPLACE &apos;&amp;2&apos; WITH w_txt INTO ls_alv1-descr_esito.</item>
        <item> CONDENSE ls_alv1-descr_esito.</item>
        <item> MODIFY gt_alv FROM ls_alv1</item>
        <item> INDEX lv_tabix</item>
        <item> TRANSPORTING ligth esito descr_esito.</item>
        <item> ENDIF.</item>
        <item> ENDLOOP.</item>
        <item> ENDIF. &quot;IF sy-subrc = 0. &quot;SELECT SINGLE * ... FROM zpp_c</item>
        <item/>
        <item> ENDIF.</item>
        <item>*DP-14_10_2016 Fine</item>
        <item/>
        <item> LOOP AT gt_alv INTO ls_alv WHERE ligth = icon_yellow_lig</item>
        <item> AND n_nesting = ls_alv-n_nestin</item>
        <item> AND tipo_record = ls_alv-tipo_rec</item>
        <item> AND rueck = ls_alv-rueck</item>
        <item> AND wausw = ls_alv-wausw</item>
        <item> AND isdd = ls_alv-isdd</item>
        <item> AND elaborato = space.</item>
        <item/>
        <item> lv_tabix = sy-tabix.</item>
        <item>* CHECK lv_tabix = ls_row.</item>
        <item>* DATA: ls_zpp_checkconf_au TYPE zpp_checkconf_au.</item>
        <item>* SELECT SINGLE * INTO CORRESPONDING FIELDS OF ls_zpp_checkconf</item>
        <item>* FROM zpp_checkconf_au</item>
        <item>* WHERE tipo_record = ls_alv-tipo_record</item>
        <item>* AND attiva_conf = abap_true.</item>
        <item>* CHECK sy-subrc = 0.</item>
        <item/>
        <item>* Scarico componenti sulla conferma della fase. Solo per M - M</item>
        <item> CALL FUNCTION &apos;ZPP_GOODSISSUE_PROD&apos;</item>
        <item> EXPORTING</item>
        <item> i_tipo_rec = ls_alv-tipo_record</item>
        <item> i_aufnr = ls_alv-aufnr</item>
        <item> i_vornr = ls_alv-vornr</item>
        <item> IMPORTING</item>
        <item> e_esito = ls_alv-esito</item>
        <item> e_descr_esito = ls_alv-descr_esito.</item>
        <item/>
        <item> CLEAR: ls_data.</item>
        <item> MOVE-CORRESPONDING ls_alv TO ls_data.</item>
        <item> IF ( lv_err = abap_false ).</item>
        <item>********************************************************</item>
        <item>* Registrazione delle conferme di produzione e aggiornamento</item>
        <item> CALL FUNCTION &apos;ZPP_REGCONF_PROD&apos;</item>
        <item> IMPORTING</item>
        <item> e_esito = ls_alv-esito</item>
        <item> e_descr_esito = ls_alv-descr_esito</item>
        <item> CHANGING</item>
        <item> cs_confirm = ls_data.</item>
        <item>********************************************************</item>
        <item> IF ( ls_alv-esito = &apos;000&apos; ).</item>
        <item>* ls_alv-ligth = icon_green_light. &quot;DP-04_01_2017</item>
        <item> ls_alv-ligth = icon_system_okay. &quot;DP-04_01_2017</item>
        <item> ls_alv-elaborato = &apos;X&apos;. &quot;DP-05_01_2017</item>
        <item> ls_alv-data = ls_data-data. &quot;Tonolli_G - Ticket 8498 -</item>
        <item> ls_alv-ora = ls_data-ora. &quot;Tonolli_G - Ticket 8498 -</item>
        <item>*DP-04_01_2017 Inizio</item>
        <item> DATA: ls_order_objects TYPE bapi_pp_order_objects.</item>
        <item/>
        <item> TYPES: BEGIN OF ty_s_operation.</item>
        <item> INCLUDE TYPE bapi_order_operation1.</item>
        <item> TYPES: END OF ty_s_operation.</item>
        <item/>
        <item> TYPES: ty_t_operation TYPE TABLE OF ty_s_operation.</item>
        <item> DATA: lt_operation TYPE ty_t_operation.</item>
        <item> DATA: ls_operation LIKE LINE OF lt_operation.</item>
        <item> DATA: ls_return TYPE bapiret2.</item>
        <item> DATA: ln_aufm TYPE aufm.</item>
        <item/>
        <item> REFRESH lt_operation.</item>
        <item> CLEAR ls_return.</item>
        <item/>
        <item> CLEAR ls_order_objects.</item>
        <item> ls_order_objects-operations = &apos;O&apos;.</item>
        <item> ls_order_objects-components = &apos;C&apos;.</item>
        <item/>
        <item> CALL FUNCTION &apos;BAPI_PRODORD_GET_DETAIL&apos;</item>
        <item> EXPORTING</item>
        <item> number = ls_alv-aufnr</item>
        <item> order_objects = ls_order_objects</item>
        <item> IMPORTING</item>
        <item> return = ls_return</item>
        <item> TABLES</item>
        <item> operation = lt_operation.</item>
        <item/>
        <item> LOOP AT lt_operation INTO ls_operation</item>
        <item> WHERE operation_number EQ ls_alv-vor</item>
        <item> EXIT.</item>
        <item> ENDLOOP.</item>
        <item/>
        <item> IF ls_operation-opr_cntrl_key EQ &apos;ZP03&apos;. &quot;Ordine manuf</item>
        <item> IF ls_alv-event EQ &apos;B40&apos;.</item>
        <item/>
        <item> WAIT UP TO 3 SECONDS.</item>
        <item/>
        <item> SELECT SINGLE * FROM aufm</item>
        <item> INTO ln_aufm</item>
        <item> WHERE aufnr EQ ls_alv-aufnr</item>
        <item> AND bwart EQ &apos;101&apos;.</item>
        <item> IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM aufm</item>
        <item>**********************************************************</item>
        <item> SUBMIT zpp_stampa_modulo_manufactur</item>
        <item> WITH p_aufnr EQ ls_alv-aufnr</item>
        <item> WITH p_badge EQ ls_alv-wausw</item>
        <item> WITH p_submit EQ &apos;X&apos;</item>
        <item> AND RETURN.</item>
        <item>**********************************************************</item>
        <item> ELSE. &quot;IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM a</item>
        <item/>
        <item> CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;</item>
        <item> EXPORTING</item>
        <item> wait = &apos;X&apos;.</item>
        <item/>
        <item> DO 120 TIMES.</item>
        <item> SELECT SINGLE * FROM aufm</item>
        <item> INTO ln_aufm</item>
        <item> WHERE aufnr EQ ls_alv-aufnr</item>
        <item> AND bwart EQ &apos;101&apos;.</item>
        <item> IF sy-subrc EQ 0.</item>
        <item>**********************************************************</item>
        <item> SUBMIT zpp_stampa_modulo_manufactur</item>
        <item> WITH p_aufnr EQ ls_alv-aufnr</item>
        <item> WITH p_badge EQ ls_alv-wausw</item>
        <item> WITH p_submit EQ &apos;X&apos;</item>
        <item> AND RETURN.</item>
        <item>**********************************************************</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDDO. &quot;DO 120 TIMES.</item>
        <item> ENDIF. &quot;IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM</item>
        <item> ENDIF. &quot;IF ls_alv-event EQ &apos;B40&apos;.</item>
        <item> ENDIF. &quot;IF ls_operation-opr_cntrl_key EQ &apos;ZP03&apos;. &quot;Or</item>
        <item>*DP-04_01_2017 Fine</item>
        <item> ELSE.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> lv_err = abap_true.</item>
        <item> ENDIF.</item>
        <item> ELSE. &quot;IF ( lv_err = abap_false ).</item>
        <item> ls_alv-ligth = icon_cancel.</item>
        <item> ls_alv-descr_esito = &apos;Posizione già elaborata&apos;(019).</item>
        <item> ENDIF. &quot;IF ( lv_err = abap_false ).</item>
        <item/>
        <item> MODIFY gt_alv FROM ls_alv INDEX lv_tabix. &quot;&lt;------</item>
        <item/>
        <item> IF ( lv_err = abap_true ).</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDLOOP. &quot;LOOP AT gt_alv INTO ls_alv WHERE ligth = ico</item>
        <item/>
        <item>************************************************************************</item>
        <item> ELSE. &quot;IF ls_alv-tipo_record NE &apos;P&apos;. &quot;DP-11_01_2017</item>
        <item>************************************************************************</item>
        <item/>
        <item>*DP-11_01_2017 Inizio gestione consuntivi a WBS</item>
        <item/>
        <item>*DP- Inizio controllo ore</item>
        <item>* NB: Se l&apos;utente ha eseguito il comando &quot;Forzare conferma&quot; allo</item>
        <item> IF w_contr EQ &apos; &apos; AND &quot;w_contr Variabile globale che</item>
        <item> ls_alv-elaborato = space. &quot;Tonolli_G - Ticket 7353 - INS</item>
        <item/>
        <item> DATA: lv_rmzhl_1 TYPE afru-rmzhl. &quot;Tonolli_G - Ticket 7353</item>
        <item> DATA: lv_rmzhl_2 TYPE afru-rmzhl. &quot;Tonolli_G - Ticket 7353</item>
        <item/>
        <item>* it_alv_h Valorizzata ma non usata</item>
        <item> REFRESH it_alv_h.</item>
        <item> CLEAR ls_alv1.</item>
        <item> LOOP AT gt_alv INTO ls_alv1.</item>
        <item> CLEAR ln_alv_h.</item>
        <item> MOVE-CORRESPONDING ls_alv1 TO ln_alv_h.</item>
        <item> COLLECT ln_alv_h INTO it_alv_h.</item>
        <item> ENDLOOP.</item>
        <item/>
        <item> CLEAR ls_zpp_checkconf_au.</item>
        <item>* Verifica sulla tabella di parametrizzazione se serve un cont</item>
        <item> SELECT SINGLE * INTO CORRESPONDING FIELDS OF ls_zpp_checkcon</item>
        <item> FROM zpp_checkconf_au</item>
        <item> WHERE tipo_record EQ ls_alv-tipo_record</item>
        <item> AND limite_ore NE 0.</item>
        <item/>
        <item> IF sy-subrc = 0. &quot;SELECT SINGLE * ... FROM zpp_checkconf_a</item>
        <item>* Serve un controllo delle ore. Al momento 10/03/2017 tale c</item>
        <item> LOOP AT gt_alv INTO ls_alv1</item>
        <item> WHERE ligth = icon_yellow_light</item>
        <item> AND n_nesting = ls_alv-n_nesting &quot;Sem</item>
        <item> AND tipo_record = ls_alv-tipo_record &quot;Sem</item>
        <item> AND rueck = ls_alv-rueck &quot;Con</item>
        <item> AND wausw = ls_alv-wausw &quot;Bad</item>
        <item> AND isdd = ls_alv-isdd &quot;Dat</item>
        <item> AND elaborato = space. &quot;Ton</item>
        <item/>
        <item> lv_tabix = sy-tabix.</item>
        <item> READ TABLE it_alv_h INTO ln_alv_h</item>
        <item> WITH KEY tipo_record = ls_alv1-tipo_reco</item>
        <item> wausw = ls_alv1-wausw</item>
        <item> budat = ls_alv1-budat.</item>
        <item> IF ln_alv_h-ism01 NE ls_zpp_checkconf_au-limite_ore.</item>
        <item> ls_alv1-ligth = icon_red_light. &quot;Semaforo ros</item>
        <item> w_err = 4.</item>
        <item> ls_alv1-esito = &apos;004&apos;.</item>
        <item> ls_alv1-descr_esito =</item>
        <item> &apos;Ora tot consuntivazione &amp;1 non corrisponde a &amp;2&apos;(025)</item>
        <item> CLEAR w_txt.</item>
        <item> WRITE ln_alv_h-ism01 TO w_txt.</item>
        <item> REPLACE &apos;&amp;1&apos; WITH w_txt INTO ls_alv1-descr_esito.</item>
        <item> CONDENSE ls_alv1-descr_esito.</item>
        <item> CLEAR w_txt.</item>
        <item> WRITE ls_zpp_checkconf_au-limite_ore TO w_txt.</item>
        <item> REPLACE &apos;&amp;2&apos; WITH w_txt INTO ls_alv1-descr_esito.</item>
        <item> CONDENSE ls_alv1-descr_esito.</item>
        <item> MODIFY gt_alv FROM ls_alv1</item>
        <item> INDEX lv_tabix</item>
        <item> TRANSPORTING ligth esito descr_esito.</item>
        <item> ENDIF.</item>
        <item> ENDLOOP. &quot;LOOP AT gt_alv INTO ls_alv1</item>
        <item> ENDIF. &quot;IF sy-subrc = 0. &quot;SELECT SINGLE * ... FROM zpp_c</item>
        <item/>
        <item> ENDIF. &quot;IF w_contr EQ &apos; &apos;.</item>
        <item>*DP- Fine</item>
        <item/>
        <item> DATA: it_confirmation TYPE STANDARD TABLE OF bapi_network_conf</item>
        <item> DATA: ln_confirmation TYPE bapi_network_conf_add.</item>
        <item> DATA: ln_return_msg TYPE bapiret2.</item>
        <item> DATA: ln_message_tab TYPE STANDARD TABLE OF bapi_conf_return.</item>
        <item> DATA: w_rnplnr TYPE bapi_network_list-network.</item>
        <item> DATA: ln_zpp_bufconf_prod TYPE zpp_bufconf_prod.</item>
        <item>* Tonolli_G - 20.03.2017 - Ticket 7404 - Start Ins</item>
        <item> DATA: l_extid TYPE bapi_pp_timeticket-ex_ident.</item>
        <item>* Tonolli_G - 20.03.2017 - Ticket 7404 - Start Ins</item>
        <item/>
        <item>* Le conferme sono acquisite massivamente per &quot;ambito&quot; e non esc</item>
        <item> LOOP AT gt_alv INTO ls_alv WHERE ligth = icon_yellow_lig</item>
        <item> AND n_nesting = ls_alv-n_nestin</item>
        <item> AND tipo_record = ls_alv-tipo_rec</item>
        <item> AND rueck = ls_alv-rueck</item>
        <item> AND progr = ls_alv-progr</item>
        <item> &quot;AND rmzhl = space</item>
        <item> AND wausw = ls_alv-wausw</item>
        <item> AND isdd = ls_alv-isdd</item>
        <item> AND elaborato = space.</item>
        <item/>
        <item> lv_tabix = sy-tabix.</item>
        <item/>
        <item> CLEAR: ln_confirmation.</item>
        <item/>
        <item> CLEAR: it_confirmation, ln_message_tab, ln_return_msg, w_r</item>
        <item> REFRESH: it_confirmation, ln_message_tab. &quot;Tonolli_G - Tic</item>
        <item/>
        <item>* ATTENZIONE: La conferma eseguita in tempo reale (da parametrizzazi</item>
        <item>* richiama la FORM gest_conferme_netw1 (RFC ZLO_SALVA_CO</item>
        <item>* Quindi siamo in presenza di codice duplicato da tenere</item>
        <item/>
        <item> ln_confirmation-postg_date = ls_alv-budat. &quot;Data registra</item>
        <item> ln_confirmation-activity = ls_alv-vornr. &quot;Numero operaz</item>
        <item> ln_confirmation-pers_no = ls_alv-pernr. &quot;C.I.D.</item>
        <item> ln_confirmation-act_work = ls_alv-ism01. &quot;Tempo lavorat</item>
        <item> ln_confirmation-calc_motive = ls_alv-grund. &quot;Causale consu</item>
        <item>* Tonolli_G - 16.03.2017 - Ticket 7404 - Start Ins</item>
        <item> l_extid = ls_alv-progr(8).</item>
        <item> ln_confirmation-ex_ident = ls_alv-progr(8).</item>
        <item>* Tonolli_G - 16.03.2017 - Ticket 7404 - End Ins</item>
        <item/>
        <item> IF NOT ls_alv-nota IS INITIAL.</item>
        <item> CONCATENATE ls_alv-wausw &quot;Badge di accesso stabilimento</item>
        <item> ls_alv-nota &quot;Nota</item>
        <item> INTO ln_confirmation-conf_text SEPARATED BY &apos;</item>
        <item> ELSE.</item>
        <item> ln_confirmation-conf_text = ls_alv-wausw. &quot;Badge di acce</item>
        <item> ENDIF.</item>
        <item/>
        <item> APPEND ln_confirmation TO it_confirmation. &quot;&lt;------</item>
        <item/>
        <item> w_rnplnr = ls_alv-aufnr.</item>
        <item/>
        <item>* Tonolli_G - Ticket 7353 - START INS</item>
        <item> SELECT SINGLE rmzhl INTO lv_rmzhl_1</item>
        <item> FROM afvc</item>
        <item> WHERE rueck = ls_alv-rueck.</item>
        <item>* Tonolli_G - Ticket 7353 - END INS</item>
        <item/>
        <item>************************************************************************</item>
        <item> CALL FUNCTION &apos;BAPI_NETWORK_CONF_ADD&apos;</item>
        <item> EXPORTING</item>
        <item> number = w_rnplnr</item>
        <item>* post_wrong_entries = 0</item>
        <item>* testrun = &apos;X&apos;</item>
        <item> IMPORTING</item>
        <item> return = ln_return_msg</item>
        <item> TABLES</item>
        <item> i_confirmations = it_confirmation</item>
        <item> e_message_table = ln_message_tab.</item>
        <item>************************************************************************</item>
        <item/>
        <item> IF ln_return_msg IS INITIAL. &quot;CALL FUNCTION &apos;BAPI_NETWORK_</item>
        <item/>
        <item> CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;</item>
        <item> EXPORTING</item>
        <item> wait = &apos;X&apos;.</item>
        <item/>
        <item> SELECT SINGLE * FROM zpp_bufconf_prod</item>
        <item> INTO CORRESPONDING FIELDS OF ln_zpp_bufconf_prod</item>
        <item> WHERE n_nesting = ls_alv-n_nesting</item>
        <item> AND tipo_record = ls_alv-tipo_record</item>
        <item> AND rueck = ls_alv-rueck</item>
        <item> AND progr = ls_alv-progr.</item>
        <item> IF sy-subrc EQ 0.</item>
        <item>* Tonolli_G - Ticket 7353 - START INS</item>
        <item> DO 10 TIMES.</item>
        <item> SELECT SINGLE rmzhl INTO lv_rmzhl_2</item>
        <item> FROM afvc</item>
        <item> WHERE rueck = ls_alv-rueck.</item>
        <item> IF lv_rmzhl_1 = lv_rmzhl_2.</item>
        <item> IF sy-index = 1.</item>
        <item>* Resettare tutti i buffer utente in tutti i mandant</item>
        <item> CALL FUNCTION &apos;SUSR_RESET_ALL_USER_BUFFERS&apos;</item>
        <item> EXPORTING</item>
        <item> client = &apos;*&apos;</item>
        <item> EXCEPTIONS</item>
        <item> refresh_successful = 1</item>
        <item> refresh_not_successful = 2</item>
        <item> OTHERS = 3.</item>
        <item> CASE sy-subrc.</item>
        <item> WHEN 1.</item>
        <item> &quot;MESSAGE s055. &quot;Reset del buffer utente ese</item>
        <item> WHEN OTHERS.</item>
        <item> &quot;MESSAGE s056. &quot;Errore di reset del buffer</item>
        <item> ENDCASE.</item>
        <item> ENDIF.</item>
        <item> WAIT UP TO &apos;0.5&apos; SECONDS.</item>
        <item> ELSE.</item>
        <item> EXIT. &quot;USCITA DO.</item>
        <item> ENDIF.</item>
        <item> ENDDO.</item>
        <item> IF lv_rmzhl_1 = lv_rmzhl_2.</item>
        <item> CLEAR: lv_rmzhl_2.</item>
        <item> ENDIF.</item>
        <item> ln_zpp_bufconf_prod-rmzhl = lv_rmzhl_2.</item>
        <item>* Tonolli_G - Ticket 7353 - END INS</item>
        <item/>
        <item> ln_zpp_bufconf_prod-elaborato = &apos;X&apos;. &quot;&lt;------</item>
        <item> MODIFY zpp_bufconf_prod FROM ln_zpp_bufconf_prod.</item>
        <item/>
        <item> ls_alv-ligth = icon_system_okay.</item>
        <item> ls_alv-rmzhl = ln_zpp_bufconf_prod-rmzhl.</item>
        <item> ls_alv-elaborato = &apos;X&apos;. &quot;&lt;------</item>
        <item> MODIFY gt_alv FROM ls_alv INDEX lv_tabix TRANSPORTING li</item>
        <item> ELSE.</item>
        <item>* Non gestito</item>
        <item/>
        <item> ENDIF. &quot;SELECT SINGLE * FROM zpp_bufconf_prod</item>
        <item/>
        <item> CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;</item>
        <item> EXPORTING</item>
        <item> wait = &apos;X&apos;.</item>
        <item/>
        <item> ELSE. &quot;IF ln_return_msg IS INITIAL. &quot;CALL FUNCTION &apos;BAPI</item>
        <item/>
        <item> ls_alv1-ligth = icon_red_light.</item>
        <item> w_err = 4.</item>
        <item> ls_alv1-esito = ln_return_msg-number.</item>
        <item> ls_alv1-descr_esito = ln_return_msg-message.</item>
        <item/>
        <item>* Tonolli_G - 10/03/2017 - Start Ins</item>
        <item>* La struttura ln_return_msg contiene un messaggio generico,</item>
        <item>* MESSAGE ID ln_return_msg-id TYPE ln_return_msg-type NU</item>
        <item>* WITH ln_return_msg-message_v1 ln_return_msg-message_v2</item>
        <item>* ln_return_msg-message_v3 ln_return_msg-message_v4</item>
        <item>* INTO ls_alv1-descr_esito. &quot;Recupero descrizione messa</item>
        <item>* Meglio utilizzare la tabella dei messaggio</item>
        <item> LOOP AT ln_message_tab INTO DATA(lv_message).</item>
        <item> ls_alv1-esito = lv_message-message_number.</item>
        <item> MESSAGE ID lv_message-message_id TYPE lv_message-type NU</item>
        <item> WITH lv_message-message_v1 lv_message-message_v2</item>
        <item> lv_message-message_v3 lv_message-message_v4</item>
        <item> INTO ls_alv1-descr_esito. &quot;Recupero descrizione messa</item>
        <item> EXIT.</item>
        <item> ENDLOOP.</item>
        <item>* Tonolli_G - 10/03/2017 - End Ins</item>
        <item/>
        <item> MODIFY gt_alv FROM ls_alv1 INDEX lv_tabix TRANSPORTING lig</item>
        <item> ENDIF. &quot;IF ln_return_msg IS INITIAL. &quot;CALL FUNCTION &apos;BAP</item>
        <item> ENDLOOP. &quot;LOOP AT gt_alv INTO ls_alv WHERE ligth = ico</item>
        <item>*DP-11_01_2017 Fine</item>
        <item/>
        <item> ENDIF. &quot;IF ls_alv-tipo_record NE &apos;P&apos;. &quot;DP-11_01_2017</item>
        <item/>
        <item> ENDIF. &quot;IF ( sy-subrc = 0 ). &quot;READ TABLE gt_alv INTO ls_alv IN</item>
        <item/>
        <item> ENDLOOP. &quot;LOOP AT it_rows INTO ls_row.</item>
        <item/>
        <item> ENDMETHOD.</item>
      </CONFIRM>
      <DELETE>
        <item> METHOD delete.</item>
        <item/>
        <item> DATA: ls_row TYPE i,</item>
        <item> ls_data TYPE ty_s_data,</item>
        <item> ls_alv TYPE ty_s_alv,</item>
        <item> lv_esito TYPE zdbc_esito,</item>
        <item> lv_descr_esito TYPE zdbc_descr_esito,</item>
        <item> lv_tabix_1 TYPE i,</item>
        <item> lv_tabix_2 TYPE i.</item>
        <item/>
        <item> DATA: ln_conf_cancel TYPE bapi_network_conf_key2.</item>
        <item> DATA: w_rnplnr TYPE bapi_network_list-network.</item>
        <item> DATA: ln_return_msg TYPE bapiret2.</item>
        <item/>
        <item> BREAK kosmedev.</item>
        <item> LOOP AT it_rows INTO ls_row.</item>
        <item> READ TABLE gt_alv INTO ls_alv INDEX ls_row.</item>
        <item> IF ( sy-subrc = 0 ). &quot;READ TABLE gt_alv INTO ls_alv INDEX ls_row</item>
        <item> lv_tabix_1 = sy-tabix.</item>
        <item> IF ls_alv-tipo_record NE &apos;P&apos;.</item>
        <item/>
        <item>* IF ( ls_alv-elaborato = abap_false ). &quot;Tonolli_G - Ticket 74</item>
        <item> CLEAR: ls_data.</item>
        <item> READ TABLE gt_data INTO ls_data WITH KEY n_nesting = ls_al</item>
        <item> tipo_record = ls_al</item>
        <item> rueck = ls_al</item>
        <item> progr = ls_al</item>
        <item> IF ( sy-subrc = 0 ).</item>
        <item> lv_tabix_2 = sy-tabix.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Ins (Stand-by)</item>
        <item>* UPDATE zpp_bufconf_prod SET storno = &apos;X&apos;</item>
        <item>* data = sy-datum</item>
        <item>* ora = sy-uzeit</item>
        <item>* WHERE n_nesting = ls_data-n_nesting</item>
        <item>* AND tipo_record = ls_data-tipo_record</item>
        <item>* AND rueck = ls_data-rueck</item>
        <item>* AND progr = ls_data-progr.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Ins</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Del (Stand-by)</item>
        <item> DELETE FROM zpp_bufconf_prod</item>
        <item> WHERE n_nesting = ls_data-n_nesting</item>
        <item> AND tipo_record = ls_data-tipo_record</item>
        <item> AND rueck = ls_data-rueck</item>
        <item> AND progr = ls_data-progr.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Del</item>
        <item> COMMIT WORK.</item>
        <item> DELETE gt_alv INDEX lv_tabix_1.</item>
        <item> DELETE gt_data INDEX lv_tabix_2.</item>
        <item> ENDIF.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Ripristinato</item>
        <item>* ELSE.</item>
        <item>** Tonolli_G - Ticket 7404 - 20.03.2017 - Start Ins</item>
        <item>* ls_alv-ligth = icon_cancel.</item>
        <item>* ls_alv-descr_esito = &apos;Posizione già elaborata&apos;(019).</item>
        <item>* MODIFY gt_alv FROM ls_alv INDEX lv_tabix_1.</item>
        <item>* ENDIF.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - End Ripristinato</item>
        <item> ELSE. &quot;IF ls_alv-tipo_record NE &apos;P&apos;.</item>
        <item/>
        <item> IF ( ls_alv-elaborato = abap_false ).</item>
        <item> CLEAR: ls_data.</item>
        <item> READ TABLE gt_data INTO ls_data WITH KEY n_nesting = ls_al</item>
        <item> tipo_record = ls_al</item>
        <item> rueck = ls_al</item>
        <item> progr = ls_al</item>
        <item> IF ( sy-subrc = 0 ).</item>
        <item> lv_tabix_2 = sy-tabix.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Ins (Stand-by)</item>
        <item>* UPDATE zpp_bufconf_prod SET storno = &apos;X&apos;</item>
        <item>* data = sy-datum</item>
        <item>* ora = sy-uzeit</item>
        <item>* WHERE n_nesting = ls_data-n_nesting</item>
        <item>* AND tipo_record = ls_data-tipo_record</item>
        <item>* AND rueck = ls_data-rueck</item>
        <item>* AND progr = ls_data-progr.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Ins</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Del (Stand-by)</item>
        <item> DELETE FROM zpp_bufconf_prod</item>
        <item> WHERE n_nesting = ls_data-n_nesting</item>
        <item> AND tipo_record = ls_data-tipo_record</item>
        <item> AND rueck = ls_data-rueck</item>
        <item> AND progr = ls_data-progr.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Del</item>
        <item> COMMIT WORK.</item>
        <item> DELETE gt_alv INDEX lv_tabix_1.</item>
        <item> DELETE gt_data INDEX lv_tabix_2.</item>
        <item> ENDIF.</item>
        <item> ELSE. &quot;IF ( ls_alv-elaborato = abap_false ).</item>
        <item> CLEAR ln_conf_cancel.</item>
        <item> ln_conf_cancel-activity = ls_alv-vornr. &quot;Numero operazione</item>
        <item>* ln_conf_cancel-sub_activity = &apos; &apos;. &quot;Sotto-op</item>
        <item> ln_conf_cancel-conf_cnt = ls_alv-rmzhl. &quot;Contatore conferma</item>
        <item> w_rnplnr = ls_alv-aufnr.</item>
        <item/>
        <item> CALL FUNCTION &apos;BAPI_NETWORK_CONF_CANCEL&apos;</item>
        <item> EXPORTING</item>
        <item> number = w_rnplnr</item>
        <item> conf_cancel = ln_conf_cancel</item>
        <item>* ADDITIONAL_INFOS =</item>
        <item> IMPORTING</item>
        <item> return = ln_return_msg.</item>
        <item/>
        <item> IF ln_return_msg IS INITIAL.</item>
        <item> CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;</item>
        <item> EXPORTING</item>
        <item> wait = &apos;X&apos;.</item>
        <item/>
        <item> CLEAR: ls_data.</item>
        <item> READ TABLE gt_data INTO ls_data WITH KEY n_nesting = ls_</item>
        <item> tipo_record = ls_</item>
        <item> rueck = ls_</item>
        <item> progr = ls_</item>
        <item> IF ( sy-subrc = 0 ).</item>
        <item> lv_tabix_2 = sy-tabix.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Ins (Stand-by)</item>
        <item>* UPDATE zpp_bufconf_prod SET storno = &apos;X&apos;</item>
        <item>* data = sy-datum</item>
        <item>* ora = sy-uzeit</item>
        <item>* WHERE n_nesting = ls_data-n_nesting</item>
        <item>* AND tipo_record = ls_data-tipo_record</item>
        <item>* AND rueck = ls_data-rueck</item>
        <item>* AND progr = ls_data-progr.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Ins</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - Start Del (Stand-by)</item>
        <item> DELETE FROM zpp_bufconf_prod</item>
        <item> WHERE n_nesting = ls_data-n_nesting</item>
        <item> AND tipo_record = ls_data-tipo_record</item>
        <item> AND rueck = ls_data-rueck</item>
        <item> AND progr = ls_data-progr.</item>
        <item>* Tonolli_G - Ticket 7404 - 16.03.2017 - End Del</item>
        <item> COMMIT WORK.</item>
        <item> DELETE gt_alv INDEX lv_tabix_1.</item>
        <item> DELETE gt_data INDEX lv_tabix_2.</item>
        <item> ENDIF.</item>
        <item> ELSE. &quot;IF ln_return_msg IS INITIAL.</item>
        <item> ls_alv-ligth = icon_cancel.</item>
        <item> ls_alv-descr_esito = ln_return_msg-message.</item>
        <item> MODIFY gt_alv FROM ls_alv INDEX lv_tabix_1.</item>
        <item> ENDIF. &quot;IF ln_return_msg IS INITIAL.</item>
        <item> ENDIF. &quot;IF ( ls_alv-elaborato = abap_false ).</item>
        <item> ENDIF. &quot;IF ls_alv-tipo_record NE &apos;P&apos;.</item>
        <item> ENDIF. &quot;IF ( sy-subrc = 0 ). &quot;READ TABLE gt_alv INTO ls_alv IN</item>
        <item> ENDLOOP. &quot;LOOP AT it_rows INTO ls_row.</item>
        <item/>
        <item> ENDMETHOD.</item>
      </DELETE>
      <SAVE>
        <item> method save.</item>
        <item/>
        <item> data: ls_row type i,</item>
        <item> ls_data type ty_s_data,</item>
        <item> ls_alv type ty_s_alv,</item>
        <item> lv_tabix type i,</item>
        <item> lv_err type abap_bool.</item>
        <item/>
        <item> data: ln_bufconf_prod_old type zpp_bufconf_prod.</item>
        <item> data: ln_bufconf_prod_new type zpp_bufconf_prod.</item>
        <item> data: w_is_diff type iref-iind. &quot;Codice sì/no (X/ )</item>
        <item/>
        <item>* BREAK kosmedev.</item>
        <item> lv_err = abap_false.</item>
        <item>*DP-04_01_2017 Inizio</item>
        <item>* LOOP AT it_rows INTO ls_row.</item>
        <item>* READ TABLE gt_alv INTO ls_alv INDEX ls_row.</item>
        <item>* IF ( sy-subrc = 0 ).</item>
        <item>* LOOP AT gt_alv INTO ls_alv WHERE ligth = icon_yellow_ligh</item>
        <item>* AND n_nesting = ls_alv-n_nesting</item>
        <item>* AND tipo_record = ls_alv-tipo_reco</item>
        <item>* AND rueck = ls_alv-rueck.</item>
        <item>* lv_tabix = sy-tabix.</item>
        <item>* CHECK lv_tabix = ls_row.</item>
        <item>* CLEAR: ls_data.</item>
        <item>* MOVE-CORRESPONDING ls_alv TO ls_data.</item>
        <item>* IF ( lv_err = abap_false ).</item>
        <item>* MODIFY zpp_bufconf_prod FROM ls_data.</item>
        <item>* ls_alv-ligth = icon_green_light.</item>
        <item>* ls_alv-descr_esito = &apos;Record salvato in tabella&apos;(022).</item>
        <item>* ELSE.</item>
        <item>* ls_alv-ligth = icon_cancel.</item>
        <item>* ls_alv-descr_esito = &apos;Posizione già elaborata&apos;(019).</item>
        <item>* ENDIF.</item>
        <item>* MODIFY gt_alv FROM ls_alv INDEX lv_tabix.</item>
        <item>* IF ( lv_err = abap_true ).</item>
        <item>* EXIT.</item>
        <item>* ENDIF.</item>
        <item>* ENDLOOP.</item>
        <item>* ENDIF.</item>
        <item>* ENDLOOP.</item>
        <item> loop at gt_alv into ls_alv where elaborato ne &apos;X&apos;.</item>
        <item/>
        <item> clear ln_bufconf_prod_new.</item>
        <item> move-corresponding ls_alv to ln_bufconf_prod_new.</item>
        <item/>
        <item> clear ln_bufconf_prod_old.</item>
        <item> select single *</item>
        <item> from zpp_bufconf_prod</item>
        <item> into corresponding fields of ln_bufconf_prod_old</item>
        <item> where n_nesting eq ls_alv-n_nesting</item>
        <item> and tipo_record eq ls_alv-tipo_record</item>
        <item> and rueck eq ls_alv-rueck</item>
        <item> and progr eq ls_alv-progr.</item>
        <item/>
        <item> lv_tabix = sy-tabix.</item>
        <item/>
        <item> if sy-subrc eq 0.</item>
        <item/>
        <item> call function &apos;COMPARE_STRUCTURE_DATA&apos;</item>
        <item> exporting</item>
        <item> i_ddic_name = &apos;ZPP_BUFCONF_PROD&apos;</item>
        <item> i_rec_old = ln_bufconf_prod_old</item>
        <item> i_rec_new = ln_bufconf_prod_new</item>
        <item> i_check_mode = &apos; &apos; &quot;Yes/No (X/ )</item>
        <item> importing</item>
        <item> e_is_diff = w_is_diff.</item>
        <item/>
        <item> if w_is_diff eq &apos;X&apos;.</item>
        <item/>
        <item> clear: ls_data.</item>
        <item> move-corresponding ls_alv to ls_data.</item>
        <item> if ( lv_err = abap_false ).</item>
        <item> modify zpp_bufconf_prod from ls_data.</item>
        <item> ls_alv-ligth = icon_green_light.</item>
        <item> ls_alv-descr_esito = &apos;Records salvati in tabella&apos;(026).</item>
        <item> else.</item>
        <item> ls_alv-ligth = icon_cancel.</item>
        <item> ls_alv-descr_esito = &apos;Posizione già elaborata&apos;(019).</item>
        <item> endif.</item>
        <item> modify gt_alv from ls_alv index lv_tabix.</item>
        <item> if ( lv_err = abap_true ).</item>
        <item> exit.</item>
        <item> endif.</item>
        <item/>
        <item> endif.</item>
        <item/>
        <item> endif.</item>
        <item/>
        <item> endloop.</item>
        <item>*DP-04_01_2017 Fine</item>
        <item/>
        <item> endmethod.</item>
      </SAVE>
      <BATCH_CONFIRM>
        <item> METHOD batch_confirm.</item>
        <item/>
        <item> DATA ln_data TYPE ty_s_alv.</item>
        <item/>
        <item> DATA: ls_row TYPE i,</item>
        <item> ls_data TYPE ty_s_data,</item>
        <item> ls_alv TYPE ty_s_alv,</item>
        <item> ls_alv1 TYPE ty_s_alv,</item>
        <item> lv_tabix TYPE i,</item>
        <item> lv_err TYPE abap_bool.</item>
        <item/>
        <item>* BREAK kosmedev.</item>
        <item> lv_err = abap_false.</item>
        <item> LOOP AT it_rows INTO ln_data.</item>
        <item> READ TABLE gt_alv INTO ls_alv</item>
        <item> WITH KEY n_nesting = ln_data-n_nesting</item>
        <item> tipo_record = ln_data-tipo_record</item>
        <item> rueck = ln_data-rueck</item>
        <item> progr = ln_data-progr.</item>
        <item> IF ( sy-subrc = 0 ).</item>
        <item/>
        <item>* BEGIN SV TICKET 7027</item>
        <item/>
        <item>* data: w_tot type ty_s_alv-lmnga.</item>
        <item>* data: r_iedd like range of ls_alv-isdd.</item>
        <item>* data: r_iedd_line like line of r_iedd.</item>
        <item>* data: r_isdz like range of ls_alv-isdz.</item>
        <item>* data: r_isdz_line like line of r_isdz.</item>
        <item>* data: r_iedd1 like range of ls_alv-isdd.</item>
        <item>* data: r_iedd1_line like line of r_iedd.</item>
        <item>* data: r_isdz1 like range of ls_alv-isdz.</item>
        <item>* data: r_isdz1_line like line of r_isdz.</item>
        <item>* data: w_err type sy-tabix.</item>
        <item>*</item>
        <item>* data: ln_zpp_checkconf_og type zpp_checkconf_og.</item>
        <item>*</item>
        <item>* refresh r_iedd.</item>
        <item>* clear r_iedd_line.</item>
        <item>* r_iedd_line-sign = &apos;I&apos;.</item>
        <item>* r_iedd_line-option = &apos;BT&apos;.</item>
        <item>* r_iedd_line-low = ls_alv-isdd.</item>
        <item>* r_iedd_line-high = ls_alv-iedd.</item>
        <item>* append r_iedd_line to r_iedd.</item>
        <item>*</item>
        <item>* refresh r_isdz.</item>
        <item>* clear r_isdz_line.</item>
        <item>* r_isdz_line-sign = &apos;I&apos;.</item>
        <item>* r_isdz_line-option = &apos;BT&apos;.</item>
        <item>* r_isdz_line-low = ls_alv-isdz.</item>
        <item>* r_isdz_line-high = ls_alv-iedz.</item>
        <item>* append r_isdz_line to r_isdz.</item>
        <item>*</item>
        <item>* clear w_err.</item>
        <item>*</item>
        <item>* clear w_tot.</item>
        <item>* loop at gt_alv into ls_alv1</item>
        <item>* where ligth = icon_yellow_light</item>
        <item>* and n_nesting = ls_alv-n_nesting</item>
        <item>* and tipo_record = ls_alv-tipo_record</item>
        <item>* and rueck = ls_alv-rueck.</item>
        <item>* w_tot = w_tot + ls_alv-lmnga + ls_alv-xmnga.</item>
        <item>*</item>
        <item>* refresh r_iedd1.</item>
        <item>* clear r_iedd1_line.</item>
        <item>* r_iedd1_line-sign = &apos;I&apos;.</item>
        <item>* r_iedd1_line-option = &apos;BT&apos;.</item>
        <item>* r_iedd1_line-low = ls_alv1-isdd.</item>
        <item>* r_iedd1_line-high = ls_alv1-iedd.</item>
        <item>* append r_iedd1_line to r_iedd1.</item>
        <item>*</item>
        <item>* refresh r_isdz1.</item>
        <item>* clear r_isdz1_line.</item>
        <item>* r_isdz1_line-sign = &apos;I&apos;.</item>
        <item>* r_isdz1_line-option = &apos;BT&apos;.</item>
        <item>* r_isdz1_line-low = ls_alv1-isdz.</item>
        <item>* r_isdz1_line-high = ls_alv1-iedz.</item>
        <item>* append r_isdz1_line to r_isdz1.</item>
        <item>*</item>
        <item>* if ls_alv-tipo_record eq &apos;A&apos;.</item>
        <item>*</item>
        <item>* if ls_alv1-isdd in r_iedd or</item>
        <item>* ls_alv1-iedd in r_iedd.</item>
        <item>* if ls_alv1-isdz in r_isdz or</item>
        <item>* ls_alv1-iedz in r_isdz.</item>
        <item>* w_err = 4.</item>
        <item>* ls_alv-ligth = icon_red_light.</item>
        <item>* ls_alv-descr_esito =</item>
        <item>* &apos;Data / Ora in sovrapposizione tra gli ordini&apos;(023).</item>
        <item>* exit.</item>
        <item>* endif.</item>
        <item>* endif.</item>
        <item>* if ls_alv-isdd in r_iedd1 or</item>
        <item>* ls_alv-iedd in r_iedd1.</item>
        <item>* if ls_alv-isdz in r_isdz1 or</item>
        <item>* ls_alv-iedz in r_isdz1.</item>
        <item>* w_err = 4.</item>
        <item>* ls_alv-ligth = icon_red_light.</item>
        <item>* ls_alv-descr_esito =</item>
        <item>* &apos;Data / Ora in sovrapposizione tra gli ordini&apos;(023).</item>
        <item>* exit.</item>
        <item>* endif.</item>
        <item>* endif.</item>
        <item>*</item>
        <item>* endif.</item>
        <item>*</item>
        <item>* endloop.</item>
        <item>*</item>
        <item>* data: w_ore type hours.</item>
        <item>* data: w_datediff type p.</item>
        <item>* data: w_timediff type p.</item>
        <item>* data: date_i type d.</item>
        <item>* data: time_i type t.</item>
        <item>* data: date_f type d.</item>
        <item>* data: time_f type t.</item>
        <item>*</item>
        <item>* clear: date_i, time_i, date_f, time_f.</item>
        <item>* date_i = ls_alv-isdd.</item>
        <item>* time_i = ls_alv-isdz.</item>
        <item>* date_f = ls_alv-iedd.</item>
        <item>* time_f = ls_alv-iedz.</item>
        <item>*</item>
        <item>* clear w_datediff.</item>
        <item>* clear w_timediff.</item>
        <item>* call function &apos;SD_DATETIME_DIFFERENCE&apos;</item>
        <item>* exporting</item>
        <item>* date1 = date_i</item>
        <item>* time1 = time_i</item>
        <item>* date2 = date_f</item>
        <item>* time2 = time_f</item>
        <item>* importing</item>
        <item>* datediff = w_datediff</item>
        <item>* timediff = w_timediff</item>
        <item>** earliest = w_earliest</item>
        <item>* exceptions</item>
        <item>* invalid_datetime = 1</item>
        <item>* others = 2.</item>
        <item>*</item>
        <item>* clear w_ore.</item>
        <item>* if w_datediff gt 0.</item>
        <item>* w_ore = ( w_datediff * 24 ) + w_timediff.</item>
        <item>* else.</item>
        <item>* w_ore = w_timediff.</item>
        <item>* endif.</item>
        <item>*</item>
        <item>* clear ln_zpp_checkconf_og.</item>
        <item>* select single * from zpp_checkconf_og</item>
        <item>* into corresponding fields of ln_zpp_checkconf_o</item>
        <item>* where tipo_record eq &apos;A&apos;</item>
        <item>* and cdl eq ls_alv-cdl.</item>
        <item>*</item>
        <item>* if sy-subrc eq 0.</item>
        <item>* if ln_zpp_checkconf_og-oregiorno lt w_ore.</item>
        <item>* w_err = 4.</item>
        <item>* ls_alv-ligth = icon_red_light.</item>
        <item>* ls_alv-descr_esito =</item>
        <item>* &apos;Ore giornaliere dichiarate superano il limite consentito&apos;(</item>
        <item>* exit.</item>
        <item>* endif.</item>
        <item>* endif.</item>
        <item>*</item>
        <item>* if w_tot gt ls_alv-mgvrg.</item>
        <item>* w_err = 4.</item>
        <item>* ls_alv-ligth = icon_red_light.</item>
        <item>* ls_alv-descr_esito =</item>
        <item>* &apos;Qtà dichiarata eccedente alla qtà dell’operazione dell’ordin</item>
        <item>* exit.</item>
        <item>* else.</item>
        <item>* clear w_err.</item>
        <item>* endif.</item>
        <item>*</item>
        <item>* check w_err eq 0.</item>
        <item>**DP-14_10_2016 Inizio</item>
        <item>* data: ls_zpp_checkconf_au type zpp_checkconf_au.</item>
        <item>* types: begin of ty_alv_h,</item>
        <item>* tipo_record type zpp_tipo_rec,</item>
        <item>* wausw type wausw,</item>
        <item>* budat type buchdatum,</item>
        <item>* ism01 type zpp_ismng,</item>
        <item>* end of ty_alv_h.</item>
        <item>* data: it_alv_h type standard table of ty_alv_h.</item>
        <item>* data: ln_alv_h type ty_alv_h.</item>
        <item>* data: w_txt type char18.</item>
        <item>*</item>
        <item>* refresh it_alv_h.</item>
        <item>* clear ls_alv1.</item>
        <item>* loop at gt_alv into ls_alv1.</item>
        <item>* clear ln_alv_h.</item>
        <item>* move-corresponding ls_alv1 to ln_alv_h.</item>
        <item>* collect ln_alv_h into it_alv_h.</item>
        <item>* endloop.</item>
        <item>*</item>
        <item>* clear ls_zpp_checkconf_au.</item>
        <item>* select single *</item>
        <item>* into corresponding fields of ls_zpp_checkconf_au</item>
        <item>* from zpp_checkconf_au</item>
        <item>* where tipo_record eq ls_alv-tipo_record</item>
        <item>* and limite_ore ne 0.</item>
        <item>*</item>
        <item>* if sy-subrc = 0.</item>
        <item>* loop at gt_alv into ls_alv1</item>
        <item>* where ligth = icon_yellow_light</item>
        <item>* and n_nesting = ls_alv-n_nesting</item>
        <item>* and tipo_record = ls_alv-tipo_record</item>
        <item>* and rueck = ls_alv-rueck.</item>
        <item>*</item>
        <item>* lv_tabix = sy-tabix.</item>
        <item>* read table it_alv_h into ln_alv_h</item>
        <item>* with key tipo_record = ls_alv-tipo_record</item>
        <item>* wausw = ls_alv-wausw</item>
        <item>* budat = ls_alv-budat.</item>
        <item>* if ln_alv_h-ism01 ne ls_zpp_checkconf_au-limite_ore.</item>
        <item>* ls_alv1-ligth = icon_red_light.</item>
        <item>* w_err = 4.</item>
        <item>* ls_alv1-esito = &apos;004&apos;.</item>
        <item>* ls_alv1-descr_esito =</item>
        <item>* &apos;Ora tot consuntivazione &amp;1 non corrisponde a &amp;2&apos;(025).</item>
        <item>* clear w_txt.</item>
        <item>* write ln_alv_h-ism01 to w_txt.</item>
        <item>* replace &apos;&amp;1&apos; with w_txt into ls_alv1-descr_esito.</item>
        <item>* condense ls_alv1-descr_esito.</item>
        <item>* clear w_txt.</item>
        <item>* write ls_zpp_checkconf_au-limite_ore to w_txt.</item>
        <item>* replace &apos;&amp;2&apos; with w_txt into ls_alv1-descr_esito.</item>
        <item>* condense ls_alv1-descr_esito.</item>
        <item>* modify gt_alv from ls_alv1</item>
        <item>* index lv_tabix</item>
        <item>* transporting ligth esito descr_esito.</item>
        <item>* endif.</item>
        <item>* endloop.</item>
        <item>* endif.</item>
        <item>**DP-14_10_2016 Fine</item>
        <item>*</item>
        <item>* loop at gt_alv into ls_alv where ligth = icon_yellow_ligh</item>
        <item>* and n_nesting = ls_alv-n_nesting</item>
        <item>* and tipo_record = ls_alv-tipo_reco</item>
        <item>* and rueck = ls_alv-rueck.</item>
        <item>* lv_tabix = sy-tabix.</item>
        <item>*</item>
        <item>* call function &apos;ZPP_GOODSISSUE_PROD&apos;</item>
        <item>* exporting</item>
        <item>* i_tipo_rec = ls_alv-tipo_record</item>
        <item>* i_aufnr = ls_alv-aufnr</item>
        <item>* i_vornr = ls_alv-vornr</item>
        <item>* importing</item>
        <item>* e_esito = ls_alv-esito</item>
        <item>* e_descr_esito = ls_alv-descr_esito.</item>
        <item>*</item>
        <item>* clear: ls_data.</item>
        <item>* move-corresponding ls_alv to ls_data.</item>
        <item>* if ( lv_err = abap_false ).</item>
        <item>* call function &apos;ZPP_REGCONF_PROD&apos;</item>
        <item>* importing</item>
        <item>* e_esito = ls_alv-esito</item>
        <item>* e_descr_esito = ls_alv-descr_esito</item>
        <item>* changing</item>
        <item>* cs_confirm = ls_data.</item>
        <item>* if ( ls_alv-esito = &apos;000&apos; ).</item>
        <item>* ls_alv-ligth = icon_green_light.</item>
        <item>* else.</item>
        <item>* ls_alv-ligth = icon_red_light.</item>
        <item>* lv_err = abap_true.</item>
        <item>* endif.</item>
        <item>* else.</item>
        <item>* ls_alv-ligth = icon_cancel.</item>
        <item>* ls_alv-descr_esito = &apos;Posizione già elaborata&apos;(019).</item>
        <item>* endif.</item>
        <item>* modify gt_alv from ls_alv index lv_tabix.</item>
        <item>* if ( lv_err = abap_true ).</item>
        <item>* exit.</item>
        <item>* endif.</item>
        <item>* endloop.</item>
        <item/>
        <item> DATA: w_tot TYPE ty_s_alv-lmnga.</item>
        <item> DATA: r_iedd LIKE RANGE OF ls_alv-isdd.</item>
        <item> DATA: r_iedd_line LIKE LINE OF r_iedd.</item>
        <item> DATA: r_isdz LIKE RANGE OF ls_alv-isdz.</item>
        <item> DATA: r_isdz_line LIKE LINE OF r_isdz.</item>
        <item> DATA: r_iedd1 LIKE RANGE OF ls_alv-isdd.</item>
        <item> DATA: r_iedd1_line LIKE LINE OF r_iedd.</item>
        <item> DATA: r_isdz1 LIKE RANGE OF ls_alv-isdz.</item>
        <item> DATA: r_isdz1_line LIKE LINE OF r_isdz.</item>
        <item> DATA: w_err TYPE sy-tabix.</item>
        <item/>
        <item> DATA: ln_zpp_checkconf_og TYPE zpp_checkconf_og.</item>
        <item/>
        <item> REFRESH r_iedd.</item>
        <item> CLEAR r_iedd_line.</item>
        <item> r_iedd_line-sign = &apos;I&apos;.</item>
        <item> r_iedd_line-option = &apos;BT&apos;.</item>
        <item> r_iedd_line-low = ls_alv-isdd.</item>
        <item> r_iedd_line-high = ls_alv-iedd.</item>
        <item> APPEND r_iedd_line TO r_iedd.</item>
        <item/>
        <item> REFRESH r_isdz.</item>
        <item> CLEAR r_isdz_line.</item>
        <item> r_isdz_line-sign = &apos;I&apos;.</item>
        <item> r_isdz_line-option = &apos;BT&apos;.</item>
        <item> r_isdz_line-low = ls_alv-isdz.</item>
        <item> r_isdz_line-high = ls_alv-iedz.</item>
        <item> APPEND r_isdz_line TO r_isdz.</item>
        <item/>
        <item> CLEAR w_err.</item>
        <item/>
        <item> CLEAR w_tot.</item>
        <item> LOOP AT gt_alv INTO ls_alv1</item>
        <item> WHERE ligth EQ icon_yellow_light</item>
        <item> AND n_nesting EQ ls_alv-n_nesting</item>
        <item> AND tipo_record EQ ls_alv-tipo_record</item>
        <item> AND rueck EQ ls_alv-rueck</item>
        <item> AND progr NE ls_alv-progr</item>
        <item> AND wausw EQ ls_alv-wausw. &quot;DP-05_01_201</item>
        <item>* AND isdd eq ls_alv-isdd. &quot;DP-05_01_2</item>
        <item> lv_tabix = sy-tabix.</item>
        <item/>
        <item> w_tot = w_tot + ls_alv-lmnga + ls_alv-xmnga.</item>
        <item/>
        <item> REFRESH r_iedd1.</item>
        <item> CLEAR r_iedd1_line.</item>
        <item> r_iedd1_line-sign = &apos;I&apos;.</item>
        <item> r_iedd1_line-option = &apos;BT&apos;.</item>
        <item> r_iedd1_line-low = ls_alv1-isdd.</item>
        <item> r_iedd1_line-high = ls_alv1-iedd.</item>
        <item> APPEND r_iedd1_line TO r_iedd1.</item>
        <item/>
        <item> REFRESH r_isdz1.</item>
        <item> CLEAR r_isdz1_line.</item>
        <item> r_isdz1_line-sign = &apos;I&apos;.</item>
        <item> r_isdz1_line-option = &apos;BT&apos;.</item>
        <item> r_isdz1_line-low = ls_alv1-isdz.</item>
        <item> r_isdz1_line-high = ls_alv1-iedz.</item>
        <item> APPEND r_isdz1_line TO r_isdz1.</item>
        <item/>
        <item> IF ls_alv-tipo_record EQ &apos;A&apos;.</item>
        <item/>
        <item> IF ls_alv1-isdd IN r_iedd OR</item>
        <item> ls_alv1-iedd IN r_iedd.</item>
        <item> IF ls_alv1-isdz IN r_isdz OR</item>
        <item> ls_alv1-iedz IN r_isdz.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Data / Ora in sovrapposizione tra gli ordini&apos;(023).</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;DP-</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item> IF ls_alv-isdd IN r_iedd1 OR</item>
        <item> ls_alv-iedd IN r_iedd1.</item>
        <item> IF ls_alv-isdz IN r_isdz1 OR</item>
        <item> ls_alv-iedz IN r_isdz1.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Data / Ora in sovrapposizione tra gli ordini&apos;(023).</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;DP-</item>
        <item/>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item/>
        <item> ENDIF.</item>
        <item/>
        <item> ENDLOOP.</item>
        <item/>
        <item> DATA: w_ore TYPE hours.</item>
        <item> DATA: w_datediff TYPE p.</item>
        <item> DATA: w_timediff TYPE p.</item>
        <item> DATA: date_i TYPE d.</item>
        <item> DATA: time_i TYPE t.</item>
        <item> DATA: date_f TYPE d.</item>
        <item> DATA: time_f TYPE t.</item>
        <item/>
        <item> CLEAR: date_i, time_i, date_f, time_f.</item>
        <item> date_i = ls_alv-isdd.</item>
        <item> time_i = ls_alv-isdz.</item>
        <item> date_f = ls_alv-iedd.</item>
        <item> time_f = ls_alv-iedz.</item>
        <item/>
        <item> CLEAR w_datediff.</item>
        <item> CLEAR w_timediff.</item>
        <item> CALL FUNCTION &apos;SD_DATETIME_DIFFERENCE&apos;</item>
        <item> EXPORTING</item>
        <item> date1 = date_i</item>
        <item> time1 = time_i</item>
        <item> date2 = date_f</item>
        <item> time2 = time_f</item>
        <item> IMPORTING</item>
        <item> datediff = w_datediff</item>
        <item> timediff = w_timediff</item>
        <item>* earliest = w_earliest</item>
        <item> EXCEPTIONS</item>
        <item> invalid_datetime = 1</item>
        <item> OTHERS = 2.</item>
        <item/>
        <item> CLEAR w_ore.</item>
        <item> IF w_datediff GT 0.</item>
        <item> w_ore = ( w_datediff * 24 ) + w_timediff.</item>
        <item> ELSE.</item>
        <item> w_ore = w_timediff.</item>
        <item> ENDIF.</item>
        <item/>
        <item> CLEAR ln_zpp_checkconf_og.</item>
        <item> SELECT SINGLE * FROM zpp_checkconf_og</item>
        <item> INTO CORRESPONDING FIELDS OF ln_zpp_checkconf_og</item>
        <item> WHERE tipo_record EQ &apos;A&apos;</item>
        <item> AND cdl EQ ls_alv-cdl.</item>
        <item/>
        <item> IF sy-subrc EQ 0.</item>
        <item> IF ln_zpp_checkconf_og-oregiorno LT w_ore.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Ore giornaliere dichiarate superano il limite consentito&apos;(0</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;DP-09_0</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item/>
        <item> IF ls_alv-tipo_record EQ &apos;A&apos; OR</item>
        <item> ls_alv-tipo_record EQ &apos;P&apos; .</item>
        <item> IF w_tot GT ls_alv-mgvrg.</item>
        <item> w_err = 4.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> ls_alv-descr_esito =</item>
        <item> &apos;Qtà dichiarata eccedente alla qtà dell’operazione dell’ordi</item>
        <item> MODIFY gt_alv FROM ls_alv</item>
        <item> INDEX ls_row</item>
        <item> TRANSPORTING ligth esito descr_esito. &quot;DP-09_0</item>
        <item> EXIT.</item>
        <item> ELSE.</item>
        <item> CLEAR w_err.</item>
        <item> ENDIF.</item>
        <item> ENDIF.</item>
        <item/>
        <item> CHECK w_err EQ 0.</item>
        <item>*DP-14_10_2016 Fine</item>
        <item/>
        <item>*DP-14_10_2016 Inizio controllo ore</item>
        <item> IF w_contr EQ &apos; &apos;.</item>
        <item/>
        <item> DATA: ls_zpp_checkconf_au TYPE zpp_checkconf_au.</item>
        <item> TYPES: BEGIN OF ty_alv_h,</item>
        <item> tipo_record TYPE zpp_tipo_rec,</item>
        <item> wausw TYPE wausw,</item>
        <item> budat TYPE buchdatum,</item>
        <item> ism01 TYPE zpp_ismng,</item>
        <item> END OF ty_alv_h.</item>
        <item> DATA: it_alv_h TYPE STANDARD TABLE OF ty_alv_h.</item>
        <item> DATA: ln_alv_h TYPE ty_alv_h.</item>
        <item> DATA: w_txt TYPE char18.</item>
        <item/>
        <item> REFRESH it_alv_h.</item>
        <item> CLEAR ls_alv1.</item>
        <item> LOOP AT gt_alv INTO ls_alv1.</item>
        <item> CLEAR ln_alv_h.</item>
        <item> MOVE-CORRESPONDING ls_alv1 TO ln_alv_h.</item>
        <item> COLLECT ln_alv_h INTO it_alv_h.</item>
        <item> ENDLOOP.</item>
        <item/>
        <item> CLEAR ls_zpp_checkconf_au.</item>
        <item> SELECT SINGLE *</item>
        <item> INTO CORRESPONDING FIELDS OF ls_zpp_checkconf_au</item>
        <item> FROM zpp_checkconf_au</item>
        <item> WHERE tipo_record EQ ls_alv-tipo_record</item>
        <item> AND limite_ore NE 0.</item>
        <item/>
        <item> IF sy-subrc = 0.</item>
        <item> LOOP AT gt_alv INTO ls_alv1</item>
        <item> WHERE ligth = icon_yellow_light</item>
        <item> AND n_nesting = ls_alv-n_nesting</item>
        <item> AND tipo_record = ls_alv-tipo_record</item>
        <item> AND rueck = ls_alv-rueck</item>
        <item> AND wausw = ls_alv-wausw &quot;DP-05_01_2</item>
        <item> AND isdd = ls_alv-isdd. &quot;DP-05_01_2</item>
        <item/>
        <item> lv_tabix = sy-tabix.</item>
        <item> READ TABLE it_alv_h INTO ln_alv_h</item>
        <item>* WITH KEY tipo_record = ls_alv-tipo_record</item>
        <item>* wausw = ls_alv-wausw</item>
        <item>* budat = ls_alv-budat.</item>
        <item> WITH KEY tipo_record = ls_alv1-tipo_record</item>
        <item> wausw = ls_alv1-wausw</item>
        <item> budat = ls_alv1-budat.</item>
        <item> IF ln_alv_h-ism01 NE ls_zpp_checkconf_au-limite_ore.</item>
        <item> ls_alv1-ligth = icon_red_light.</item>
        <item> w_err = 4.</item>
        <item> ls_alv1-esito = &apos;004&apos;.</item>
        <item> ls_alv1-descr_esito =</item>
        <item> &apos;Ora tot consuntivazione &amp;1 non corrisponde a &amp;2&apos;(025).</item>
        <item> CLEAR w_txt.</item>
        <item> WRITE ln_alv_h-ism01 TO w_txt.</item>
        <item> REPLACE &apos;&amp;1&apos; WITH w_txt INTO ls_alv1-descr_esito.</item>
        <item> CONDENSE ls_alv1-descr_esito.</item>
        <item> CLEAR w_txt.</item>
        <item> WRITE ls_zpp_checkconf_au-limite_ore TO w_txt.</item>
        <item> REPLACE &apos;&amp;2&apos; WITH w_txt INTO ls_alv1-descr_esito.</item>
        <item> CONDENSE ls_alv1-descr_esito.</item>
        <item> MODIFY gt_alv FROM ls_alv1</item>
        <item> INDEX lv_tabix</item>
        <item> TRANSPORTING ligth esito descr_esito.</item>
        <item> ENDIF.</item>
        <item> ENDLOOP.</item>
        <item> ENDIF.</item>
        <item/>
        <item> ENDIF.</item>
        <item>*DP-14_10_2016 Fine</item>
        <item/>
        <item> LOOP AT gt_alv INTO ls_alv WHERE ligth = icon_yellow_light</item>
        <item> AND n_nesting = ls_alv-n_nesting</item>
        <item> AND tipo_record = ls_alv-tipo_recor</item>
        <item> AND rueck = ls_alv-rueck</item>
        <item> AND wausw = ls_alv-wausw &quot;D</item>
        <item> AND isdd = ls_alv-isdd. &quot;D</item>
        <item/>
        <item> lv_tabix = sy-tabix.</item>
        <item>* CHECK lv_tabix = ls_row.</item>
        <item>* DATA: ls_zpp_checkconf_au TYPE zpp_checkconf_au.</item>
        <item>* SELECT SINGLE * INTO CORRESPONDING FIELDS OF ls_zpp_checkconf</item>
        <item>* FROM zpp_checkconf_au</item>
        <item>* WHERE tipo_record = ls_alv-tipo_record</item>
        <item>* AND attiva_conf = abap_true.</item>
        <item>* CHECK sy-subrc = 0.</item>
        <item/>
        <item> CALL FUNCTION &apos;ZPP_GOODSISSUE_PROD&apos;</item>
        <item> EXPORTING</item>
        <item> i_tipo_rec = ls_alv-tipo_record</item>
        <item> i_aufnr = ls_alv-aufnr</item>
        <item> i_vornr = ls_alv-vornr</item>
        <item> IMPORTING</item>
        <item> e_esito = ls_alv-esito</item>
        <item> e_descr_esito = ls_alv-descr_esito.</item>
        <item/>
        <item> CLEAR: ls_data.</item>
        <item> MOVE-CORRESPONDING ls_alv TO ls_data.</item>
        <item> IF ( lv_err = abap_false ).</item>
        <item>********************************************</item>
        <item>* Registrazione delle conferme di produzione e aggiornamento t</item>
        <item> CALL FUNCTION &apos;ZPP_REGCONF_PROD&apos;</item>
        <item> IMPORTING</item>
        <item> e_esito = ls_alv-esito</item>
        <item> e_descr_esito = ls_alv-descr_esito</item>
        <item> CHANGING</item>
        <item> cs_confirm = ls_data.</item>
        <item>********************************************</item>
        <item> IF ( ls_alv-esito = &apos;000&apos; ).</item>
        <item>* ls_alv-ligth = icon_green_light. &quot;DP-04_01_2017</item>
        <item> ls_alv-ligth = icon_system_okay. &quot;DP-04_01_2017</item>
        <item> ls_alv-elaborato = &apos;X&apos;. &quot;DP-05_01_2017</item>
        <item> ls_alv-data = sy-datum. &quot;Ticket 8498 - Ins - Tonolli_G -</item>
        <item> ls_alv-ora = sy-uzeit. &quot;Ticket 8498 - Ins - Tonolli_G -</item>
        <item>*DP-04_01_2017 Inizio</item>
        <item> DATA: ls_order_objects TYPE bapi_pp_order_objects.</item>
        <item/>
        <item> TYPES: BEGIN OF ty_s_operation.</item>
        <item> INCLUDE TYPE bapi_order_operation1.</item>
        <item> TYPES: END OF ty_s_operation.</item>
        <item/>
        <item> TYPES: ty_t_operation TYPE TABLE OF ty_s_operation.</item>
        <item> DATA: lt_operation TYPE ty_t_operation.</item>
        <item> DATA: ls_operation LIKE LINE OF lt_operation.</item>
        <item> DATA: ls_return TYPE bapiret2.</item>
        <item> DATA: ln_aufm TYPE aufm.</item>
        <item/>
        <item> REFRESH lt_operation.</item>
        <item> CLEAR ls_return.</item>
        <item/>
        <item> CLEAR ls_order_objects.</item>
        <item> ls_order_objects-operations = &apos;O&apos;.</item>
        <item> ls_order_objects-components = &apos;C&apos;.</item>
        <item/>
        <item> CALL FUNCTION &apos;BAPI_PRODORD_GET_DETAIL&apos;</item>
        <item> EXPORTING</item>
        <item> number = ls_alv-aufnr</item>
        <item> order_objects = ls_order_objects</item>
        <item> IMPORTING</item>
        <item> return = ls_return</item>
        <item> TABLES</item>
        <item> operation = lt_operation.</item>
        <item/>
        <item> LOOP AT lt_operation INTO ls_operation</item>
        <item> WHERE operation_number EQ ls_alv-vornr</item>
        <item> EXIT.</item>
        <item> ENDLOOP.</item>
        <item/>
        <item> IF ls_operation-opr_cntrl_key EQ &apos;ZP03&apos;.</item>
        <item> IF ls_alv-event EQ &apos;B40&apos;.</item>
        <item/>
        <item> WAIT UP TO 3 SECONDS.</item>
        <item/>
        <item> SELECT SINGLE * FROM aufm</item>
        <item> INTO ln_aufm</item>
        <item> WHERE aufnr EQ ls_alv-aufnr</item>
        <item> AND bwart EQ &apos;101&apos;.</item>
        <item> IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM aufm</item>
        <item/>
        <item> SUBMIT zpp_stampa_modulo_manufactur</item>
        <item> WITH p_aufnr EQ ls_alv-aufnr</item>
        <item> WITH p_badge EQ ls_alv-wausw</item>
        <item> WITH p_submit EQ &apos;X&apos;</item>
        <item> AND RETURN.</item>
        <item/>
        <item> ELSE. &quot;IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM auf</item>
        <item/>
        <item> CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;</item>
        <item> EXPORTING</item>
        <item> wait = &apos;X&apos;.</item>
        <item/>
        <item> DO 120 TIMES.</item>
        <item> SELECT SINGLE * FROM aufm</item>
        <item> INTO ln_aufm</item>
        <item> WHERE aufnr EQ ls_alv-aufnr</item>
        <item> AND bwart EQ &apos;101&apos;.</item>
        <item> IF sy-subrc EQ 0.</item>
        <item/>
        <item> SUBMIT zpp_stampa_modulo_manufactur</item>
        <item> WITH p_aufnr EQ ls_alv-aufnr</item>
        <item> WITH p_badge EQ ls_alv-wausw</item>
        <item> WITH p_submit EQ &apos;X&apos;</item>
        <item> AND RETURN.</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDDO.</item>
        <item/>
        <item> ENDIF. &quot;IF sy-subrc EQ 0. &quot;SELECT SINGLE * FROM au</item>
        <item> ENDIF. &quot;IF ls_alv-event EQ &apos;B40&apos;.</item>
        <item> ENDIF. &quot;IF ls_operation-opr_cntrl_key EQ &apos;ZP03&apos;.</item>
        <item>*DP-04_01_2017 Fine</item>
        <item> ELSE.</item>
        <item> ls_alv-ligth = icon_red_light.</item>
        <item> lv_err = abap_true.</item>
        <item> ENDIF.</item>
        <item> ELSE.</item>
        <item> ls_alv-ligth = icon_cancel.</item>
        <item> ls_alv-descr_esito = &apos;Posizione già elaborata&apos;(019).</item>
        <item> ENDIF.</item>
        <item/>
        <item> MODIFY gt_alv FROM ls_alv INDEX lv_tabix. &quot;&lt;------</item>
        <item/>
        <item> IF ( lv_err = abap_true ).</item>
        <item> EXIT.</item>
        <item> ENDIF.</item>
        <item> ENDLOOP.</item>
        <item>* END SV TICKET 7027</item>
        <item> ENDIF.</item>
        <item> ENDLOOP. &quot;LOOP AT it_rows INTO ln_data.</item>
        <item/>
        <item> ENDMETHOD.</item>
      </BATCH_CONFIRM>
      <GET_SEL>
        <item> method get_sel.</item>
        <item/>
        <item> rs_sel = gs_sel.</item>
        <item/>
        <item> endmethod.</item>
      </GET_SEL>
      <GET_TAB>
        <item> method get_tab.</item>
        <item/>
        <item> rs_data = gt_data.</item>
        <item/>
        <item> endmethod.</item>
      </GET_TAB>
    </METHOD_SOURCE>
  </CLASS_ROOT>
